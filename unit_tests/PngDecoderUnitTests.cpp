#include <CppUnitTest.h>
#include "../source/png/PngDecoder.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace PngDecoderUnitTests
{
	TEST_CLASS(BasicBehavioralTests)
	{
	public:

		TEST_METHOD(PngDecodeSizeTest)
		{
			// This is a 4x4 RGBA image, roughly like this
			// B1 B1 B1 R1
			// R2 R2 R2 R2
			// R2 R2 R2 R2
			// R2 R2 R2 R2
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xf1, 0x9e,
				0x7e, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00,
				0x00, 0x04, 0x67, 0x41, 0x4d, 0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 0x05, 0x00, 0x00,
				0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0e, 0xc3, 0x00, 0x00, 0x0e, 0xc3, 0x01, 0xc7,
				0x6f, 0xa8, 0x64, 0x00, 0x00, 0x00, 0x28, 0x49, 0x44, 0x41, 0x54, 0x18, 0x57, 0x63, 0x64, 0x58,
				0xf4, 0xe2, 0x3f, 0x03, 0x14, 0xfc, 0x8f, 0x93, 0x60, 0x60, 0xfc, 0xcf, 0xc0, 0x02, 0x17, 0x00,
				0x01, 0x26, 0x28, 0x0d, 0x07, 0x40, 0x81, 0x3f, 0x50, 0x26, 0x08, 0x30, 0x30, 0x00, 0x00, 0x64,
				0x58, 0x07, 0x03, 0xb6, 0xc1, 0xfd, 0x76, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
				0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			// Expected size is 4 x 4 x 4 = 64
			// If this is 68, then you include the first byte whish represents filtering and not thecolor
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);
			Assert::AreEqual((size_t)64, actual.size());
		}

		TEST_METHOD(PngDecodeDimensionsTest1)
		{
			// This is a 4x4 RGBA image, roughly like this
			// B1 B1 B1 R1
			// R2 R2 R2 R2
			// R2 R2 R2 R2
			// R2 R2 R2 R2
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xf1, 0x9e,
				0x7e, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00,
				0x00, 0x04, 0x67, 0x41, 0x4d, 0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 0x05, 0x00, 0x00,
				0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0e, 0xc3, 0x00, 0x00, 0x0e, 0xc3, 0x01, 0xc7,
				0x6f, 0xa8, 0x64, 0x00, 0x00, 0x00, 0x28, 0x49, 0x44, 0x41, 0x54, 0x18, 0x57, 0x63, 0x64, 0x58,
				0xf4, 0xe2, 0x3f, 0x03, 0x14, 0xfc, 0x8f, 0x93, 0x60, 0x60, 0xfc, 0xcf, 0xc0, 0x02, 0x17, 0x00,
				0x01, 0x26, 0x28, 0x0d, 0x07, 0x40, 0x81, 0x3f, 0x50, 0x26, 0x08, 0x30, 0x30, 0x00, 0x00, 0x64,
				0x58, 0x07, 0x03, 0xb6, 0xc1, 0xfd, 0x76, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
				0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);
			Assert::AreEqual((UINT)4, imageDescriptor.width);
			Assert::AreEqual((UINT)4, imageDescriptor.height);
		}

		TEST_METHOD(PngFormatTest)
		{
			// This is a 4x4 RGBA image, roughly like this
			// B1 B1 B1 R1
			// R2 R2 R2 R2
			// R2 R2 R2 R2
			// R2 R2 R2 R2
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xf1, 0x9e,
				0x7e, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00,
				0x00, 0x04, 0x67, 0x41, 0x4d, 0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 0x05, 0x00, 0x00,
				0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0e, 0xc3, 0x00, 0x00, 0x0e, 0xc3, 0x01, 0xc7,
				0x6f, 0xa8, 0x64, 0x00, 0x00, 0x00, 0x28, 0x49, 0x44, 0x41, 0x54, 0x18, 0x57, 0x63, 0x64, 0x58,
				0xf4, 0xe2, 0x3f, 0x03, 0x14, 0xfc, 0x8f, 0x93, 0x60, 0x60, 0xfc, 0xcf, 0xc0, 0x02, 0x17, 0x00,
				0x01, 0x26, 0x28, 0x0d, 0x07, 0x40, 0x81, 0x3f, 0x50, 0x26, 0x08, 0x30, 0x30, 0x00, 0x00, 0x64,
				0x58, 0x07, 0x03, 0xb6, 0xc1, 0xfd, 0x76, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
				0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			// Expected size is 4 x 4 x 4 = 64
			// If this is 68, then you include the first byte whish represents filtering and not thecolor
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGBA8 == imageDescriptor.format);
		}

		TEST_METHOD(PngRgbTest)
		{
			// This is a 4x4 RGBA image, roughly like this
			// B1 B1 B1 R1
			// R2 R2 R2 R2
			// R2 R2 R2 R2
			// R2 R2 R2 R2
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x08, 0x02, 0x00, 0x00, 0x00, 0x02, 0x50, 0x58,
				0xea, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00,
				0x00, 0x04, 0x67, 0x41, 0x4d, 0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 0x05, 0x00, 0x00,
				0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0e, 0xc3, 0x00, 0x00, 0x0e, 0xc3, 0x01, 0xc7,
				0x6f, 0xa8, 0x64, 0x00, 0x00, 0x00, 0x35, 0x49, 0x44, 0x41, 0x54, 0x28, 0x53, 0x7d, 0xc9, 0xb1,
				0x09, 0x00, 0x20, 0x10, 0x04, 0xc1, 0x0f, 0x2d, 0xc3, 0xda, 0x05, 0x53, 0xeb, 0x7a, 0xb1, 0x09,
				0x31, 0x93, 0x01, 0x85, 0x49, 0xf6, 0x2e, 0xa2, 0xe5, 0x4b, 0xe9, 0xf3, 0x77, 0x1f, 0x36, 0x6c,
				0xd8, 0xa8, 0x63, 0x39, 0xdd, 0x6c, 0xd8, 0xb0, 0x61, 0xdf, 0x5a, 0x6e, 0x04, 0xe8, 0x9a, 0x24,
				0x67, 0x92, 0xa0, 0x44, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);
			Assert::AreEqual((UINT)10, imageDescriptor.width);
			Assert::AreEqual((UINT)10, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGB8 == imageDescriptor.format);
		}
	};

	TEST_CLASS(RealPngImages)
	{
	public:

		TEST_METHOD(PaintAllRed4x4)
		{
			/* A 4x4 mage containing all red pixels, saved in Microsoft Paint */
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xf1, 0x9e,
				0x7e, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00,
				0x00, 0x04, 0x67, 0x41, 0x4d, 0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 0x05, 0x00, 0x00,
				0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0e, 0xc3, 0x00, 0x00, 0x0e, 0xc3, 0x01, 0xc7,
				0x6f, 0xa8, 0x64, 0x00, 0x00, 0x00, 0x13, 0x49, 0x44, 0x41, 0x54, 0x18, 0x57, 0x63, 0xf8, 0xcf,
				0xc0, 0xf0, 0x1f, 0x19, 0x93, 0x2c, 0xc0, 0xf0, 0x1f, 0x00, 0x3c, 0x40, 0x1f, 0xe1, 0xe4, 0x15,
				0xdf, 0xb3, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			std::vector<BYTE> expected = {
				0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff,
				0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff,
				0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff,
				0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0xff
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);

			// Test the metadata calculation
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);
			Assert::AreEqual((UINT)4, imageDescriptor.width);
			Assert::AreEqual((UINT)4, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGBA8 == imageDescriptor.format);

			Assert::AreEqual(expected.size(), actual.size(), L"Output vector size is incorrect");
			for (int i = 0; i < expected.size(); i++)
			{
				Assert::AreEqual(expected[i], actual[i]);
			}
		}

		TEST_METHOD(PaintRedGreenRainbow4x4)
		{
			/* A 4x4 mage containing red and green rainbow, saved in Microsoft Paint */
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x08, 0x06, 0x00, 0x00, 0x00, 0xa9, 0xf1, 0x9e,
				0x7e, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00,
				0x00, 0x04, 0x67, 0x41, 0x4d, 0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 0x05, 0x00, 0x00,
				0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0e, 0xc3, 0x00, 0x00, 0x0e, 0xc3, 0x01, 0xc7,
				0x6f, 0xa8, 0x64, 0x00, 0x00, 0x00, 0x2d, 0x49, 0x44, 0x41, 0x54, 0x18, 0x57, 0x15, 0xc8, 0x41,
				0x0d, 0x00, 0x00, 0x0c, 0xc2, 0x40, 0xa4, 0x21, 0x0d, 0x69, 0x38, 0x63, 0x5d, 0x93, 0x7e, 0x4e,
				0x23, 0x59, 0x53, 0xb8, 0x6c, 0x69, 0x06, 0x0c, 0xf8, 0x21, 0x40, 0x80, 0x00, 0x79, 0x28, 0x50,
				0xa0, 0x40, 0xab, 0x1d, 0x06, 0xb2, 0x1e, 0xee, 0x44, 0x79, 0xef, 0x02, 0x00, 0x00, 0x00, 0x00,
				0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			std::vector<BYTE> expected = {
				0xff, 0xff, 0xff, 0xff, 0x00, 0x40, 0x00, 0xff, 0x00, 0x80, 0x00, 0xff, 0x00, 0xc0, 0x00, 0xff,
				0x40, 0x00, 0x00, 0xff, 0x40, 0x40, 0x00, 0xff, 0x40, 0x80, 0x00, 0xff, 0x40, 0xc0, 0x00, 0xff,
				0x80, 0x00, 0x00, 0xff, 0x80, 0x40, 0x00, 0xff, 0x80, 0x80, 0x00, 0xff, 0x80, 0xc0, 0x00, 0xff,
				0xc0, 0x00, 0x00, 0xff, 0xc0, 0x40, 0x00, 0xff, 0xc0, 0x80, 0x00, 0xff, 0xc0, 0xc0, 0x00, 0xff
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);

			// Test the metadata calculation
			Assert::AreEqual((UINT)4, imageDescriptor.width);
			Assert::AreEqual((UINT)4, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGBA8 == imageDescriptor.format);

			Assert::AreEqual(expected.size(), actual.size(), L"Output vector size is incorrect");
			for (int i = 0; i < expected.size(); i++)
			{
				Assert::AreEqual(expected[i], actual[i]);
			}
		}
	};

	TEST_CLASS(PngSuiteImageFiltering)
	{
	public:

		TEST_METHOD(PngSuite_f00n0g08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x56, 0x11, 0x25,
				0x28, 0x00, 0x00, 0x01, 0x06, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x85, 0xd2, 0x2f, 0x4c, 0x42,
				0x51, 0x14, 0xc7, 0xf1, 0xaf, 0xe0, 0x18, 0x73, 0x63, 0x06, 0x37, 0x37, 0x02, 0x81, 0x62, 0xa0,
				0x58, 0x48, 0xaf, 0xbc, 0xf4, 0x9a, 0x89, 0x66, 0xb3, 0x11, 0x69, 0x54, 0x23, 0x8d, 0x48, 0xb3,
				0xd1, 0x6c, 0x26, 0x12, 0x89, 0x62, 0xb1, 0x58, 0x0c, 0x16, 0x37, 0x83, 0x9b, 0x1b, 0x9b, 0x9b,
				0x73, 0x0c, 0xe4, 0xe9, 0xfd, 0xe3, 0x76, 0xce, 0xf5, 0x85, 0x73, 0xeb, 0xfd, 0xec, 0x9e, 0xdf,
				0xfd, 0xdd, 0xcb, 0xf5, 0x64, 0x3a, 0xbb, 0x99, 0xdf, 0xde, 0x2d, 0x96, 0xab, 0xfb, 0x87, 0xc7,
				0xa7, 0xe7, 0x97, 0xd7, 0xb7, 0xf7, 0xf5, 0xc7, 0xe7, 0xd7, 0x66, 0xbb, 0xfb, 0xde, 0x97, 0xe5,
				0x0f, 0x63, 0x43, 0x30, 0x32, 0x04, 0x43, 0x43, 0x70, 0x65, 0x08, 0x2e, 0x0d, 0xc1, 0xc0, 0x10,
				0x5c, 0x18, 0x82, 0x42, 0x0b, 0xc2, 0x4a, 0x04, 0xb9, 0x12, 0x50, 0x15, 0x64, 0x22, 0xdc, 0x96,
				0x9f, 0x92, 0x0a, 0xfa, 0x22, 0x20, 0xe6, 0x00, 0x95, 0x83, 0x73, 0x11, 0x10, 0x92, 0xba, 0x13,
				0x54, 0x52, 0x7a, 0x22, 0xc0, 0x27, 0xf5, 0x21, 0xd4, 0x5d, 0x38, 0x13, 0x81, 0x7f, 0xb9, 0x90,
				0x52, 0xdd, 0x96, 0xae, 0x08, 0xf0, 0x39, 0x70, 0x67, 0xa8, 0x3e, 0xe8, 0x88, 0x00, 0x37, 0x05,
				0x7f, 0x5b, 0xd5, 0x18, 0x6d, 0x11, 0xe1, 0xf4, 0x30, 0x45, 0x75, 0xca, 0xa9, 0x08, 0xbf, 0x1f,
				0xfb, 0x50, 0xad, 0x73, 0x22, 0xc2, 0xed, 0x27, 0x7d, 0x04, 0xc1, 0xb1, 0x08, 0x48, 0xfa, 0x88,
				0x82, 0x96, 0x08, 0xa2, 0x20, 0xf6, 0xf1, 0x27, 0x38, 0x4a, 0x45, 0x58, 0xfa, 0xf5, 0x69, 0x56,
				0x45, 0xf2, 0x3f, 0x68, 0x24, 0x22, 0xcb, 0x8b, 0x7f, 0x3f, 0x88, 0x43, 0x43, 0x50, 0x37, 0x04,
				0x35, 0x43, 0x70, 0x60, 0x08, 0x2c, 0x81, 0x25, 0xb0, 0xc4, 0x2f, 0xc4, 0x7d, 0xca, 0x58, 0x50,
				0xa6, 0xce, 0xb6, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::ColorTypeNotSupported == error);
		}

		TEST_METHOD(PngSuite_f00n2c08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x00, 0x00, 0xfc, 0x18, 0xed,
				0xa3, 0x00, 0x00, 0x09, 0x72, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x75, 0x96, 0x6f, 0x70, 0x54,
				0xe5, 0x15, 0xc6, 0x9f, 0xf7, 0xde, 0xdd, 0x4d, 0x36, 0xb0, 0xc9, 0x86, 0xb0, 0x09, 0x2c, 0x49,
				0xb3, 0x01, 0xd9, 0x0c, 0xb0, 0xfc, 0x11, 0x96, 0xa6, 0xb8, 0x68, 0xd0, 0x45, 0x82, 0xb0, 0x80,
				0x40, 0x76, 0x82, 0x0c, 0xf1, 0x46, 0x87, 0x10, 0xd8, 0x96, 0x84, 0x0e, 0xb3, 0x04, 0x07, 0x62,
				0xb6, 0x82, 0x09, 0x0c, 0x6b, 0x22, 0xa2, 0x64, 0x3b, 0x20, 0xb1, 0x94, 0x4d, 0xc2, 0x48, 0x43,
				0x61, 0x81, 0xb4, 0x56, 0x8c, 0xb7, 0xfc, 0x89, 0xa0, 0x81, 0x65, 0x28, 0x52, 0xa8, 0x7a, 0x43,
				0xc0, 0xa0, 0x48, 0x2f, 0x14, 0xad, 0x7c, 0x7c, 0xba, 0x4c, 0x28, 0x38, 0xda, 0x9e, 0x4f, 0xef,
				0x9c, 0x0f, 0xbf, 0xe7, 0x9c, 0xf7, 0x9c, 0x77, 0x9e, 0x17, 0x44, 0x32, 0x93, 0xd3, 0x68, 0xcd,
				0xe2, 0x90, 0x5c, 0x3a, 0xf2, 0x39, 0x6a, 0x3c, 0x1f, 0x2d, 0xe0, 0x94, 0x42, 0x3e, 0x59, 0xc4,
				0x59, 0xf3, 0xb8, 0xa0, 0x84, 0x8b, 0x15, 0xbe, 0x58, 0xc1, 0x40, 0x15, 0x57, 0x57, 0x73, 0x5d,
				0x2d, 0x37, 0xd4, 0x73, 0x4b, 0x23, 0xdf, 0x6c, 0xe2, 0xce, 0x66, 0xee, 0x69, 0xe5, 0xbe, 0xfd,
				0x3c, 0xd4, 0xc1, 0xa3, 0x9d, 0x3c, 0xd1, 0xc5, 0xee, 0xb3, 0xbc, 0x70, 0x91, 0x5f, 0x68, 0xec,
				0xbb, 0x4e, 0xfd, 0x16, 0xbf, 0xbf, 0x4b, 0x12, 0x7a, 0x4e, 0x12, 0x73, 0x93, 0xe9, 0x4c, 0xe3,
				0xd8, 0x2c, 0xba, 0x73, 0xe9, 0xc9, 0xa7, 0x77, 0x3c, 0x67, 0x15, 0x70, 0x7e, 0x21, 0x17, 0x15,
				0xb1, 0x6c, 0x1e, 0x2b, 0x4a, 0x58, 0xa9, 0x30, 0x58, 0xc1, 0xf5, 0x55, 0xdc, 0x58, 0xcd, 0x2d,
				0xb5, 0x7c, 0xa3, 0x9e, 0xbf, 0x6d, 0xe4, 0xef, 0x9a, 0xd8, 0xd6, 0xcc, 0xfd, 0xad, 0x3c, 0xb2,
				0x9f, 0x47, 0x3b, 0x78, 0xa2, 0x93, 0x9f, 0x74, 0xf1, 0xfc, 0x59, 0x5e, 0xbe, 0xc8, 0x5e, 0x8d,
				0x5f, 0x5f, 0xe7, 0xed, 0x5b, 0xbc, 0x7b, 0x17, 0x5a, 0x41, 0x92, 0xee, 0x49, 0x62, 0x61, 0x32,
				0x9f, 0x4e, 0xe3, 0xec, 0x2c, 0xce, 0xcf, 0x65, 0x49, 0x3e, 0x4b, 0xc7, 0x73, 0x69, 0x01, 0x03,
				0x85, 0x5c, 0x55, 0xc4, 0x35, 0xf3, 0xb8, 0xbe, 0x84, 0x1b, 0x14, 0x6e, 0xae, 0x60, 0x63, 0x15,
				0xdf, 0xaa, 0xe6, 0x8e, 0x5a, 0xee, 0xae, 0x67, 0x5b, 0x23, 0xdb, 0x9b, 0x78, 0xa8, 0x99, 0xef,
				0xb5, 0x52, 0xdd, 0xcf, 0xae, 0x0e, 0x76, 0x77, 0xf2, 0x7c, 0x17, 0x2f, 0x9d, 0x65, 0xcf, 0x45,
				0xf6, 0x69, 0xbc, 0x79, 0x9d, 0x77, 0x6e, 0x21, 0x3e, 0xc7, 0xa4, 0x2d, 0x4c, 0xd2, 0x17, 0x25,
				0x51, 0x49, 0xe6, 0xd2, 0x34, 0xae, 0xc8, 0x62, 0x65, 0x2e, 0x57, 0xe7, 0x73, 0xed, 0x78, 0xd6,
				0x14, 0x70, 0x43, 0x21, 0x37, 0x15, 0xf1, 0xb5, 0x79, 0x7c, 0xa3, 0x84, 0x4d, 0x0a, 0x77, 0x56,
				0x70, 0x77, 0x15, 0x5b, 0xab, 0xb9, 0xaf, 0x96, 0x07, 0xea, 0x79, 0xa4, 0x91, 0x7f, 0x69, 0xa2,
				0xda, 0xcc, 0x93, 0xad, 0xfc, 0x78, 0x3f, 0xe3, 0x1d, 0xbc, 0xd0, 0xc9, 0xcb, 0x5d, 0xec, 0x39,
				0xcb, 0x2f, 0x2f, 0xf2, 0x86, 0xc6, 0x5b, 0xd7, 0xa1, 0x96, 0x19, 0xe3, 0x15, 0x46, 0xad, 0xca,
				0xa4, 0xaf, 0x31, 0xb1, 0x36, 0x89, 0x1b, 0xd2, 0x58, 0x9f, 0xc5, 0x2d, 0xb9, 0x6c, 0xcc, 0xe7,
				0xb6, 0x71, 0x6c, 0x2a, 0xe0, 0x8e, 0x42, 0xbe, 0x53, 0xc4, 0x3d, 0x73, 0xd9, 0x56, 0xc2, 0x7d,
				0x0a, 0xff, 0x58, 0xc1, 0x43, 0x95, 0xfc, 0x53, 0x35, 0xdf, 0xaf, 0xa5, 0x5a, 0xcf, 0x13, 0x0d,
				0x3c, 0xd5, 0xc4, 0xee, 0x66, 0x9e, 0x6b, 0xe1, 0x85, 0x76, 0x5e, 0xea, 0xe0, 0xe7, 0x9d, 0xec,
				0x3d, 0xc9, 0xbe, 0x33, 0xbc, 0x71, 0x91, 0xba, 0x86, 0x58, 0x95, 0x41, 0x5d, 0x6b, 0x8c, 0xff,
				0xc6, 0xa8, 0x6d, 0x31, 0xe9, 0x6f, 0x9a, 0xd8, 0x9c, 0xc4, 0xdd, 0x69, 0x8c, 0x66, 0xb1, 0x2d,
				0x97, 0xef, 0xe6, 0xb3, 0x7d, 0x1c, 0x0f, 0x14, 0xf0, 0x50, 0x21, 0x3b, 0x8a, 0xf8, 0xde, 0x5c,
				0x1e, 0x2d, 0xa1, 0xaa, 0xf0, 0x78, 0x05, 0xbb, 0x2a, 0x79, 0xba, 0x9a, 0xdd, 0xb5, 0x8c, 0xd7,
				0xf3, 0x7c, 0x03, 0x3f, 0x6d, 0xe2, 0xa5, 0x66, 0x7e, 0xd6, 0xc2, 0x9e, 0x76, 0x5e, 0xed, 0x60,
				0x5f, 0x27, 0xbf, 0x3e, 0xc9, 0x9b, 0x67, 0x78, 0xeb, 0x22, 0xa2, 0xeb, 0x0d, 0xb1, 0x3a, 0x83,
				0xfa, 0xba, 0x31, 0xbe, 0xc3, 0xa8, 0xb5, 0x9a, 0xf4, 0x83, 0x26, 0x76, 0x26, 0x51, 0x4d, 0xe3,
				0xb1, 0x2c, 0x9e, 0xc8, 0x65, 0x57, 0x3e, 0x4f, 0x8d, 0xe3, 0xc7, 0x05, 0xec, 0x2e, 0xe4, 0xd9,
				0x22, 0x9e, 0x9b, 0xcb, 0xf3, 0x25, 0xbc, 0xa0, 0xf0, 0x62, 0x05, 0x2f, 0x55, 0xf2, 0x1f, 0xd5,
				0xfc, 0xbc, 0x96, 0x3d, 0xf5, 0xec, 0x6d, 0xe0, 0xb5, 0x26, 0xf6, 0x35, 0xf3, 0xab, 0x16, 0xde,
				0x68, 0xe7, 0xcd, 0x0e, 0xea, 0x9d, 0xbc, 0x7d, 0x92, 0x77, 0xce, 0x20, 0xf2, 0xaa, 0x21, 0xba,
				0xd5, 0x10, 0xdb, 0x69, 0x50, 0xf7, 0x1a, 0xe3, 0x87, 0x8d, 0xda, 0x31, 0x93, 0x1e, 0x37, 0x51,
				0x4b, 0x62, 0x4f, 0x1a, 0xaf, 0x64, 0xb1, 0x37, 0x97, 0x57, 0xf3, 0x79, 0x6d, 0x1c, 0xbf, 0x2c,
				0x60, 0x5f, 0x21, 0xaf, 0x17, 0xf1, 0xab, 0xb9, 0xfc, 0xba, 0x84, 0x37, 0x14, 0x7e, 0x53, 0xc1,
				0x9b, 0x95, 0xfc, 0x67, 0x35, 0xf5, 0x5a, 0xde, 0xaa, 0xe7, 0xed, 0x06, 0xfe, 0xab, 0x89, 0x77,
				0x9a, 0xf9, 0x6d, 0x0b, 0xbf, 0x6b, 0xe7, 0xbf, 0x3b, 0xf8, 0x7d, 0x27, 0xef, 0x9e, 0x44, 0x38,
				0x2c, 0x47, 0x22, 0x72, 0x34, 0x2a, 0xc7, 0x62, 0x06, 0x55, 0x35, 0xc4, 0xe3, 0x06, 0x4d, 0x33,
				0xea, 0xba, 0x91, 0x34, 0x91, 0xa9, 0x64, 0x26, 0xf9, 0x33, 0xd2, 0x89, 0x9f, 0x04, 0xf9, 0x3c,
				0xb9, 0x8c, 0xac, 0x24, 0xd7, 0x90, 0x2f, 0x93, 0x75, 0x64, 0x03, 0xb9, 0x9d, 0xdc, 0x45, 0xb6,
				0x90, 0xed, 0xe4, 0x11, 0xf2, 0x03, 0xac, 0x0a, 0xc9, 0xeb, 0xc2, 0x72, 0x5d, 0x44, 0xde, 0x1a,
				0x95, 0xdf, 0x8e, 0x19, 0xf6, 0xaa, 0x86, 0x23, 0x71, 0xc3, 0x71, 0xcd, 0x78, 0x4e, 0x37, 0xf6,
				0xd0, 0x74, 0x85, 0xa9, 0xbd, 0xcc, 0xfc, 0x29, 0xbd, 0x3f, 0xbe, 0xe1, 0xf3, 0x37, 0xb9, 0xec,
				0x26, 0x2b, 0x75, 0xae, 0xb9, 0xc5, 0x97, 0x6f, 0xb3, 0xee, 0x36, 0x1b, 0xee, 0x70, 0xfb, 0xb7,
				0xdc, 0xf5, 0x2d, 0x5b, 0xbe, 0x63, 0xfb, 0xf7, 0x3c, 0x82, 0x45, 0x41, 0xa9, 0x2c, 0x24, 0xaf,
				0x08, 0xcb, 0xab, 0x23, 0xf2, 0xfa, 0xa8, 0x5c, 0x1f, 0x33, 0x6c, 0x55, 0x0d, 0x3b, 0xe3, 0x86,
				0x36, 0xcd, 0x18, 0xd3, 0x8d, 0x1f, 0xd2, 0xf4, 0x00, 0xf7, 0x11, 0x9d, 0xa7, 0x39, 0xee, 0x13,
				0xfe, 0xfc, 0x0c, 0x9f, 0x78, 0x90, 0xfc, 0x94, 0xcf, 0xff, 0x9d, 0xcb, 0x2e, 0xb3, 0xf2, 0x33,
				0xae, 0xf9, 0x82, 0x2f, 0xf7, 0xb0, 0xae, 0x97, 0x0d, 0xd7, 0xb8, 0xbd, 0x8f, 0xbb, 0xbe, 0x62,
				0xcb, 0x0d, 0xb6, 0xe3, 0xa9, 0x80, 0xf4, 0x4c, 0x50, 0x7a, 0x36, 0x24, 0x2d, 0x0a, 0x4b, 0x4a,
				0x44, 0x5a, 0x1e, 0x95, 0x57, 0xc5, 0xe4, 0x97, 0x54, 0xf9, 0x95, 0xb8, 0x21, 0xac, 0x19, 0xde,
				0xd2, 0x0d, 0xfd, 0xa0, 0x16, 0xda, 0xf6, 0x32, 0x67, 0x1f, 0x47, 0xee, 0xe7, 0xd8, 0x83, 0x9c,
				0x7c, 0x98, 0x8f, 0xf7, 0xe7, 0x3f, 0xa0, 0x5f, 0x65, 0xe9, 0x71, 0x96, 0x77, 0x71, 0xe5, 0x69,
				0x06, 0xbb, 0x59, 0x73, 0x8e, 0x75, 0x7f, 0x63, 0xc3, 0x45, 0x6e, 0xbf, 0xcc, 0x5d, 0x9f, 0xb3,
				0x05, 0x13, 0x14, 0x31, 0x39, 0x20, 0x3d, 0x16, 0x94, 0xa6, 0x85, 0xa4, 0x19, 0x61, 0xc9, 0x17,
				0x91, 0x16, 0x46, 0xe5, 0xc5, 0x31, 0xf9, 0x05, 0x55, 0x5e, 0x1e, 0x37, 0xac, 0xd2, 0xee, 0x0b,
				0x6c, 0xa4, 0x65, 0x13, 0x6d, 0x61, 0xe6, 0xbc, 0xce, 0x91, 0x6f, 0x72, 0xec, 0x83, 0x0e, 0xf6,
				0x70, 0x4e, 0x1b, 0xfd, 0x7f, 0x60, 0xe9, 0x01, 0x96, 0x1f, 0xe6, 0xca, 0x3f, 0x33, 0x78, 0x94,
				0x35, 0x2a, 0xeb, 0x4e, 0xb0, 0xe1, 0x14, 0xb7, 0x77, 0x73, 0x17, 0x1c, 0x7e, 0xf1, 0x88, 0x22,
				0xf2, 0x03, 0x92, 0x2b, 0x28, 0x4d, 0x08, 0x49, 0xee, 0xb0, 0x34, 0x25, 0x22, 0x3d, 0x11, 0x95,
				0xbd, 0x31, 0x79, 0xa6, 0x2a, 0xcf, 0x8d, 0xdf, 0x17, 0x28, 0xa3, 0xb1, 0x9c, 0x96, 0x00, 0x6d,
				0x55, 0xcc, 0xf9, 0xe1, 0x18, 0x36, 0xf3, 0xe9, 0x06, 0xce, 0xd9, 0x46, 0x7f, 0x84, 0xa5, 0x6f,
				0xb3, 0x7c, 0x37, 0x57, 0xb6, 0x32, 0xb8, 0x8f, 0x35, 0x07, 0x59, 0xd7, 0xc1, 0x86, 0xf7, 0xb9,
				0x1d, 0x19, 0x3e, 0x61, 0xf3, 0x8b, 0x21, 0x8a, 0xb0, 0x07, 0xa4, 0x9c, 0xa0, 0xe4, 0x08, 0x49,
				0x23, 0xc2, 0x92, 0x33, 0x22, 0x8d, 0x8a, 0xca, 0x63, 0x63, 0xf2, 0x04, 0x55, 0xee, 0x07, 0x79,
				0x74, 0xc3, 0x34, 0x1a, 0x67, 0xd0, 0xf2, 0xa3, 0x39, 0xff, 0x92, 0x8f, 0xff, 0x9a, 0x4f, 0x57,
				0x73, 0x4e, 0x0d, 0xfd, 0x1b, 0x58, 0xba, 0x99, 0xe5, 0xaf, 0x73, 0xe5, 0x76, 0x06, 0x77, 0xb2,
				0x66, 0x37, 0xeb, 0xda, 0xd8, 0x80, 0x64, 0xaf, 0x30, 0xfb, 0x44, 0x8a, 0x5f, 0x0c, 0x54, 0x84,
				0x25, 0x20, 0x52, 0x83, 0xc2, 0x1a, 0x92, 0xd2, 0xc3, 0x52, 0x46, 0x44, 0x1a, 0x1c, 0x95, 0x32,
				0x63, 0x52, 0x3f, 0x28, 0x5b, 0x93, 0x73, 0x74, 0xf9, 0x01, 0x77, 0x32, 0xb3, 0xfb, 0x0f, 0xb3,
				0xe9, 0x5e, 0xc0, 0xa9, 0xcf, 0x71, 0x7a, 0x19, 0x7d, 0x15, 0x2c, 0xae, 0x62, 0xe9, 0x1a, 0x96,
				0xd7, 0x70, 0xe5, 0x46, 0x06, 0xb7, 0xb0, 0x66, 0x1b, 0x5f, 0x4d, 0xd4, 0x06, 0xe1, 0x85, 0xf0,
				0x41, 0xf8, 0x21, 0x14, 0x88, 0x00, 0x44, 0x10, 0x52, 0x08, 0x52, 0x18, 0x52, 0x04, 0x52, 0xf4,
				0x3e, 0x51, 0x8e, 0x3f, 0xac, 0x7a, 0x20, 0x93, 0x07, 0xd3, 0xda, 0x7f, 0x76, 0x71, 0x94, 0x9b,
				0x8f, 0x4e, 0xe5, 0x94, 0xe9, 0x7c, 0xd2, 0xc7, 0x59, 0xc5, 0x5c, 0x50, 0xca, 0xc5, 0xe5, 0x7c,
				0x71, 0x25, 0x03, 0x41, 0xae, 0xae, 0xe1, 0x3a, 0xc0, 0x6d, 0x82, 0x27, 0x49, 0x78, 0x93, 0x85,
				0xcf, 0x2c, 0xfc, 0x29, 0x42, 0x19, 0x20, 0x02, 0x03, 0x45, 0x30, 0x55, 0x0a, 0xa5, 0x49, 0xe1,
				0x74, 0x29, 0x32, 0xe8, 0x47, 0x77, 0x22, 0xeb, 0x39, 0x06, 0xe6, 0x0e, 0xfc, 0xef, 0xd3, 0x7b,
				0x84, 0x1e, 0x17, 0xbd, 0x6e, 0xce, 0x9a, 0xca, 0xf9, 0xd3, 0xb9, 0xc8, 0xc7, 0xb2, 0x62, 0x56,
				0x94, 0xb2, 0xb2, 0x9c, 0xc1, 0x95, 0x5c, 0x1f, 0xe4, 0xc6, 0x44, 0x0d, 0x03, 0xe0, 0x1e, 0x08,
				0x4f, 0x2a, 0xbc, 0x56, 0xf8, 0x06, 0x09, 0xbf, 0x4d, 0x28, 0x59, 0x22, 0x60, 0x17, 0xc1, 0x6c,
				0x11, 0xca, 0x15, 0xe1, 0xe1, 0x3f, 0xa4, 0x4b, 0xf1, 0x49, 0x92, 0x56, 0x20, 0xe9, 0x1e, 0x99,
				0x85, 0xfd, 0x99, 0x61, 0x9c, 0x3f, 0x82, 0x25, 0x63, 0x58, 0x3a, 0x89, 0x4b, 0x3d, 0x0c, 0x4c,
				0xe7, 0x2a, 0x1f, 0xd7, 0x14, 0x73, 0xfd, 0x12, 0x6e, 0x58, 0xca, 0xcd, 0xbf, 0x62, 0x23, 0xe0,
				0x4c, 0x85, 0xcb, 0x0a, 0x77, 0x06, 0x3c, 0x99, 0xf0, 0x0e, 0x85, 0x2f, 0x5b, 0xf8, 0x1d, 0x42,
				0x19, 0x21, 0x02, 0xf9, 0x22, 0x38, 0x46, 0x84, 0xc6, 0x3f, 0xa4, 0xc7, 0x9e, 0x92, 0xd4, 0x99,
				0x52, 0x7c, 0x8e, 0xa4, 0x2d, 0x94, 0xf4, 0x45, 0xfd, 0xc9, 0x0c, 0xae, 0x18, 0xc6, 0xca, 0x11,
				0x5c, 0x3d, 0x86, 0x6b, 0x27, 0xb1, 0xc6, 0xc3, 0x0d, 0xd3, 0xb9, 0xc9, 0xc7, 0xd7, 0x8a, 0xf9,
				0xc6, 0x12, 0x36, 0x2d, 0xe5, 0x4e, 0xc0, 0x91, 0x06, 0x67, 0x06, 0x5c, 0x99, 0x70, 0x0f, 0x85,
				0x27, 0x07, 0xde, 0x3c, 0xf8, 0x9c, 0xc2, 0x3f, 0x5a, 0x28, 0xe3, 0x45, 0xc0, 0x2d, 0x82, 0x8f,
				0xf5, 0x83, 0x44, 0xc4, 0x27, 0xa2, 0x0b, 0xa4, 0xd8, 0x73, 0x92, 0x5a, 0x26, 0xc5, 0x2b, 0x24,
				0xad, 0xaa, 0x3f, 0x3f, 0x80, 0x1b, 0x32, 0x58, 0x3f, 0x8c, 0x5b, 0x46, 0xb0, 0x71, 0x0c, 0xb7,
				0x4d, 0x62, 0x93, 0x87, 0x3b, 0xa6, 0xf3, 0x1d, 0x1f, 0xf7, 0x14, 0xb3, 0x6d, 0x09, 0xf7, 0x01,
				0x76, 0x2b, 0x1c, 0x83, 0xe1, 0xcc, 0x82, 0x6b, 0x18, 0xdc, 0x0e, 0x78, 0x46, 0xc2, 0x3b, 0x1a,
				0xbe, 0xf1, 0xc2, 0x3f, 0x59, 0x28, 0x1e, 0x11, 0x78, 0xea, 0x41, 0x07, 0x22, 0xa2, 0x88, 0x68,
				0x85, 0x14, 0xab, 0x92, 0xd4, 0xb5, 0x0f, 0x47, 0xc2, 0xe6, 0x01, 0xdc, 0x9d, 0xc1, 0xe8, 0x30,
				0xb6, 0x8d, 0xe0, 0xbb, 0x63, 0xd8, 0x3e, 0x89, 0x07, 0x3c, 0x3c, 0x34, 0x9d, 0x1d, 0x3e, 0xbe,
				0x57, 0xcc, 0xa3, 0x80, 0xcd, 0x0a, 0x7b, 0x06, 0x1c, 0x43, 0xe0, 0xcc, 0x86, 0x2b, 0x0f, 0x6e,
				0x27, 0x3c, 0x2e, 0x78, 0x27, 0xc2, 0x37, 0x05, 0xfe, 0x69, 0x50, 0x8a, 0x10, 0x98, 0x87, 0xff,
				0x13, 0x42, 0x6b, 0x15, 0xfa, 0x41, 0x89, 0x9d, 0x29, 0x54, 0x07, 0xf1, 0x98, 0x9d, 0x27, 0x86,
				0xb3, 0x6b, 0x34, 0x4f, 0x4d, 0xe4, 0xc7, 0x1e, 0x76, 0x7b, 0x79, 0x76, 0x36, 0xcf, 0x01, 0xd6,
				0x54, 0xd8, 0x06, 0xc1, 0x9e, 0x05, 0x47, 0x36, 0x9c, 0x79, 0x70, 0xe5, 0xc3, 0x3d, 0x16, 0x1e,
				0x37, 0xbc, 0x1e, 0xf8, 0xbc, 0xf0, 0xcf, 0x86, 0xb2, 0x10, 0x81, 0x25, 0xff, 0x83, 0xae, 0xee,
				0x15, 0xf1, 0xc3, 0x42, 0x3b, 0x26, 0xf4, 0xb8, 0x44, 0x2d, 0x85, 0x3d, 0x83, 0x78, 0xc5, 0xce,
				0xde, 0xe1, 0xbc, 0x3a, 0x9a, 0xd7, 0x26, 0xf2, 0x4b, 0x0f, 0xfb, 0xbc, 0xbc, 0x0e, 0x58, 0x2c,
				0xb0, 0x5a, 0x61, 0xb3, 0xc1, 0x6e, 0x87, 0xc3, 0x01, 0xa7, 0x13, 0x2e, 0x17, 0xdc, 0x6e, 0x78,
				0x3c, 0xf0, 0x7a, 0xe1, 0xf3, 0xc1, 0xef, 0x87, 0xa2, 0x20, 0x10, 0x40, 0x30, 0x28, 0x42, 0x21,
				0x11, 0x0e, 0x8b, 0x48, 0x44, 0x44, 0xa3, 0x22, 0x16, 0x13, 0xaa, 0x2a, 0xe2, 0x71, 0xa1, 0x69,
				0x42, 0xd7, 0x25, 0x32, 0x85, 0x1c, 0x44, 0xda, 0xc9, 0xe1, 0xe4, 0x68, 0x72, 0x22, 0xe9, 0x49,
				0xfc, 0x8b, 0x90, 0x6c, 0xc6, 0x00, 0x0b, 0x52, 0xad, 0x18, 0x64, 0x43, 0x96, 0x1d, 0xd9, 0x0e,
				0xe4, 0x39, 0x91, 0xef, 0xc2, 0x58, 0x37, 0xdc, 0x1e, 0x78, 0xbc, 0xf0, 0xfa, 0x30, 0xdb, 0x8f,
				0x62, 0x05, 0xa5, 0x01, 0x2c, 0x0b, 0x26, 0x0c, 0x04, 0xeb, 0xc2, 0xa8, 0x8b, 0x60, 0x6b, 0x14,
				0x6f, 0xc7, 0xb0, 0x57, 0xc5, 0x91, 0x38, 0x8e, 0x6b, 0x38, 0xa7, 0x8b, 0x1e, 0x9a, 0xaf, 0x30,
				0xbd, 0x97, 0x43, 0xaf, 0x32, 0xef, 0x1a, 0x47, 0x5d, 0xe3, 0xc4, 0xbe, 0x84, 0x80, 0xc1, 0x84,
				0x24, 0x33, 0xcc, 0x16, 0x0c, 0xb4, 0xc2, 0x6a, 0x43, 0x86, 0x1d, 0x43, 0x1c, 0xc8, 0x76, 0x22,
				0xcf, 0x85, 0x7c, 0x37, 0x5c, 0x1e, 0x4c, 0xf2, 0x62, 0x8a, 0x0f, 0xd3, 0xfc, 0x98, 0xa9, 0x60,
				0x5e, 0x20, 0x61, 0x20, 0x28, 0x0b, 0x61, 0x45, 0x18, 0xab, 0x23, 0x58, 0x1f, 0x45, 0x7d, 0x0c,
				0x5b, 0x55, 0xec, 0x8c, 0xa3, 0x2d, 0xf1, 0x81, 0xd0, 0xc5, 0x87, 0x34, 0xff, 0x95, 0xe9, 0xc7,
				0x39, 0xf4, 0x24, 0xf3, 0x3e, 0xe2, 0xa8, 0xd3, 0x09, 0x01, 0xc9, 0x70, 0x4f, 0xc3, 0x68, 0x46,
				0xb2, 0x05, 0x29, 0x56, 0x58, 0x6c, 0xb0, 0xda, 0x31, 0xd8, 0x81, 0x2c, 0x27, 0xb2, 0x5d, 0x70,
				0xb8, 0x31, 0xd2, 0x83, 0xd1, 0x5e, 0x4c, 0xf0, 0x61, 0xb2, 0x1f, 0x53, 0x95, 0x84, 0x81, 0xe0,
				0x99, 0x20, 0x9e, 0x0d, 0x61, 0x51, 0x18, 0x4a, 0x04, 0xcb, 0xa3, 0x58, 0x15, 0xc3, 0x4b, 0x2a,
				0x5e, 0x89, 0x23, 0xac, 0xe1, 0x2d, 0x5d, 0xbc, 0x43, 0xf3, 0xef, 0x99, 0xde, 0xc2, 0xa1, 0x7b,
				0x99, 0xb7, 0x2f, 0x21, 0x20, 0xa4, 0x7b, 0x1a, 0xb2, 0x09, 0x06, 0x33, 0x4c, 0x16, 0x24, 0x5b,
				0x91, 0x62, 0x83, 0xc5, 0x0e, 0xab, 0x03, 0x19, 0x4e, 0x64, 0xba, 0x60, 0x77, 0x23, 0xc7, 0x83,
				0xe1, 0x5e, 0x38, 0x7d, 0x18, 0xe3, 0x4f, 0x18, 0x08, 0x26, 0x07, 0xf0, 0x58, 0x10, 0xd3, 0x42,
				0x98, 0x11, 0x86, 0x2f, 0x82, 0x85, 0x51, 0x2c, 0x8e, 0xe1, 0x05, 0x15, 0xcb, 0xe3, 0x58, 0xa5,
				0xa1, 0x5a, 0x17, 0x21, 0x9a, 0x37, 0x32, 0x7d, 0x13, 0x87, 0x86, 0x79, 0x6f, 0x1d, 0x12, 0x5d,
				0x40, 0x18, 0x20, 0x99, 0x20, 0x9b, 0x61, 0xb0, 0xc0, 0x64, 0x45, 0xb2, 0x0d, 0x66, 0x3b, 0x06,
				0x3a, 0x90, 0xea, 0x84, 0xd5, 0x85, 0x0c, 0x37, 0x32, 0x3d, 0x18, 0xea, 0x45, 0xb6, 0x2f, 0x61,
				0x20, 0x78, 0x44, 0x41, 0x7e, 0x00, 0xae, 0x20, 0x26, 0x84, 0xe0, 0x0e, 0x63, 0x4a, 0x04, 0x4f,
				0x44, 0xe1, 0x8d, 0x61, 0xa6, 0x8a, 0xb9, 0x71, 0x14, 0x6b, 0x78, 0x4e, 0x4f, 0x18, 0x48, 0x72,
				0x39, 0xad, 0x01, 0xde, 0x5f, 0xb9, 0xfb, 0x1a, 0xc2, 0x04, 0xc9, 0x0c, 0xd9, 0x02, 0x83, 0x15,
				0x46, 0x1b, 0x4c, 0x76, 0x24, 0x3b, 0x60, 0x76, 0x62, 0x80, 0x0b, 0x16, 0x37, 0x52, 0x3d, 0x48,
				0xf7, 0x26, 0x0c, 0x04, 0x36, 0x3f, 0x86, 0x28, 0xb0, 0x07, 0x90, 0x13, 0x84, 0x23, 0x84, 0x11,
				0x61, 0x38, 0x23, 0x18, 0x15, 0xc5, 0xd8, 0x18, 0x26, 0xa8, 0x70, 0xc7, 0xf1, 0x0b, 0x2d, 0x61,
				0x20, 0x98, 0xc6, 0xe4, 0x19, 0x7c, 0xb8, 0xd6, 0xf7, 0x34, 0x90, 0xf0, 0x2f, 0x13, 0x84, 0x19,
				0xc2, 0x02, 0xc9, 0x0a, 0xc9, 0x06, 0xd9, 0x0e, 0x83, 0x03, 0x06, 0x27, 0x8c, 0x2e, 0x98, 0xdc,
				0x48, 0xf2, 0x24, 0x0c, 0x04, 0x66, 0x1f, 0x52, 0xfc, 0x18, 0xa8, 0xc0, 0x12, 0x40, 0x6a, 0x10,
				0xd6, 0x10, 0xd2, 0xc3, 0xc8, 0x88, 0x60, 0x70, 0x14, 0x99, 0x31, 0x0c, 0x51, 0x61, 0x8f, 0x27,
				0x0c, 0x04, 0x39, 0x3a, 0x1c, 0xfc, 0x0f, 0x6f, 0x26, 0xfc, 0x5a, 0x24, 0x8d, 0x93, 0xc5, 0x00,
				0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			std::vector<BYTE> expected = {
				0xff, 0x00, 0x08, 0xff, 0x08, 0x0f, 0xff, 0x10, 0x17, 0xff, 0x18, 0x1f, 0xff, 0x20, 0x27, 0xff,
				0x29, 0x2f, 0xff, 0x31, 0x37, 0xff, 0x39, 0x3f, 0xff, 0x41, 0x47, 0xff, 0x4a, 0x4f, 0xff, 0x52,
				0x57, 0xff, 0x5a, 0x5f, 0xff, 0x62, 0x67, 0xff, 0x6a, 0x6f, 0xff, 0x73, 0x77, 0xff, 0x7b, 0x7f,
				0xff, 0x83, 0x87, 0xff, 0x8b, 0x8f, 0xff, 0x94, 0x97, 0xff, 0x9c, 0x9f, 0xff, 0xa4, 0xa7, 0xff,
				0xac, 0xaf, 0xff, 0xb4, 0xb7, 0xff, 0xbd, 0xbf, 0xff, 0xc5, 0xc7, 0xff, 0xcd, 0xcf, 0xff, 0xd5,
				0xd7, 0xff, 0xde, 0xdf, 0xff, 0xe6, 0xe7, 0xff, 0xee, 0xef, 0xff, 0xf6, 0xf7, 0xff, 0xff, 0xff,
				0xee, 0x1d, 0x07, 0xff, 0x1f, 0x08, 0xff, 0x26, 0x0f, 0xff, 0x2d, 0x17, 0xff, 0x34, 0x1f, 0xff,
				0x3b, 0x27, 0xff, 0x43, 0x2f, 0xff, 0x4a, 0x37, 0xff, 0x51, 0x3f, 0xff, 0x58, 0x47, 0xff, 0x60,
				0x4f, 0xff, 0x67, 0x57, 0xff, 0x6e, 0x5f, 0xff, 0x75, 0x67, 0xff, 0x7c, 0x6f, 0xff, 0x84, 0x77,
				0xff, 0x8b, 0x7f, 0xff, 0x92, 0x87, 0xff, 0x99, 0x8f, 0xff, 0xa1, 0x97, 0xff, 0xa8, 0x9f, 0xff,
				0xaf, 0xa7, 0xff, 0xb6, 0xaf, 0xff, 0xbd, 0xb7, 0xff, 0xc5, 0xbf, 0xff, 0xcc, 0xc7, 0xff, 0xd3,
				0xcf, 0xff, 0xda, 0xd7, 0xff, 0xe2, 0xdf, 0xff, 0xe9, 0xe7, 0xff, 0xf0, 0xef, 0xff, 0xf7, 0xf7,
				0xdf, 0x37, 0x07, 0xee, 0x3b, 0x07, 0xff, 0x3f, 0x08, 0xff, 0x45, 0x0f, 0xff, 0x4b, 0x17, 0xff,
				0x51, 0x1f, 0xff, 0x57, 0x27, 0xff, 0x5d, 0x2f, 0xff, 0x64, 0x37, 0xff, 0x6a, 0x3f, 0xff, 0x70,
				0x47, 0xff, 0x76, 0x4f, 0xff, 0x7c, 0x57, 0xff, 0x83, 0x5f, 0xff, 0x89, 0x67, 0xff, 0x8f, 0x6f,
				0xff, 0x95, 0x77, 0xff, 0x9b, 0x7f, 0xff, 0xa2, 0x87, 0xff, 0xa8, 0x8f, 0xff, 0xae, 0x97, 0xff,
				0xb4, 0x9f, 0xff, 0xba, 0xa7, 0xff, 0xc1, 0xaf, 0xff, 0xc7, 0xb7, 0xff, 0xcd, 0xbf, 0xff, 0xd3,
				0xc7, 0xff, 0xd9, 0xcf, 0xff, 0xe0, 0xd7, 0xff, 0xe6, 0xdf, 0xff, 0xec, 0xe7, 0xff, 0xf2, 0xef,
				0xd0, 0x4d, 0x06, 0xdf, 0x53, 0x07, 0xee, 0x58, 0x07, 0xff, 0x5f, 0x08, 0xff, 0x64, 0x0f, 0xff,
				0x69, 0x17, 0xff, 0x6e, 0x1f, 0xff, 0x73, 0x27, 0xff, 0x78, 0x2f, 0xff, 0x7d, 0x37, 0xff, 0x83,
				0x3f, 0xff, 0x88, 0x47, 0xff, 0x8d, 0x4f, 0xff, 0x92, 0x57, 0xff, 0x97, 0x5f, 0xff, 0x9c, 0x67,
				0xff, 0xa2, 0x6f, 0xff, 0xa7, 0x77, 0xff, 0xac, 0x7f, 0xff, 0xb1, 0x87, 0xff, 0xb6, 0x8f, 0xff,
				0xbb, 0x97, 0xff, 0xc1, 0x9f, 0xff, 0xc6, 0xa7, 0xff, 0xcb, 0xaf, 0xff, 0xd0, 0xb7, 0xff, 0xd5,
				0xbf, 0xff, 0xda, 0xc7, 0xff, 0xe0, 0xcf, 0xff, 0xe5, 0xd7, 0xff, 0xea, 0xdf, 0xff, 0xef, 0xe7,
				0xc1, 0x60, 0x05, 0xd0, 0x67, 0x05, 0xdf, 0x6f, 0x06, 0xee, 0x76, 0x06, 0xff, 0x7f, 0x07, 0xff,
				0x83, 0x0f, 0xff, 0x87, 0x17, 0xff, 0x8b, 0x1f, 0xff, 0x8f, 0x27, 0xff, 0x93, 0x2e, 0xff, 0x97,
				0x37, 0xff, 0x9b, 0x3f, 0xff, 0xa0, 0x47, 0xff, 0xa4, 0x4e, 0xff, 0xa8, 0x57, 0xff, 0xac, 0x5f,
				0xff, 0xb0, 0x67, 0xff, 0xb4, 0x6e, 0xff, 0xb8, 0x77, 0xff, 0xbc, 0x7f, 0xff, 0xc1, 0x87, 0xff,
				0xc5, 0x8e, 0xff, 0xc9, 0x97, 0xff, 0xcd, 0x9f, 0xff, 0xd1, 0xa6, 0xff, 0xd5, 0xae, 0xff, 0xd9,
				0xb7, 0xff, 0xdd, 0xbf, 0xff, 0xe2, 0xc6, 0xff, 0xe6, 0xce, 0xff, 0xea, 0xd7, 0xff, 0xee, 0xdf,
				0xb3, 0x6f, 0x04, 0xc1, 0x78, 0x05, 0xd0, 0x81, 0x05, 0xdf, 0x8b, 0x06, 0xee, 0x94, 0x06, 0xff,
				0x9f, 0x07, 0xff, 0xa2, 0x0f, 0xff, 0xa5, 0x17, 0xff, 0xa8, 0x1f, 0xff, 0xab, 0x27, 0xff, 0xae,
				0x2e, 0xff, 0xb1, 0x37, 0xff, 0xb4, 0x3f, 0xff, 0xb7, 0x47, 0xff, 0xba, 0x4e, 0xff, 0xbd, 0x57,
				0xff, 0xc1, 0x5f, 0xff, 0xc4, 0x67, 0xff, 0xc7, 0x6e, 0xff, 0xca, 0x77, 0xff, 0xcd, 0x7f, 0xff,
				0xd0, 0x87, 0xff, 0xd3, 0x8e, 0xff, 0xd6, 0x97, 0xff, 0xd9, 0x9f, 0xff, 0xdc, 0xa6, 0xff, 0xe0,
				0xae, 0xff, 0xe3, 0xb7, 0xff, 0xe6, 0xbf, 0xff, 0xe9, 0xc6, 0xff, 0xec, 0xce, 0xff, 0xef, 0xd7,
				0xa5, 0x7c, 0x04, 0xb3, 0x86, 0x04, 0xc1, 0x90, 0x05, 0xd0, 0x9b, 0x05, 0xdf, 0xa7, 0x06, 0xee,
				0xb2, 0x06, 0xff, 0xbf, 0x07, 0xff, 0xc1, 0x0f, 0xff, 0xc3, 0x17, 0xff, 0xc5, 0x1f, 0xff, 0xc7,
				0x27, 0xff, 0xc9, 0x2e, 0xff, 0xcb, 0x37, 0xff, 0xcd, 0x3f, 0xff, 0xcf, 0x47, 0xff, 0xd1, 0x4e,
				0xff, 0xd3, 0x57, 0xff, 0xd5, 0x5f, 0xff, 0xd7, 0x67, 0xff, 0xd9, 0x6e, 0xff, 0xdb, 0x77, 0xff,
				0xdd, 0x7f, 0xff, 0xe0, 0x87, 0xff, 0xe2, 0x8e, 0xff, 0xe4, 0x97, 0xff, 0xe6, 0x9f, 0xff, 0xe8,
				0xa6, 0xff, 0xea, 0xae, 0xff, 0xec, 0xb7, 0xff, 0xee, 0xbf, 0xff, 0xf0, 0xc6, 0xff, 0xf2, 0xce,
				0x98, 0x85, 0x04, 0xa5, 0x91, 0x04, 0xb3, 0x9c, 0x04, 0xc1, 0xa9, 0x05, 0xd0, 0xb5, 0x05, 0xdf,
				0xc3, 0x06, 0xee, 0xd0, 0x06, 0xff, 0xdf, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xe1, 0x17, 0xff, 0xe2,
				0x1f, 0xff, 0xe3, 0x27, 0xff, 0xe4, 0x2e, 0xff, 0xe5, 0x37, 0xff, 0xe6, 0x3f, 0xff, 0xe7, 0x47,
				0xff, 0xe8, 0x4e, 0xff, 0xe9, 0x57, 0xff, 0xea, 0x5f, 0xff, 0xeb, 0x67, 0xff, 0xec, 0x6e, 0xff,
				0xed, 0x77, 0xff, 0xee, 0x7f, 0xff, 0xef, 0x87, 0xff, 0xf0, 0x8e, 0xff, 0xf1, 0x97, 0xff, 0xf2,
				0x9f, 0xff, 0xf3, 0xa6, 0xff, 0xf4, 0xae, 0xff, 0xf5, 0xb7, 0xff, 0xf6, 0xbf, 0xff, 0xf7, 0xc6,
				0x8c, 0x8c, 0x03, 0x98, 0x98, 0x03, 0xa5, 0xa5, 0x03, 0xb3, 0xb3, 0x04, 0xc1, 0xc1, 0x04, 0xd0,
				0xd0, 0x04, 0xdf, 0xdf, 0x05, 0xee, 0xee, 0x05, 0xff, 0xff, 0x06, 0xff, 0xff, 0x0e, 0xff, 0xff,
				0x16, 0xff, 0xff, 0x1e, 0xff, 0xff, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0xff, 0xff, 0x66, 0xff,
				0xff, 0x6e, 0xff, 0xff, 0x76, 0xff, 0xff, 0x7e, 0xff, 0xff, 0x86, 0xff, 0xff, 0x8e, 0xff, 0xff,
				0x96, 0xff, 0xff, 0x9e, 0xff, 0xff, 0xa6, 0xff, 0xff, 0xae, 0xff, 0xff, 0xb6, 0xff, 0xff, 0xbe,
				0x70, 0x80, 0x03, 0x7b, 0x8c, 0x03, 0x86, 0x98, 0x03, 0x91, 0xa5, 0x03, 0x9d, 0xb3, 0x04, 0xa9,
				0xc1, 0x04, 0xb6, 0xd0, 0x04, 0xc4, 0xdf, 0x05, 0xd1, 0xee, 0x05, 0xe0, 0xff, 0x06, 0xe1, 0xff,
				0x0e, 0xe2, 0xff, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xeb, 0xff, 0x5e, 0xec,
				0xff, 0x66, 0xec, 0xff, 0x6e, 0xee, 0xff, 0x76, 0xef, 0xff, 0x7e, 0xf0, 0xff, 0x86, 0xf0, 0xff,
				0x8e, 0xf2, 0xff, 0x96, 0xf3, 0xff, 0x9e, 0xf3, 0xff, 0xa6, 0xf4, 0xff, 0xae, 0xf6, 0xff, 0xb6,
				0x58, 0x75, 0x02, 0x60, 0x80, 0x03, 0x69, 0x8c, 0x03, 0x73, 0x98, 0x03, 0x7c, 0xa5, 0x03, 0x87,
				0xb3, 0x04, 0x91, 0xc1, 0x04, 0x9c, 0xd0, 0x04, 0xa8, 0xdf, 0x05, 0xb3, 0xee, 0x05, 0xc0, 0xff,
				0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xff, 0x26, 0xca, 0xff, 0x2e,
				0xcc, 0xff, 0x36, 0xce, 0xff, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6,
				0xff, 0x5e, 0xd8, 0xff, 0x66, 0xda, 0xff, 0x6e, 0xdc, 0xff, 0x76, 0xde, 0xff, 0x7e, 0xe0, 0xff,
				0x86, 0xe2, 0xff, 0x8e, 0xe4, 0xff, 0x96, 0xe6, 0xff, 0x9e, 0xe8, 0xff, 0xa6, 0xea, 0xff, 0xae,
				0x42, 0x6a, 0x02, 0x49, 0x75, 0x02, 0x50, 0x80, 0x02, 0x58, 0x8c, 0x02, 0x5f, 0x98, 0x02, 0x68,
				0xa5, 0x03, 0x70, 0xb3, 0x03, 0x79, 0xc1, 0x03, 0x82, 0xd0, 0x04, 0x8c, 0xdf, 0x04, 0x95, 0xee,
				0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0xff, 0x15, 0xa9, 0xff, 0x1d, 0xac, 0xff, 0x25,
				0xaf, 0xff, 0x2d, 0xb2, 0xff, 0x35, 0xb5, 0xff, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbe,
				0xff, 0x55, 0xc1, 0xff, 0x5d, 0xc4, 0xff, 0x65, 0xc7, 0xff, 0x6d, 0xca, 0xff, 0x75, 0xcd, 0xff,
				0x7d, 0xd1, 0xff, 0x86, 0xd4, 0xff, 0x8e, 0xd7, 0xff, 0x96, 0xda, 0xff, 0x9e, 0xdd, 0xff, 0xa6,
				0x30, 0x5f, 0x01, 0x35, 0x6a, 0x02, 0x3a, 0x75, 0x02, 0x40, 0x80, 0x02, 0x46, 0x8c, 0x02, 0x4c,
				0x98, 0x02, 0x53, 0xa5, 0x03, 0x5a, 0xb3, 0x03, 0x61, 0xc1, 0x03, 0x68, 0xd0, 0x04, 0x70, 0xdf,
				0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xff, 0x0d, 0x88, 0xff, 0x15, 0x8c, 0xff, 0x1d,
				0x90, 0xff, 0x25, 0x94, 0xff, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4,
				0xff, 0x4d, 0xa8, 0xff, 0x55, 0xad, 0xff, 0x5d, 0xb1, 0xff, 0x65, 0xb5, 0xff, 0x6d, 0xb9, 0xff,
				0x75, 0xbd, 0xff, 0x7d, 0xc1, 0xff, 0x86, 0xc5, 0xff, 0x8e, 0xc9, 0xff, 0x96, 0xcd, 0xff, 0x9e,
				0x20, 0x55, 0x01, 0x24, 0x5f, 0x01, 0x27, 0x6a, 0x02, 0x2c, 0x75, 0x02, 0x30, 0x80, 0x02, 0x34,
				0x8c, 0x02, 0x39, 0x98, 0x02, 0x3e, 0xa5, 0x03, 0x43, 0xb3, 0x03, 0x48, 0xc1, 0x03, 0x4e, 0xd0,
				0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xff, 0x05, 0x65, 0xff, 0x0d, 0x6a, 0xff, 0x15,
				0x6f, 0xff, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89,
				0xff, 0x45, 0x8e, 0xff, 0x4d, 0x93, 0xff, 0x55, 0x98, 0xff, 0x5d, 0x9d, 0xff, 0x65, 0xa2, 0xff,
				0x6d, 0xa7, 0xff, 0x75, 0xac, 0xff, 0x7d, 0xb2, 0xff, 0x86, 0xb7, 0xff, 0x8e, 0xbc, 0xff, 0x96,
				0x13, 0x4c, 0x01, 0x15, 0x55, 0x01, 0x18, 0x5f, 0x01, 0x1a, 0x6a, 0x02, 0x1d, 0x75, 0x02, 0x20,
				0x80, 0x02, 0x23, 0x8c, 0x02, 0x26, 0x98, 0x02, 0x29, 0xa5, 0x03, 0x2d, 0xb3, 0x03, 0x30, 0xc1,
				0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0xee, 0x04, 0x40, 0xff, 0x05, 0x46, 0xff, 0x0d,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b,
				0xff, 0x3d, 0x71, 0xff, 0x45, 0x77, 0xff, 0x4d, 0x7d, 0xff, 0x55, 0x83, 0xff, 0x5d, 0x89, 0xff,
				0x65, 0x90, 0xff, 0x6d, 0x96, 0xff, 0x75, 0x9c, 0xff, 0x7d, 0xa2, 0xff, 0x86, 0xa8, 0xff, 0x8e,
				0x08, 0x43, 0x01, 0x09, 0x4c, 0x01, 0x0a, 0x55, 0x01, 0x0c, 0x5f, 0x01, 0x0d, 0x6a, 0x01, 0x0e,
				0x75, 0x01, 0x10, 0x80, 0x02, 0x11, 0x8c, 0x02, 0x13, 0x98, 0x02, 0x14, 0xa5, 0x02, 0x16, 0xb3,
				0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xdf, 0x03, 0x1d, 0xee, 0x03, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0xff, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b,
				0xff, 0x34, 0x52, 0xff, 0x3c, 0x59, 0xff, 0x44, 0x60, 0xff, 0x4c, 0x67, 0xff, 0x54, 0x6f, 0xff,
				0x5d, 0x76, 0xff, 0x65, 0x7d, 0xff, 0x6d, 0x84, 0xff, 0x75, 0x8b, 0xff, 0x7d, 0x93, 0xff, 0x85,
				0x00, 0x3b, 0x00, 0x01, 0x43, 0x00, 0x01, 0x4c, 0x00, 0x01, 0x55, 0x00, 0x01, 0x5f, 0x00, 0x01,
				0x6a, 0x00, 0x01, 0x75, 0x00, 0x02, 0x80, 0x00, 0x02, 0x8c, 0x00, 0x02, 0x98, 0x00, 0x02, 0xa5,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x0c, 0xff, 0x08, 0x14, 0xff, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c,
				0xff, 0x29, 0x34, 0xff, 0x31, 0x3c, 0xff, 0x39, 0x44, 0xff, 0x41, 0x4c, 0xff, 0x4a, 0x54, 0xff,
				0x52, 0x5d, 0xff, 0x5a, 0x65, 0xff, 0x62, 0x6d, 0xff, 0x6a, 0x75, 0xff, 0x73, 0x7d, 0xff, 0x7b,
				0x00, 0x34, 0x06, 0x00, 0x3b, 0x07, 0x01, 0x43, 0x08, 0x01, 0x4c, 0x09, 0x01, 0x55, 0x0a, 0x01,
				0x5f, 0x0b, 0x01, 0x6a, 0x0c, 0x01, 0x75, 0x0e, 0x02, 0x80, 0x0f, 0x02, 0x8c, 0x11, 0x02, 0x98,
				0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x03, 0xee, 0x1d, 0x04, 0xff, 0x1f, 0x0c, 0xff, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
				0xff, 0x3b, 0x2c, 0xff, 0x43, 0x34, 0xff, 0x4a, 0x3c, 0xff, 0x51, 0x44, 0xff, 0x58, 0x4c, 0xff,
				0x60, 0x54, 0xff, 0x67, 0x5d, 0xff, 0x6e, 0x65, 0xff, 0x75, 0x6d, 0xff, 0x7c, 0x75, 0xff, 0x84,
				0x00, 0x2c, 0x0b, 0x00, 0x34, 0x0c, 0x00, 0x3b, 0x0e, 0x00, 0x43, 0x10, 0x00, 0x4c, 0x12, 0x01,
				0x55, 0x15, 0x01, 0x5f, 0x17, 0x01, 0x6a, 0x1a, 0x01, 0x75, 0x1c, 0x01, 0x80, 0x1f, 0x01, 0x8c,
				0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xd0, 0x33,
				0x02, 0xdf, 0x37, 0x02, 0xee, 0x3b, 0x03, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b,
				0xff, 0x51, 0x23, 0xff, 0x57, 0x2b, 0xff, 0x5d, 0x33, 0xff, 0x64, 0x3b, 0xff, 0x6a, 0x44, 0xff,
				0x70, 0x4c, 0xff, 0x76, 0x54, 0xff, 0x7c, 0x5c, 0xff, 0x83, 0x64, 0xff, 0x89, 0x6c, 0xff, 0x8f,
				0x00, 0x26, 0x0e, 0x00, 0x2c, 0x10, 0x00, 0x34, 0x13, 0x00, 0x3b, 0x16, 0x00, 0x43, 0x19, 0x00,
				0x4c, 0x1c, 0x01, 0x55, 0x20, 0x01, 0x5f, 0x23, 0x01, 0x6a, 0x27, 0x01, 0x75, 0x2b, 0x01, 0x80,
				0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xb3, 0x42, 0x02, 0xc1, 0x48,
				0x02, 0xd0, 0x4d, 0x02, 0xdf, 0x53, 0x02, 0xee, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
				0xff, 0x69, 0x1b, 0xff, 0x6e, 0x23, 0xff, 0x73, 0x2b, 0xff, 0x78, 0x33, 0xff, 0x7d, 0x3b, 0xff,
				0x83, 0x44, 0xff, 0x88, 0x4c, 0xff, 0x8d, 0x54, 0xff, 0x92, 0x5c, 0xff, 0x97, 0x64, 0xff, 0x9c,
				0x00, 0x20, 0x0f, 0x00, 0x26, 0x13, 0x00, 0x2c, 0x16, 0x00, 0x34, 0x19, 0x00, 0x3b, 0x1d, 0x00,
				0x43, 0x21, 0x00, 0x4c, 0x26, 0x01, 0x55, 0x2a, 0x01, 0x5f, 0x2f, 0x01, 0x6a, 0x34, 0x01, 0x75,
				0x3a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x98, 0x4c, 0x01, 0xa5, 0x52, 0x02, 0xb3, 0x59,
				0x02, 0xc1, 0x60, 0x02, 0xd0, 0x67, 0x02, 0xdf, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b,
				0xff, 0x83, 0x13, 0xff, 0x87, 0x1b, 0xff, 0x8b, 0x23, 0xff, 0x8f, 0x2b, 0xff, 0x93, 0x33, 0xff,
				0x97, 0x3b, 0xff, 0x9b, 0x44, 0xff, 0xa0, 0x4c, 0xff, 0xa4, 0x54, 0xff, 0xa8, 0x5c, 0xff, 0xac,
				0x00, 0x1a, 0x10, 0x00, 0x20, 0x14, 0x00, 0x26, 0x17, 0x00, 0x2c, 0x1b, 0x00, 0x34, 0x20, 0x00,
				0x3b, 0x25, 0x00, 0x43, 0x2a, 0x00, 0x4c, 0x2f, 0x01, 0x55, 0x35, 0x01, 0x5f, 0x3b, 0x01, 0x6a,
				0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x98, 0x5f, 0x01, 0xa5, 0x67,
				0x02, 0xb3, 0x6f, 0x02, 0xc1, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
				0xff, 0x9f, 0x0b, 0xff, 0xa2, 0x13, 0xff, 0xa5, 0x1b, 0xff, 0xa8, 0x23, 0xff, 0xab, 0x2b, 0xff,
				0xae, 0x33, 0xff, 0xb1, 0x3b, 0xff, 0xb4, 0x44, 0xff, 0xb7, 0x4c, 0xff, 0xba, 0x54, 0xff, 0xbd,
				0x00, 0x15, 0x10, 0x00, 0x1a, 0x13, 0x00, 0x20, 0x18, 0x00, 0x26, 0x1c, 0x00, 0x2c, 0x21, 0x00,
				0x34, 0x26, 0x00, 0x3b, 0x2c, 0x00, 0x43, 0x32, 0x00, 0x4c, 0x39, 0x00, 0x55, 0x40, 0x00, 0x5f,
				0x47, 0x00, 0x6a, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xdf, 0xa7, 0x01,
				0xee, 0xb2, 0x02, 0xff, 0xbf, 0x0a, 0xff, 0xc1, 0x12, 0xff, 0xc3, 0x1a, 0xff, 0xc5, 0x22, 0xff,
				0xc7, 0x2a, 0xff, 0xc9, 0x32, 0xff, 0xcb, 0x3b, 0xff, 0xcd, 0x43, 0xff, 0xcf, 0x4b, 0xff, 0xd1,
				0x00, 0x10, 0x0e, 0x00, 0x15, 0x12, 0x00, 0x1a, 0x17, 0x00, 0x20, 0x1c, 0x00, 0x26, 0x21, 0x00,
				0x2c, 0x27, 0x00, 0x34, 0x2d, 0x00, 0x3b, 0x34, 0x00, 0x43, 0x3b, 0x00, 0x4c, 0x43, 0x00, 0x55,
				0x4b, 0x00, 0x5f, 0x53, 0x00, 0x6a, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xa9, 0x01, 0xd0, 0xb5, 0x01,
				0xdf, 0xc3, 0x01, 0xee, 0xd0, 0x02, 0xff, 0xdf, 0x0a, 0xff, 0xe0, 0x12, 0xff, 0xe1, 0x1a, 0xff,
				0xe2, 0x22, 0xff, 0xe3, 0x2a, 0xff, 0xe4, 0x32, 0xff, 0xe5, 0x3b, 0xff, 0xe6, 0x43, 0xff, 0xe7,
				0x00, 0x0d, 0x0d, 0x00, 0x10, 0x10, 0x00, 0x15, 0x15, 0x00, 0x1a, 0x1a, 0x00, 0x20, 0x20, 0x00,
				0x26, 0x26, 0x00, 0x2c, 0x2c, 0x00, 0x34, 0x34, 0x00, 0x3b, 0x3b, 0x00, 0x43, 0x43, 0x00, 0x4c,
				0x4c, 0x00, 0x55, 0x55, 0x00, 0x5f, 0x5f, 0x00, 0x6a, 0x6a, 0x00, 0x75, 0x75, 0x01, 0x80, 0x80,
				0x01, 0x8c, 0x8c, 0x01, 0x98, 0x98, 0x01, 0xa5, 0xa5, 0x01, 0xb3, 0xb3, 0x01, 0xc1, 0xc1, 0x01,
				0xd0, 0xd0, 0x01, 0xdf, 0xdf, 0x01, 0xee, 0xee, 0x02, 0xff, 0xff, 0x0a, 0xff, 0xff, 0x12, 0xff,
				0xff, 0x1a, 0xff, 0xff, 0x22, 0xff, 0xff, 0x2a, 0xff, 0xff, 0x32, 0xff, 0xff, 0x3b, 0xff, 0xff,
				0x00, 0x08, 0x09, 0x00, 0x0b, 0x0d, 0x00, 0x0e, 0x10, 0x00, 0x12, 0x15, 0x00, 0x17, 0x1a, 0x00,
				0x1c, 0x20, 0x00, 0x21, 0x26, 0x00, 0x27, 0x2c, 0x00, 0x2d, 0x34, 0x00, 0x34, 0x3b, 0x00, 0x3b,
				0x43, 0x00, 0x43, 0x4c, 0x00, 0x4b, 0x55, 0x00, 0x54, 0x5f, 0x00, 0x5d, 0x6a, 0x00, 0x66, 0x75,
				0x00, 0x70, 0x80, 0x00, 0x7b, 0x8c, 0x00, 0x86, 0x98, 0x00, 0x91, 0xa5, 0x00, 0x9d, 0xb3, 0x00,
				0xa9, 0xc1, 0x00, 0xb6, 0xd0, 0x00, 0xc4, 0xdf, 0x00, 0xd1, 0xee, 0x01, 0xe0, 0xff, 0x09, 0xe1,
				0xff, 0x11, 0xe2, 0xff, 0x19, 0xe3, 0xff, 0x21, 0xe4, 0xff, 0x29, 0xe4, 0xff, 0x32, 0xe6, 0xff,
				0x00, 0x04, 0x06, 0x00, 0x07, 0x09, 0x00, 0x09, 0x0d, 0x00, 0x0c, 0x10, 0x00, 0x10, 0x15, 0x00,
				0x13, 0x1a, 0x00, 0x18, 0x20, 0x00, 0x1c, 0x26, 0x00, 0x21, 0x2c, 0x00, 0x27, 0x34, 0x00, 0x2c,
				0x3b, 0x00, 0x33, 0x43, 0x00, 0x39, 0x4c, 0x00, 0x40, 0x55, 0x00, 0x48, 0x5f, 0x00, 0x4f, 0x6a,
				0x00, 0x58, 0x75, 0x00, 0x60, 0x80, 0x00, 0x69, 0x8c, 0x00, 0x73, 0x98, 0x00, 0x7c, 0xa5, 0x00,
				0x87, 0xb3, 0x00, 0x91, 0xc1, 0x00, 0x9c, 0xd0, 0x00, 0xa8, 0xdf, 0x00, 0xb3, 0xee, 0x01, 0xc0,
				0xff, 0x09, 0xc2, 0xff, 0x11, 0xc4, 0xff, 0x19, 0xc6, 0xff, 0x21, 0xc8, 0xff, 0x29, 0xca, 0xff,
				0x00, 0x02, 0x04, 0x00, 0x04, 0x06, 0x00, 0x05, 0x09, 0x00, 0x08, 0x0d, 0x00, 0x0a, 0x10, 0x00,
				0x0d, 0x15, 0x00, 0x10, 0x1a, 0x00, 0x14, 0x20, 0x00, 0x17, 0x26, 0x00, 0x1c, 0x2c, 0x00, 0x20,
				0x34, 0x00, 0x25, 0x3b, 0x00, 0x2a, 0x43, 0x00, 0x30, 0x4c, 0x00, 0x35, 0x55, 0x00, 0x3c, 0x5f,
				0x00, 0x42, 0x6a, 0x00, 0x49, 0x75, 0x00, 0x50, 0x80, 0x00, 0x58, 0x8c, 0x00, 0x5f, 0x98, 0x00,
				0x68, 0xa5, 0x00, 0x70, 0xb3, 0x00, 0x79, 0xc1, 0x00, 0x82, 0xd0, 0x00, 0x8c, 0xdf, 0x00, 0x95,
				0xee, 0x01, 0xa0, 0xff, 0x09, 0xa3, 0xff, 0x11, 0xa6, 0xff, 0x19, 0xa9, 0xff, 0x21, 0xac, 0xff,
				0x00, 0x01, 0x02, 0x00, 0x02, 0x04, 0x00, 0x03, 0x06, 0x00, 0x04, 0x09, 0x00, 0x06, 0x0d, 0x00,
				0x08, 0x10, 0x00, 0x0a, 0x15, 0x00, 0x0d, 0x1a, 0x00, 0x10, 0x20, 0x00, 0x13, 0x26, 0x00, 0x16,
				0x2c, 0x00, 0x1a, 0x34, 0x00, 0x1d, 0x3b, 0x00, 0x22, 0x43, 0x00, 0x26, 0x4c, 0x00, 0x2b, 0x55,
				0x00, 0x30, 0x5f, 0x00, 0x35, 0x6a, 0x00, 0x3a, 0x75, 0x00, 0x40, 0x80, 0x00, 0x46, 0x8c, 0x00,
				0x4c, 0x98, 0x00, 0x53, 0xa5, 0x00, 0x5a, 0xb3, 0x00, 0x61, 0xc1, 0x00, 0x68, 0xd0, 0x00, 0x70,
				0xdf, 0x00, 0x77, 0xee, 0x01, 0x80, 0xff, 0x09, 0x84, 0xff, 0x11, 0x88, 0xff, 0x19, 0x8c, 0xff,
				0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x02, 0x06, 0x00, 0x03, 0x09, 0x00,
				0x04, 0x0d, 0x00, 0x06, 0x10, 0x00, 0x08, 0x15, 0x00, 0x09, 0x1a, 0x00, 0x0c, 0x20, 0x00, 0x0e,
				0x26, 0x00, 0x10, 0x2c, 0x00, 0x13, 0x34, 0x00, 0x16, 0x3b, 0x00, 0x19, 0x43, 0x00, 0x1c, 0x4c,
				0x00, 0x20, 0x55, 0x00, 0x24, 0x5f, 0x00, 0x27, 0x6a, 0x00, 0x2c, 0x75, 0x00, 0x30, 0x80, 0x00,
				0x34, 0x8c, 0x00, 0x39, 0x98, 0x00, 0x3e, 0xa5, 0x00, 0x43, 0xb3, 0x00, 0x48, 0xc1, 0x00, 0x4e,
				0xd0, 0x00, 0x54, 0xdf, 0x00, 0x59, 0xee, 0x00, 0x60, 0xff, 0x08, 0x65, 0xff, 0x10, 0x6a, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x01, 0x06, 0x00,
				0x02, 0x09, 0x00, 0x03, 0x0d, 0x00, 0x04, 0x10, 0x00, 0x05, 0x15, 0x00, 0x06, 0x1a, 0x00, 0x08,
				0x20, 0x00, 0x09, 0x26, 0x00, 0x0b, 0x2c, 0x00, 0x0d, 0x34, 0x00, 0x0e, 0x3b, 0x00, 0x11, 0x43,
				0x00, 0x13, 0x4c, 0x00, 0x15, 0x55, 0x00, 0x18, 0x5f, 0x00, 0x1a, 0x6a, 0x00, 0x1d, 0x75, 0x00,
				0x20, 0x80, 0x00, 0x23, 0x8c, 0x00, 0x26, 0x98, 0x00, 0x29, 0xa5, 0x00, 0x2d, 0xb3, 0x00, 0x30,
				0xc1, 0x00, 0x34, 0xd0, 0x00, 0x38, 0xdf, 0x00, 0x3b, 0xee, 0x00, 0x40, 0xff, 0x08, 0x46, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00,
				0x00, 0x06, 0x00, 0x01, 0x09, 0x00, 0x01, 0x0d, 0x00, 0x02, 0x10, 0x00, 0x02, 0x15, 0x00, 0x03,
				0x1a, 0x00, 0x04, 0x20, 0x00, 0x04, 0x26, 0x00, 0x05, 0x2c, 0x00, 0x06, 0x34, 0x00, 0x07, 0x3b,
				0x00, 0x08, 0x43, 0x00, 0x09, 0x4c, 0x00, 0x0a, 0x55, 0x00, 0x0c, 0x5f, 0x00, 0x0d, 0x6a, 0x00,
				0x0e, 0x75, 0x00, 0x10, 0x80, 0x00, 0x11, 0x8c, 0x00, 0x13, 0x98, 0x00, 0x14, 0xa5, 0x00, 0x16,
				0xb3, 0x00, 0x18, 0xc1, 0x00, 0x1a, 0xd0, 0x00, 0x1c, 0xdf, 0x00, 0x1d, 0xee, 0x00, 0x20, 0xff
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);

			// Test the metadata calculation
			Assert::AreEqual((UINT)32, imageDescriptor.width);
			Assert::AreEqual((UINT)32, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGB8 == imageDescriptor.format, L"Image format is incorrect");

			Assert::AreEqual(expected.size(), actual.size(), L"Output vector size is incorrect");
			for (int i = 0; i < expected.size(); i++)
			{
				Assert::AreEqual(expected[i], actual[i]);
			}
		}

		TEST_METHOD(PngSuite_f01n0g08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x56, 0x11, 0x25,
				0x28, 0x00, 0x00, 0x01, 0x08, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x85, 0xd2, 0x21, 0x4b, 0xc4,
				0x41, 0x10, 0x05, 0xf0, 0xf7, 0x76, 0x76, 0x76, 0xf6, 0x04, 0x31, 0x08, 0x82, 0xc1, 0x60, 0x31,
				0x58, 0x2c, 0x26, 0x8b, 0xc9, 0x66, 0x12, 0x0c, 0x36, 0xc1, 0x60, 0x14, 0x2e, 0x08, 0xa6, 0xe3,
				0x92, 0x60, 0x38, 0xb8, 0x22, 0x5c, 0x10, 0x0c, 0x82, 0x41, 0x30, 0x88, 0xc1, 0xe4, 0x27, 0xb0,
				0xf8, 0x8d, 0x0c, 0x1e, 0xf7, 0xdf, 0xd9, 0xb0, 0xbb, 0xf9, 0xc7, 0xbe, 0x99, 0xe1, 0x71, 0x92,
				0x2d, 0x9b, 0x99, 0xa5, 0x94, 0x54, 0x55, 0xa3, 0x4a, 0x14, 0x11, 0x09, 0x21, 0x90, 0x24, 0xc8,
				0xdb, 0x51, 0x47, 0xdc, 0x58, 0x5b, 0xf0, 0x3a, 0x77, 0xc4, 0xa5, 0x75, 0xc4, 0x85, 0x75, 0xc4,
				0x99, 0x75, 0xc4, 0x69, 0x6a, 0x0b, 0x9e, 0x98, 0x13, 0xe7, 0xf8, 0xf6, 0x82, 0xc7, 0xa9, 0x14,
				0x57, 0xc0, 0x97, 0xff, 0x83, 0x47, 0x5a, 0x88, 0x31, 0x80, 0x0f, 0x9f, 0xc2, 0xc3, 0x34, 0x88,
				0x29, 0x00, 0xbc, 0xf9, 0x39, 0x78, 0xa0, 0x2b, 0x31, 0x07, 0x66, 0x63, 0xbc, 0xf8, 0x49, 0xb9,
				0xaf, 0x2b, 0xb1, 0xc0, 0x24, 0xdf, 0xe1, 0xc9, 0xef, 0xc2, 0xbd, 0x38, 0x88, 0x6c, 0xa3, 0x29,
				0x1e, 0xfd, 0xb6, 0xdc, 0x55, 0x27, 0x1e, 0x30, 0xf3, 0xf7, 0xe0, 0x4e, 0x74, 0x62, 0x8e, 0x7b,
				0x7f, 0x31, 0x6e, 0x47, 0x27, 0x16, 0xa8, 0x1a, 0xc4, 0x2d, 0x71, 0xe2, 0x19, 0x55, 0x83, 0xb8,
				0x29, 0x4e, 0xbc, 0xa2, 0x6a, 0x10, 0x37, 0xa2, 0x13, 0xef, 0xa8, 0x1a, 0xc4, 0xf5, 0xe0, 0xc4,
				0x27, 0xaa, 0x06, 0x71, 0x4d, 0x06, 0xf1, 0x83, 0xff, 0x57, 0xa6, 0x30, 0x87, 0x41, 0xfc, 0x2e,
				0x41, 0x99, 0xc2, 0x14, 0x0a, 0x51, 0xde, 0x74, 0x29, 0x18, 0x43, 0x5b, 0x50, 0xd8, 0x16, 0x0c,
				0x6c, 0x0b, 0x92, 0x6d, 0x41, 0x74, 0x04, 0xd1, 0x11, 0x44, 0x47, 0xfc, 0x01, 0x95, 0x51, 0x2c,
				0x83, 0x13, 0x7f, 0xab, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
				0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::ColorTypeNotSupported == error);
		}

		TEST_METHOD(PngSuite_f01n2c08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x00, 0x00, 0xfc, 0x18, 0xed,
				0xa3, 0x00, 0x00, 0x06, 0x88, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x6d, 0xd5, 0x49, 0x88, 0x24,
				0x79, 0x15, 0xc7, 0xf1, 0x6f, 0x44, 0x2d, 0x59, 0x4b, 0x57, 0x65, 0x65, 0xed, 0xd5, 0xeb, 0x0c,
				0x88, 0xe2, 0xc1, 0xed, 0xa2, 0x78, 0xd0, 0xc6, 0x93, 0x20, 0x88, 0xa0, 0x0e, 0xa2, 0x73, 0xe8,
				0xc1, 0xcb, 0x40, 0x23, 0x78, 0xd0, 0xc6, 0x83, 0x87, 0x19, 0xf0, 0xa0, 0x30, 0x03, 0x22, 0x08,
				0x8e, 0x20, 0x88, 0x83, 0xed, 0x02, 0x82, 0xe0, 0x28, 0x2a, 0x22, 0xd2, 0x88, 0xb8, 0xe0, 0x82,
				0x3d, 0xf4, 0x94, 0xdd, 0xb5, 0x75, 0xed, 0x55, 0xd9, 0x55, 0x15, 0xf5, 0x8f, 0x8c, 0x7f, 0xbe,
				0x17, 0x11, 0x99, 0xf1, 0x3c, 0x44, 0x46, 0x57, 0xd6, 0x74, 0xc7, 0xf1, 0x7f, 0xf8, 0x7f, 0x78,
				0xef, 0xc5, 0xff, 0xfd, 0x42, 0x63, 0xc4, 0x46, 0xea, 0x36, 0xb5, 0x60, 0x8b, 0xd7, 0xec, 0x99,
				0x77, 0xd9, 0xbb, 0xdf, 0x67, 0x1f, 0xf8, 0x90, 0x7d, 0xf8, 0xba, 0x7d, 0xec, 0xe3, 0xf6, 0x89,
				0x4f, 0xd9, 0xa7, 0x3f, 0x67, 0x5f, 0xb8, 0x61, 0x5f, 0x7c, 0xd1, 0x6e, 0x7e, 0xd9, 0xbe, 0xf2,
				0x35, 0xfb, 0xfa, 0x4b, 0xf6, 0x8d, 0x6f, 0xda, 0x2b, 0xdf, 0xb6, 0xef, 0x7e, 0xcf, 0x7e, 0xf0,
				0x43, 0xfb, 0xf1, 0x4f, 0xed, 0x17, 0xbf, 0xb4, 0x5f, 0xff, 0xd6, 0xfe, 0xf8, 0x27, 0xfb, 0xcb,
				0x5f, 0xed, 0x5f, 0xff, 0xb1, 0x7b, 0xcb, 0xb6, 0xbe, 0x61, 0x7b, 0xfb, 0x76, 0x12, 0x59, 0x5b,
				0xcc, 0x2c, 0x8c, 0xae, 0x18, 0x0b, 0x29, 0xf3, 0xca, 0x9c, 0x32, 0xab, 0x4c, 0x2b, 0xd3, 0x4a,
				0x43, 0x99, 0x52, 0x26, 0x95, 0x49, 0x65, 0x42, 0xb9, 0xa0, 0x8c, 0x2b, 0xa3, 0xca, 0xa8, 0x32,
				0xa2, 0xd4, 0x94, 0x21, 0x65, 0x48, 0x19, 0x54, 0x06, 0x94, 0x50, 0x41, 0x41, 0x31, 0xa5, 0x50,
				0x3a, 0x4a, 0x47, 0xc9, 0x95, 0x4c, 0x51, 0x0d, 0xdd, 0x45, 0xa2, 0xcb, 0xc6, 0x52, 0xca, 0xa2,
				0xb2, 0xa0, 0xcc, 0x2b, 0xb3, 0xca, 0x8c, 0x32, 0xa3, 0x4c, 0x2b, 0x53, 0x4a, 0xbd, 0x4f, 0x1a,
				0x57, 0xc6, 0x2a, 0xa9, 0xa6, 0x0c, 0x57, 0xcc, 0xa0, 0x12, 0x2a, 0x41, 0x1f, 0xd3, 0xed, 0x31,
				0xa1, 0x9b, 0x37, 0xb7, 0x48, 0xb4, 0x64, 0x5c, 0x4c, 0x59, 0xd2, 0xa7, 0x33, 0x8d, 0x8a, 0x99,
				0xa8, 0x0a, 0x1a, 0xeb, 0xab, 0xa6, 0x76, 0xbe, 0x9a, 0xf3, 0x4c, 0xe8, 0x66, 0xcc, 0xcd, 0x16,
				0x6e, 0xc1, 0xa2, 0x85, 0x82, 0x4b, 0xca, 0x45, 0xed, 0x63, 0xa4, 0x8f, 0x91, 0xb3, 0xbe, 0x4d,
				0x48, 0xaf, 0x69, 0xe3, 0xca, 0x98, 0xf4, 0x98, 0x61, 0x61, 0x48, 0x2a, 0x46, 0x08, 0xa4, 0x64,
				0xc2, 0xb8, 0x6e, 0xae, 0x81, 0x9b, 0x36, 0x37, 0x47, 0x34, 0x67, 0x5c, 0xd6, 0x3e, 0x26, 0x65,
				0x41, 0xaa, 0x6a, 0xd2, 0x9e, 0xd1, 0x50, 0xa6, 0x52, 0xea, 0xc2, 0x64, 0x39, 0x9b, 0x94, 0x31,
				0x61, 0x54, 0x19, 0x49, 0xa9, 0x29, 0x35, 0x61, 0x58, 0x19, 0x4c, 0x2b, 0x46, 0xc3, 0x78, 0x82,
				0x78, 0xd2, 0x5c, 0x1d, 0x37, 0x65, 0x6e, 0x86, 0x68, 0xc6, 0xb8, 0xa2, 0x7d, 0x4c, 0xca, 0xa2,
				0xf4, 0x9a, 0x36, 0x97, 0x32, 0x2b, 0xd5, 0x2f, 0x50, 0x19, 0x13, 0xca, 0x44, 0xca, 0x05, 0x61,
				0x5c, 0x19, 0x4b, 0x19, 0xa9, 0x8c, 0xa1, 0x94, 0x41, 0x65, 0x40, 0xc2, 0xd6, 0x28, 0xf1, 0x38,
				0xf1, 0x05, 0x73, 0x93, 0xb8, 0x49, 0x73, 0x0d, 0xa2, 0x86, 0x71, 0x55, 0xfb, 0x98, 0x94, 0x25,
				0xa9, 0x9a, 0x96, 0x32, 0x57, 0xf5, 0x6d, 0x3a, 0xa5, 0x21, 0x55, 0xd3, 0xfa, 0x8c, 0x51, 0x65,
				0x44, 0xa8, 0x29, 0xc3, 0x29, 0x43, 0x1a, 0x26, 0x35, 0x6b, 0xd5, 0x2c, 0x1e, 0xb5, 0x78, 0xcc,
				0xdc, 0x05, 0x73, 0x13, 0x85, 0xab, 0x5b, 0x54, 0x2f, 0xb8, 0x26, 0x5c, 0x15, 0xae, 0x08, 0x97,
				0x85, 0x4b, 0x1a, 0x5c, 0xfa, 0x7b, 0x70, 0xf1, 0x4e, 0xb0, 0xf4, 0xfb, 0x60, 0xf1, 0x57, 0xc1,
				0xc2, 0xcf, 0x83, 0xf9, 0x1f, 0x31, 0x2b, 0xd5, 0x6c, 0x84, 0x29, 0xa1, 0xae, 0x4c, 0xca, 0xd9,
				0x78, 0xc6, 0x84, 0x51, 0x61, 0x44, 0xc3, 0x9d, 0x84, 0xed, 0x84, 0xcd, 0x16, 0xeb, 0xb1, 0xad,
				0xc6, 0xdc, 0x77, 0x2c, 0x3b, 0x7b, 0xcb, 0x71, 0x37, 0xb2, 0x4d, 0x74, 0x0b, 0xdd, 0x46, 0x83,
				0xe0, 0x01, 0x4f, 0x7c, 0x41, 0xf0, 0xfa, 0x11, 0x7a, 0x8c, 0x1e, 0xa3, 0x11, 0x7a, 0x8a, 0x3a,
				0xd4, 0xa1, 0x2d, 0x34, 0x41, 0x13, 0xd4, 0xa3, 0x82, 0x86, 0x07, 0xde, 0x76, 0x13, 0xb6, 0x13,
				0xb6, 0x5a, 0x6c, 0xc4, 0xb6, 0x1e, 0xb3, 0xe2, 0xf8, 0x9f, 0xb3, 0x65, 0xc7, 0x9b, 0x91, 0x6d,
				0xa0, 0x57, 0x83, 0x66, 0x79, 0xe3, 0xdf, 0xec, 0x9d, 0xff, 0xb0, 0xf7, 0xfe, 0xd3, 0x3e, 0xf8,
				0x6f, 0xfb, 0x68, 0x79, 0x32, 0x17, 0xbc, 0xde, 0x44, 0x8f, 0xd0, 0x52, 0x3a, 0x41, 0x4f, 0x2b,
				0xe9, 0x31, 0x13, 0x36, 0x3d, 0x87, 0xde, 0xf6, 0x13, 0xdb, 0x4d, 0x6c, 0xbb, 0x65, 0x9b, 0xb1,
				0x6d, 0xc4, 0xb6, 0xe6, 0xec, 0x81, 0xb3, 0xfb, 0xce, 0xee, 0x45, 0x45, 0x79, 0xd7, 0x4f, 0x6c,
				0x6e, 0x13, 0xd9, 0x42, 0xb6, 0x91, 0x1d, 0xe4, 0x37, 0xf6, 0x91, 0xf2, 0xfc, 0x00, 0x39, 0x44,
				0x9a, 0xc8, 0x23, 0xe4, 0x08, 0x39, 0x46, 0x1e, 0x57, 0x13, 0xa3, 0x2d, 0x34, 0x3c, 0xf1, 0x76,
				0xe4, 0x69, 0x7a, 0x0e, 0x12, 0xf6, 0x13, 0x76, 0x5a, 0xb6, 0x1d, 0xb3, 0x19, 0xb3, 0xe1, 0x6c,
				0xd5, 0xb1, 0xe2, 0x7a, 0x0d, 0x59, 0x47, 0x37, 0xd0, 0x87, 0xe8, 0xe3, 0xbe, 0x95, 0xe7, 0x7b,
				0xe8, 0x3e, 0x7a, 0x88, 0x36, 0xd1, 0x47, 0xbd, 0x6a, 0xa4, 0xac, 0xa6, 0x94, 0xc2, 0xd3, 0x36,
				0x91, 0xb7, 0x63, 0xcf, 0x91, 0xa7, 0x99, 0x70, 0x90, 0xb0, 0xd7, 0xb2, 0x9d, 0x98, 0xad, 0x98,
				0x87, 0xce, 0xd6, 0x1d, 0x9f, 0xdd, 0x18, 0xfc, 0xfc, 0xc9, 0xe0, 0x2a, 0xba, 0x86, 0xf6, 0x33,
				0x25, 0xb0, 0x8b, 0xee, 0xa1, 0x25, 0x73, 0x70, 0x26, 0x9d, 0x19, 0x61, 0x4b, 0x70, 0x6d, 0x9c,
				0xb7, 0x13, 0xcf, 0xb1, 0xe7, 0x28, 0xa1, 0x99, 0x70, 0xd0, 0xb2, 0xbd, 0x98, 0xdd, 0x98, 0x2d,
				0x67, 0x0f, 0x1d, 0x1b, 0x8e, 0x95, 0xc8, 0x56, 0xd0, 0x7e, 0xa6, 0x04, 0xca, 0x6a, 0x76, 0xd0,
				0xdd, 0x8a, 0x29, 0x8d, 0x26, 0x52, 0x16, 0x14, 0x7a, 0x21, 0x11, 0xe2, 0x36, 0xb1, 0xb7, 0x53,
				0x6f, 0x27, 0xde, 0x8e, 0x13, 0x1e, 0x25, 0x34, 0x5b, 0xb6, 0x1f, 0xdb, 0x5e, 0x6c, 0x3b, 0xce,
				0xb6, 0x9c, 0x6d, 0x3a, 0x5b, 0x8b, 0x8a, 0x07, 0xc8, 0x0a, 0xb2, 0x8a, 0xfc, 0x2c, 0x58, 0x29,
				0x81, 0x87, 0x48, 0xff, 0x6c, 0xce, 0x57, 0x23, 0x8f, 0x90, 0x50, 0xd5, 0x54, 0x4c, 0xc4, 0x7c,
				0xdb, 0x12, 0x6f, 0x2d, 0x6f, 0xce, 0x17, 0x2e, 0x29, 0xa2, 0xa4, 0x38, 0x69, 0x15, 0x47, 0x71,
				0xd1, 0x8c, 0xbb, 0x87, 0xae, 0xbb, 0xef, 0xba, 0x7b, 0xae, 0xbb, 0x1d, 0x75, 0xd6, 0x48, 0xee,
				0x06, 0x47, 0xe5, 0xed, 0xef, 0xb0, 0x67, 0x36, 0xf1, 0x5b, 0xf8, 0x6d, 0xfc, 0x0e, 0x7e, 0x97,
				0xf6, 0x2e, 0x7e, 0x1f, 0x7f, 0x80, 0x3f, 0xc4, 0x37, 0x69, 0x37, 0x69, 0x87, 0xa4, 0xc3, 0xa6,
				0x35, 0x64, 0x04, 0x19, 0xa5, 0x3d, 0x86, 0x1f, 0xc7, 0x5f, 0x30, 0x3f, 0x49, 0x52, 0x27, 0x69,
				0xd0, 0x9a, 0x26, 0x9e, 0xb5, 0x78, 0x0e, 0xb7, 0x80, 0x5b, 0xc2, 0x5d, 0xea, 0x04, 0xbd, 0xb1,
				0xcf, 0xda, 0x7b, 0x9e, 0x1a, 0x20, 0x72, 0x3e, 0x40, 0x42, 0x74, 0x88, 0x74, 0xc8, 0x74, 0xd8,
				0xa4, 0x66, 0x32, 0xd2, 0x67, 0x4c, 0x58, 0x32, 0x69, 0xc9, 0x94, 0xb5, 0x1a, 0x16, 0xcf, 0x58,
				0x3c, 0x67, 0x6e, 0xbe, 0xfb, 0xec, 0x6e, 0x79, 0xfb, 0x80, 0x5d, 0x17, 0x16, 0x85, 0x05, 0x61,
				0x5e, 0x98, 0x15, 0x66, 0x84, 0x19, 0xa9, 0x02, 0x44, 0x98, 0x94, 0xde, 0xb3, 0x1e, 0x0f, 0xc9,
				0x06, 0xd0, 0x41, 0xd2, 0x21, 0x74, 0x18, 0xa9, 0x99, 0xd4, 0x68, 0x8f, 0xe2, 0x47, 0x4b, 0x86,
				0x64, 0x82, 0xa4, 0x4e, 0x6b, 0xca, 0xe2, 0x46, 0x71, 0xfd, 0xbf, 0xe5, 0xed, 0xe1, 0xc6, 0x67,
				0x2c, 0x5a, 0x7a, 0xdb, 0x66, 0x2f, 0x57, 0xae, 0x3c, 0x11, 0x20, 0x21, 0x59, 0x40, 0x36, 0x80,
				0x0e, 0x90, 0x0e, 0xa0, 0x83, 0xc8, 0x90, 0xc9, 0x30, 0xed, 0x1a, 0x7e, 0xa4, 0xc7, 0x24, 0xe3,
				0x24, 0x13, 0xf6, 0xfc, 0x9f, 0x7b, 0xb7, 0xdf, 0x79, 0x01, 0x37, 0x8b, 0x5b, 0xb0, 0x68, 0x41,
				0x9f, 0x08, 0x10, 0xed, 0x6d, 0xa8, 0xc7, 0xcc, 0x54, 0x09, 0x04, 0x64, 0x01, 0x1a, 0x56, 0xc6,
				0xa0, 0xc9, 0x10, 0xed, 0x61, 0x7c, 0x8f, 0xb1, 0xaf, 0xfe, 0xa1, 0xb7, 0x7f, 0x6e, 0xbf, 0x48,
				0x5c, 0xc7, 0x35, 0x70, 0xd3, 0xb8, 0x39, 0x8b, 0xe6, 0xf4, 0x7c, 0x80, 0x9c, 0xcf, 0xa9, 0x69,
				0xa5, 0x11, 0x92, 0x43, 0x66, 0x95, 0x11, 0x90, 0x06, 0x68, 0x88, 0x0c, 0x98, 0x0c, 0x5a, 0x7b,
				0xc8, 0xfc, 0x90, 0xbd, 0xf2, 0xbb, 0xc7, 0x0b, 0xce, 0x9e, 0xff, 0x7e, 0xf1, 0xc9, 0xef, 0x14,
				0xd7, 0xbf, 0x55, 0xbc, 0xff, 0xa5, 0xe2, 0xd9, 0x5b, 0xc5, 0xf4, 0x97, 0x8a, 0x68, 0xe6, 0xf1,
				0xca, 0x15, 0x2e, 0x0a, 0x4b, 0x7d, 0xb3, 0x99, 0x13, 0x66, 0x43, 0xf2, 0x82, 0xdc, 0xc8, 0x8c,
				0x0c, 0x32, 0xfa, 0x8c, 0x10, 0x19, 0xa0, 0x3d, 0xf8, 0xe4, 0x1e, 0x3d, 0xf7, 0xb9, 0x86, 0x45,
				0x0d, 0x3d, 0x1f, 0x20, 0xda, 0x17, 0x20, 0x21, 0x5d, 0x23, 0x2f, 0xc8, 0x0b, 0xb2, 0x82, 0xcc,
				0xc8, 0x0c, 0x35, 0x52, 0x50, 0x10, 0x90, 0x80, 0xe7, 0x9e, 0xe3, 0xc6, 0x0d, 0x6e, 0xde, 0xe4,
				0xd6, 0xad, 0xe0, 0xe5, 0x97, 0x83, 0x57, 0x5f, 0x0d, 0x5e, 0x7b, 0x2d, 0xb8, 0x7d, 0x3b, 0x78,
				0xe3, 0x8d, 0xe0, 0xce, 0x1d, 0xdc, 0x04, 0xae, 0x6e, 0x51, 0x5d, 0xb9, 0xf6, 0x36, 0x46, 0x58,
				0x52, 0x16, 0x43, 0xf2, 0x0e, 0x79, 0x97, 0x34, 0x47, 0x73, 0x24, 0xa3, 0x9d, 0xe1, 0x33, 0x5a,
				0x4a, 0x9c, 0xe2, 0x94, 0x48, 0x38, 0x11, 0x8e, 0xda, 0x34, 0x3d, 0x07, 0xde, 0xf6, 0xbc, 0xed,
				0x24, 0xb6, 0x9d, 0xd8, 0x66, 0xcb, 0xd6, 0x63, 0x5b, 0x8d, 0xed, 0xbe, 0xb3, 0x65, 0x67, 0x6f,
				0xb9, 0xe2, 0x6e, 0x74, 0xee, 0x4d, 0xef, 0x22, 0xbb, 0xc8, 0x3e, 0x21, 0x9d, 0x2e, 0x9d, 0x0e,
				0x79, 0x97, 0x2c, 0x27, 0xcd, 0x91, 0x0c, 0xc9, 0xf0, 0x19, 0x89, 0xd2, 0x4a, 0x71, 0xca, 0x69,
				0x65, 0x3c, 0xf2, 0x1c, 0x7a, 0x0e, 0x3c, 0x7d, 0x01, 0x42, 0x15, 0x20, 0x2c, 0x3b, 0x7b, 0x33,
				0x3a, 0xb7, 0x72, 0x77, 0x90, 0x1d, 0x42, 0x8a, 0x82, 0x6e, 0x97, 0x4e, 0x87, 0x4e, 0x97, 0x2c,
				0x27, 0xcb, 0xd1, 0x0c, 0x2d, 0x4b, 0x51, 0x92, 0x94, 0x58, 0x71, 0xc2, 0xa9, 0x70, 0xdc, 0xe6,
				0xd8, 0xd3, 0xf4, 0x1c, 0x7a, 0xf6, 0x13, 0x76, 0x13, 0xb6, 0x5b, 0x6c, 0xc6, 0x6c, 0xc4, 0xac,
				0x39, 0x1e, 0x38, 0xee, 0x3b, 0xbb, 0x17, 0xe9, 0xf9, 0xcd, 0x1e, 0x62, 0x05, 0x45, 0x41, 0x51,
				0x19, 0x79, 0x4e, 0x96, 0x93, 0x66, 0xa4, 0x19, 0x92, 0xd1, 0x56, 0x7c, 0x4a, 0x4b, 0x89, 0x05,
				0x27, 0x44, 0x6d, 0x4e, 0xca, 0xcd, 0x7e, 0x16, 0x20, 0x54, 0x01, 0xc2, 0xaa, 0x63, 0xc5, 0xd9,
				0x72, 0xd4, 0xbf, 0xd9, 0x43, 0xcc, 0x28, 0x2a, 0xa3, 0xdb, 0xa1, 0xd3, 0xa5, 0x93, 0x93, 0x57,
				0x86, 0x66, 0xb4, 0x95, 0x76, 0x4a, 0xa2, 0xb4, 0x04, 0x27, 0x9c, 0xb6, 0x89, 0xca, 0xcd, 0x7e,
				0x16, 0x20, 0x54, 0x01, 0xc2, 0xba, 0x63, 0xcd, 0xd9, 0xfd, 0x48, 0x56, 0x91, 0x35, 0x64, 0x9d,
				0x10, 0x0c, 0x0c, 0x2b, 0xb0, 0x82, 0xa2, 0x4b, 0xd1, 0xa1, 0xdb, 0xa5, 0x93, 0xd3, 0xc9, 0xc9,
				0x32, 0xb2, 0x92, 0x51, 0x24, 0xc5, 0x2b, 0x5e, 0xa8, 0x02, 0x84, 0xf3, 0x01, 0x42, 0x15, 0x20,
				0x54, 0x01, 0xa2, 0x2b, 0xe8, 0x2a, 0x61, 0xf9, 0x80, 0x9e, 0x62, 0x74, 0x73, 0x3a, 0x39, 0x79,
				0x46, 0x5e, 0x19, 0x9a, 0xd2, 0x56, 0xfa, 0x02, 0x84, 0xd3, 0x92, 0xe9, 0x05, 0x08, 0xfb, 0x31,
				0x7b, 0x31, 0x3b, 0x8e, 0x2d, 0xc7, 0xa6, 0x63, 0x2d, 0xd2, 0x07, 0xfc, 0x1f, 0x43, 0x3e, 0x14,
				0xa7, 0x57, 0x65, 0x3d, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
				0x82
			};

			std::vector<BYTE> expected = {
				0xff, 0x00, 0x08, 0xff, 0x08, 0x0f, 0xff, 0x10, 0x17, 0xff, 0x18, 0x1f, 0xff, 0x20, 0x27, 0xff,
				0x29, 0x2f, 0xff, 0x31, 0x37, 0xff, 0x39, 0x3f, 0xff, 0x41, 0x47, 0xff, 0x4a, 0x4f, 0xff, 0x52,
				0x57, 0xff, 0x5a, 0x5f, 0xff, 0x62, 0x67, 0xff, 0x6a, 0x6f, 0xff, 0x73, 0x77, 0xff, 0x7b, 0x7f,
				0xff, 0x83, 0x87, 0xff, 0x8b, 0x8f, 0xff, 0x94, 0x97, 0xff, 0x9c, 0x9f, 0xff, 0xa4, 0xa7, 0xff,
				0xac, 0xaf, 0xff, 0xb4, 0xb7, 0xff, 0xbd, 0xbf, 0xff, 0xc5, 0xc7, 0xff, 0xcd, 0xcf, 0xff, 0xd5,
				0xd7, 0xff, 0xde, 0xdf, 0xff, 0xe6, 0xe7, 0xff, 0xee, 0xef, 0xff, 0xf6, 0xf7, 0xff, 0xff, 0xff,
				0xee, 0x1d, 0x07, 0xff, 0x1f, 0x08, 0xff, 0x26, 0x0f, 0xff, 0x2d, 0x17, 0xff, 0x34, 0x1f, 0xff,
				0x3b, 0x27, 0xff, 0x43, 0x2f, 0xff, 0x4a, 0x37, 0xff, 0x51, 0x3f, 0xff, 0x58, 0x47, 0xff, 0x60,
				0x4f, 0xff, 0x67, 0x57, 0xff, 0x6e, 0x5f, 0xff, 0x75, 0x67, 0xff, 0x7c, 0x6f, 0xff, 0x84, 0x77,
				0xff, 0x8b, 0x7f, 0xff, 0x92, 0x87, 0xff, 0x99, 0x8f, 0xff, 0xa1, 0x97, 0xff, 0xa8, 0x9f, 0xff,
				0xaf, 0xa7, 0xff, 0xb6, 0xaf, 0xff, 0xbd, 0xb7, 0xff, 0xc5, 0xbf, 0xff, 0xcc, 0xc7, 0xff, 0xd3,
				0xcf, 0xff, 0xda, 0xd7, 0xff, 0xe2, 0xdf, 0xff, 0xe9, 0xe7, 0xff, 0xf0, 0xef, 0xff, 0xf7, 0xf7,
				0xdf, 0x37, 0x07, 0xee, 0x3b, 0x07, 0xff, 0x3f, 0x08, 0xff, 0x45, 0x0f, 0xff, 0x4b, 0x17, 0xff,
				0x51, 0x1f, 0xff, 0x57, 0x27, 0xff, 0x5d, 0x2f, 0xff, 0x64, 0x37, 0xff, 0x6a, 0x3f, 0xff, 0x70,
				0x47, 0xff, 0x76, 0x4f, 0xff, 0x7c, 0x57, 0xff, 0x83, 0x5f, 0xff, 0x89, 0x67, 0xff, 0x8f, 0x6f,
				0xff, 0x95, 0x77, 0xff, 0x9b, 0x7f, 0xff, 0xa2, 0x87, 0xff, 0xa8, 0x8f, 0xff, 0xae, 0x97, 0xff,
				0xb4, 0x9f, 0xff, 0xba, 0xa7, 0xff, 0xc1, 0xaf, 0xff, 0xc7, 0xb7, 0xff, 0xcd, 0xbf, 0xff, 0xd3,
				0xc7, 0xff, 0xd9, 0xcf, 0xff, 0xe0, 0xd7, 0xff, 0xe6, 0xdf, 0xff, 0xec, 0xe7, 0xff, 0xf2, 0xef,
				0xd0, 0x4d, 0x06, 0xdf, 0x53, 0x07, 0xee, 0x58, 0x07, 0xff, 0x5f, 0x08, 0xff, 0x64, 0x0f, 0xff,
				0x69, 0x17, 0xff, 0x6e, 0x1f, 0xff, 0x73, 0x27, 0xff, 0x78, 0x2f, 0xff, 0x7d, 0x37, 0xff, 0x83,
				0x3f, 0xff, 0x88, 0x47, 0xff, 0x8d, 0x4f, 0xff, 0x92, 0x57, 0xff, 0x97, 0x5f, 0xff, 0x9c, 0x67,
				0xff, 0xa2, 0x6f, 0xff, 0xa7, 0x77, 0xff, 0xac, 0x7f, 0xff, 0xb1, 0x87, 0xff, 0xb6, 0x8f, 0xff,
				0xbb, 0x97, 0xff, 0xc1, 0x9f, 0xff, 0xc6, 0xa7, 0xff, 0xcb, 0xaf, 0xff, 0xd0, 0xb7, 0xff, 0xd5,
				0xbf, 0xff, 0xda, 0xc7, 0xff, 0xe0, 0xcf, 0xff, 0xe5, 0xd7, 0xff, 0xea, 0xdf, 0xff, 0xef, 0xe7,
				0xc1, 0x60, 0x05, 0xd0, 0x67, 0x05, 0xdf, 0x6f, 0x06, 0xee, 0x76, 0x06, 0xff, 0x7f, 0x07, 0xff,
				0x83, 0x0f, 0xff, 0x87, 0x17, 0xff, 0x8b, 0x1f, 0xff, 0x8f, 0x27, 0xff, 0x93, 0x2e, 0xff, 0x97,
				0x37, 0xff, 0x9b, 0x3f, 0xff, 0xa0, 0x47, 0xff, 0xa4, 0x4e, 0xff, 0xa8, 0x57, 0xff, 0xac, 0x5f,
				0xff, 0xb0, 0x67, 0xff, 0xb4, 0x6e, 0xff, 0xb8, 0x77, 0xff, 0xbc, 0x7f, 0xff, 0xc1, 0x87, 0xff,
				0xc5, 0x8e, 0xff, 0xc9, 0x97, 0xff, 0xcd, 0x9f, 0xff, 0xd1, 0xa6, 0xff, 0xd5, 0xae, 0xff, 0xd9,
				0xb7, 0xff, 0xdd, 0xbf, 0xff, 0xe2, 0xc6, 0xff, 0xe6, 0xce, 0xff, 0xea, 0xd7, 0xff, 0xee, 0xdf,
				0xb3, 0x6f, 0x04, 0xc1, 0x78, 0x05, 0xd0, 0x81, 0x05, 0xdf, 0x8b, 0x06, 0xee, 0x94, 0x06, 0xff,
				0x9f, 0x07, 0xff, 0xa2, 0x0f, 0xff, 0xa5, 0x17, 0xff, 0xa8, 0x1f, 0xff, 0xab, 0x27, 0xff, 0xae,
				0x2e, 0xff, 0xb1, 0x37, 0xff, 0xb4, 0x3f, 0xff, 0xb7, 0x47, 0xff, 0xba, 0x4e, 0xff, 0xbd, 0x57,
				0xff, 0xc1, 0x5f, 0xff, 0xc4, 0x67, 0xff, 0xc7, 0x6e, 0xff, 0xca, 0x77, 0xff, 0xcd, 0x7f, 0xff,
				0xd0, 0x87, 0xff, 0xd3, 0x8e, 0xff, 0xd6, 0x97, 0xff, 0xd9, 0x9f, 0xff, 0xdc, 0xa6, 0xff, 0xe0,
				0xae, 0xff, 0xe3, 0xb7, 0xff, 0xe6, 0xbf, 0xff, 0xe9, 0xc6, 0xff, 0xec, 0xce, 0xff, 0xef, 0xd7,
				0xa5, 0x7c, 0x04, 0xb3, 0x86, 0x04, 0xc1, 0x90, 0x05, 0xd0, 0x9b, 0x05, 0xdf, 0xa7, 0x06, 0xee,
				0xb2, 0x06, 0xff, 0xbf, 0x07, 0xff, 0xc1, 0x0f, 0xff, 0xc3, 0x17, 0xff, 0xc5, 0x1f, 0xff, 0xc7,
				0x27, 0xff, 0xc9, 0x2e, 0xff, 0xcb, 0x37, 0xff, 0xcd, 0x3f, 0xff, 0xcf, 0x47, 0xff, 0xd1, 0x4e,
				0xff, 0xd3, 0x57, 0xff, 0xd5, 0x5f, 0xff, 0xd7, 0x67, 0xff, 0xd9, 0x6e, 0xff, 0xdb, 0x77, 0xff,
				0xdd, 0x7f, 0xff, 0xe0, 0x87, 0xff, 0xe2, 0x8e, 0xff, 0xe4, 0x97, 0xff, 0xe6, 0x9f, 0xff, 0xe8,
				0xa6, 0xff, 0xea, 0xae, 0xff, 0xec, 0xb7, 0xff, 0xee, 0xbf, 0xff, 0xf0, 0xc6, 0xff, 0xf2, 0xce,
				0x98, 0x85, 0x04, 0xa5, 0x91, 0x04, 0xb3, 0x9c, 0x04, 0xc1, 0xa9, 0x05, 0xd0, 0xb5, 0x05, 0xdf,
				0xc3, 0x06, 0xee, 0xd0, 0x06, 0xff, 0xdf, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xe1, 0x17, 0xff, 0xe2,
				0x1f, 0xff, 0xe3, 0x27, 0xff, 0xe4, 0x2e, 0xff, 0xe5, 0x37, 0xff, 0xe6, 0x3f, 0xff, 0xe7, 0x47,
				0xff, 0xe8, 0x4e, 0xff, 0xe9, 0x57, 0xff, 0xea, 0x5f, 0xff, 0xeb, 0x67, 0xff, 0xec, 0x6e, 0xff,
				0xed, 0x77, 0xff, 0xee, 0x7f, 0xff, 0xef, 0x87, 0xff, 0xf0, 0x8e, 0xff, 0xf1, 0x97, 0xff, 0xf2,
				0x9f, 0xff, 0xf3, 0xa6, 0xff, 0xf4, 0xae, 0xff, 0xf5, 0xb7, 0xff, 0xf6, 0xbf, 0xff, 0xf7, 0xc6,
				0x8c, 0x8c, 0x03, 0x98, 0x98, 0x03, 0xa5, 0xa5, 0x03, 0xb3, 0xb3, 0x04, 0xc1, 0xc1, 0x04, 0xd0,
				0xd0, 0x04, 0xdf, 0xdf, 0x05, 0xee, 0xee, 0x05, 0xff, 0xff, 0x06, 0xff, 0xff, 0x0e, 0xff, 0xff,
				0x16, 0xff, 0xff, 0x1e, 0xff, 0xff, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0xff, 0xff, 0x66, 0xff,
				0xff, 0x6e, 0xff, 0xff, 0x76, 0xff, 0xff, 0x7e, 0xff, 0xff, 0x86, 0xff, 0xff, 0x8e, 0xff, 0xff,
				0x96, 0xff, 0xff, 0x9e, 0xff, 0xff, 0xa6, 0xff, 0xff, 0xae, 0xff, 0xff, 0xb6, 0xff, 0xff, 0xbe,
				0x70, 0x80, 0x03, 0x7b, 0x8c, 0x03, 0x86, 0x98, 0x03, 0x91, 0xa5, 0x03, 0x9d, 0xb3, 0x04, 0xa9,
				0xc1, 0x04, 0xb6, 0xd0, 0x04, 0xc4, 0xdf, 0x05, 0xd1, 0xee, 0x05, 0xe0, 0xff, 0x06, 0xe1, 0xff,
				0x0e, 0xe2, 0xff, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xeb, 0xff, 0x5e, 0xec,
				0xff, 0x66, 0xec, 0xff, 0x6e, 0xee, 0xff, 0x76, 0xef, 0xff, 0x7e, 0xf0, 0xff, 0x86, 0xf0, 0xff,
				0x8e, 0xf2, 0xff, 0x96, 0xf3, 0xff, 0x9e, 0xf3, 0xff, 0xa6, 0xf4, 0xff, 0xae, 0xf6, 0xff, 0xb6,
				0x58, 0x75, 0x02, 0x60, 0x80, 0x03, 0x69, 0x8c, 0x03, 0x73, 0x98, 0x03, 0x7c, 0xa5, 0x03, 0x87,
				0xb3, 0x04, 0x91, 0xc1, 0x04, 0x9c, 0xd0, 0x04, 0xa8, 0xdf, 0x05, 0xb3, 0xee, 0x05, 0xc0, 0xff,
				0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0xff, 0x26, 0xca, 0xff, 0x2e,
				0xcc, 0xff, 0x36, 0xce, 0xff, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd6,
				0xff, 0x5e, 0xd8, 0xff, 0x66, 0xda, 0xff, 0x6e, 0xdc, 0xff, 0x76, 0xde, 0xff, 0x7e, 0xe0, 0xff,
				0x86, 0xe2, 0xff, 0x8e, 0xe4, 0xff, 0x96, 0xe6, 0xff, 0x9e, 0xe8, 0xff, 0xa6, 0xea, 0xff, 0xae,
				0x42, 0x6a, 0x02, 0x49, 0x75, 0x02, 0x50, 0x80, 0x02, 0x58, 0x8c, 0x02, 0x5f, 0x98, 0x02, 0x68,
				0xa5, 0x03, 0x70, 0xb3, 0x03, 0x79, 0xc1, 0x03, 0x82, 0xd0, 0x04, 0x8c, 0xdf, 0x04, 0x95, 0xee,
				0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0xff, 0x15, 0xa9, 0xff, 0x1d, 0xac, 0xff, 0x25,
				0xaf, 0xff, 0x2d, 0xb2, 0xff, 0x35, 0xb5, 0xff, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbe,
				0xff, 0x55, 0xc1, 0xff, 0x5d, 0xc4, 0xff, 0x65, 0xc7, 0xff, 0x6d, 0xca, 0xff, 0x75, 0xcd, 0xff,
				0x7d, 0xd1, 0xff, 0x86, 0xd4, 0xff, 0x8e, 0xd7, 0xff, 0x96, 0xda, 0xff, 0x9e, 0xdd, 0xff, 0xa6,
				0x30, 0x5f, 0x01, 0x35, 0x6a, 0x02, 0x3a, 0x75, 0x02, 0x40, 0x80, 0x02, 0x46, 0x8c, 0x02, 0x4c,
				0x98, 0x02, 0x53, 0xa5, 0x03, 0x5a, 0xb3, 0x03, 0x61, 0xc1, 0x03, 0x68, 0xd0, 0x04, 0x70, 0xdf,
				0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0xff, 0x0d, 0x88, 0xff, 0x15, 0x8c, 0xff, 0x1d,
				0x90, 0xff, 0x25, 0x94, 0xff, 0x2d, 0x98, 0xff, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4,
				0xff, 0x4d, 0xa8, 0xff, 0x55, 0xad, 0xff, 0x5d, 0xb1, 0xff, 0x65, 0xb5, 0xff, 0x6d, 0xb9, 0xff,
				0x75, 0xbd, 0xff, 0x7d, 0xc1, 0xff, 0x86, 0xc5, 0xff, 0x8e, 0xc9, 0xff, 0x96, 0xcd, 0xff, 0x9e,
				0x20, 0x55, 0x01, 0x24, 0x5f, 0x01, 0x27, 0x6a, 0x02, 0x2c, 0x75, 0x02, 0x30, 0x80, 0x02, 0x34,
				0x8c, 0x02, 0x39, 0x98, 0x02, 0x3e, 0xa5, 0x03, 0x43, 0xb3, 0x03, 0x48, 0xc1, 0x03, 0x4e, 0xd0,
				0x04, 0x54, 0xdf, 0x04, 0x59, 0xee, 0x04, 0x60, 0xff, 0x05, 0x65, 0xff, 0x0d, 0x6a, 0xff, 0x15,
				0x6f, 0xff, 0x1d, 0x74, 0xff, 0x25, 0x79, 0xff, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89,
				0xff, 0x45, 0x8e, 0xff, 0x4d, 0x93, 0xff, 0x55, 0x98, 0xff, 0x5d, 0x9d, 0xff, 0x65, 0xa2, 0xff,
				0x6d, 0xa7, 0xff, 0x75, 0xac, 0xff, 0x7d, 0xb2, 0xff, 0x86, 0xb7, 0xff, 0x8e, 0xbc, 0xff, 0x96,
				0x13, 0x4c, 0x01, 0x15, 0x55, 0x01, 0x18, 0x5f, 0x01, 0x1a, 0x6a, 0x02, 0x1d, 0x75, 0x02, 0x20,
				0x80, 0x02, 0x23, 0x8c, 0x02, 0x26, 0x98, 0x02, 0x29, 0xa5, 0x03, 0x2d, 0xb3, 0x03, 0x30, 0xc1,
				0x03, 0x34, 0xd0, 0x04, 0x38, 0xdf, 0x04, 0x3b, 0xee, 0x04, 0x40, 0xff, 0x05, 0x46, 0xff, 0x0d,
				0x4c, 0xff, 0x15, 0x52, 0xff, 0x1d, 0x58, 0xff, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6b,
				0xff, 0x3d, 0x71, 0xff, 0x45, 0x77, 0xff, 0x4d, 0x7d, 0xff, 0x55, 0x83, 0xff, 0x5d, 0x89, 0xff,
				0x65, 0x90, 0xff, 0x6d, 0x96, 0xff, 0x75, 0x9c, 0xff, 0x7d, 0xa2, 0xff, 0x86, 0xa8, 0xff, 0x8e,
				0x08, 0x43, 0x01, 0x09, 0x4c, 0x01, 0x0a, 0x55, 0x01, 0x0c, 0x5f, 0x01, 0x0d, 0x6a, 0x01, 0x0e,
				0x75, 0x01, 0x10, 0x80, 0x02, 0x11, 0x8c, 0x02, 0x13, 0x98, 0x02, 0x14, 0xa5, 0x02, 0x16, 0xb3,
				0x02, 0x18, 0xc1, 0x03, 0x1a, 0xd0, 0x03, 0x1c, 0xdf, 0x03, 0x1d, 0xee, 0x03, 0x20, 0xff, 0x04,
				0x27, 0xff, 0x0c, 0x2e, 0xff, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b,
				0xff, 0x34, 0x52, 0xff, 0x3c, 0x59, 0xff, 0x44, 0x60, 0xff, 0x4c, 0x67, 0xff, 0x54, 0x6f, 0xff,
				0x5d, 0x76, 0xff, 0x65, 0x7d, 0xff, 0x6d, 0x84, 0xff, 0x75, 0x8b, 0xff, 0x7d, 0x93, 0xff, 0x85,
				0x00, 0x3b, 0x00, 0x01, 0x43, 0x00, 0x01, 0x4c, 0x00, 0x01, 0x55, 0x00, 0x01, 0x5f, 0x00, 0x01,
				0x6a, 0x00, 0x01, 0x75, 0x00, 0x02, 0x80, 0x00, 0x02, 0x8c, 0x00, 0x02, 0x98, 0x00, 0x02, 0xa5,
				0x00, 0x02, 0xb3, 0x00, 0x03, 0xc1, 0x00, 0x03, 0xd0, 0x00, 0x03, 0xdf, 0x00, 0x03, 0xee, 0x00,
				0x04, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0xff, 0x20, 0x2c,
				0xff, 0x29, 0x34, 0xff, 0x31, 0x3c, 0xff, 0x39, 0x44, 0xff, 0x41, 0x4c, 0xff, 0x4a, 0x54, 0xff,
				0x52, 0x5d, 0xff, 0x5a, 0x65, 0xff, 0x62, 0x6d, 0xff, 0x6a, 0x75, 0xff, 0x73, 0x7d, 0xff, 0x7b,
				0x00, 0x34, 0x06, 0x00, 0x3b, 0x07, 0x01, 0x43, 0x08, 0x01, 0x4c, 0x09, 0x01, 0x55, 0x0a, 0x01,
				0x5f, 0x0b, 0x01, 0x6a, 0x0c, 0x01, 0x75, 0x0e, 0x02, 0x80, 0x0f, 0x02, 0x8c, 0x11, 0x02, 0x98,
				0x12, 0x02, 0xa5, 0x14, 0x02, 0xb3, 0x15, 0x03, 0xc1, 0x17, 0x03, 0xd0, 0x19, 0x03, 0xdf, 0x1b,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0xff, 0x2d, 0x1c, 0xff, 0x34, 0x24,
				0xff, 0x3b, 0x2c, 0xff, 0x43, 0x34, 0xff, 0x4a, 0x3c, 0xff, 0x51, 0x44, 0xff, 0x58, 0x4c, 0xff,
				0x60, 0x54, 0xff, 0x67, 0x5d, 0xff, 0x6e, 0x65, 0xff, 0x75, 0x6d, 0xff, 0x7c, 0x75, 0xff, 0x84,
				0x00, 0x2c, 0x0b, 0x00, 0x34, 0x0c, 0x00, 0x3b, 0x0e, 0x00, 0x43, 0x10, 0x00, 0x4c, 0x12, 0x01,
				0x55, 0x15, 0x01, 0x5f, 0x17, 0x01, 0x6a, 0x1a, 0x01, 0x75, 0x1c, 0x01, 0x80, 0x1f, 0x01, 0x8c,
				0x22, 0x01, 0x98, 0x25, 0x01, 0xa5, 0x28, 0x02, 0xb3, 0x2c, 0x02, 0xc1, 0x2f, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x3f, 0x0b, 0xff, 0x45, 0x13, 0xff, 0x4b, 0x1b,
				0xff, 0x51, 0x23, 0xff, 0x57, 0x2b, 0xff, 0x5d, 0x33, 0xff, 0x64, 0x3b, 0xff, 0x6a, 0x44, 0xff,
				0x70, 0x4c, 0xff, 0x76, 0x54, 0xff, 0x7c, 0x5c, 0xff, 0x83, 0x64, 0xff, 0x89, 0x6c, 0xff, 0x8f,
				0x00, 0x26, 0x0e, 0x00, 0x2c, 0x10, 0x00, 0x34, 0x13, 0x00, 0x3b, 0x16, 0x00, 0x43, 0x19, 0x00,
				0x4c, 0x1c, 0x01, 0x55, 0x20, 0x01, 0x5f, 0x23, 0x01, 0x6a, 0x27, 0x01, 0x75, 0x2b, 0x01, 0x80,
				0x2f, 0x01, 0x8c, 0x34, 0x01, 0x98, 0x38, 0x01, 0xa5, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x02, 0xdf, 0x53, 0x02, 0xee, 0x58, 0x03, 0xff, 0x5f, 0x0b, 0xff, 0x64, 0x13,
				0xff, 0x69, 0x1b, 0xff, 0x6e, 0x23, 0xff, 0x73, 0x2b, 0xff, 0x78, 0x33, 0xff, 0x7d, 0x3b, 0xff,
				0x83, 0x44, 0xff, 0x88, 0x4c, 0xff, 0x8d, 0x54, 0xff, 0x92, 0x5c, 0xff, 0x97, 0x64, 0xff, 0x9c,
				0x00, 0x20, 0x0f, 0x00, 0x26, 0x13, 0x00, 0x2c, 0x16, 0x00, 0x34, 0x19, 0x00, 0x3b, 0x1d, 0x00,
				0x43, 0x21, 0x00, 0x4c, 0x26, 0x01, 0x55, 0x2a, 0x01, 0x5f, 0x2f, 0x01, 0x6a, 0x34, 0x01, 0x75,
				0x3a, 0x01, 0x80, 0x3f, 0x01, 0x8c, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x02, 0xc1, 0x60, 0x02, 0xd0, 0x67, 0x02, 0xdf, 0x6f, 0x02, 0xee, 0x76, 0x03, 0xff, 0x7f, 0x0b,
				0xff, 0x83, 0x13, 0xff, 0x87, 0x1b, 0xff, 0x8b, 0x23, 0xff, 0x8f, 0x2b, 0xff, 0x93, 0x33, 0xff,
				0x97, 0x3b, 0xff, 0x9b, 0x44, 0xff, 0xa0, 0x4c, 0xff, 0xa4, 0x54, 0xff, 0xa8, 0x5c, 0xff, 0xac,
				0x00, 0x1a, 0x10, 0x00, 0x20, 0x14, 0x00, 0x26, 0x17, 0x00, 0x2c, 0x1b, 0x00, 0x34, 0x20, 0x00,
				0x3b, 0x25, 0x00, 0x43, 0x2a, 0x00, 0x4c, 0x2f, 0x01, 0x55, 0x35, 0x01, 0x5f, 0x3b, 0x01, 0x6a,
				0x42, 0x01, 0x75, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xa5, 0x67,
				0x02, 0xb3, 0x6f, 0x02, 0xc1, 0x78, 0x02, 0xd0, 0x81, 0x02, 0xdf, 0x8b, 0x02, 0xee, 0x94, 0x03,
				0xff, 0x9f, 0x0b, 0xff, 0xa2, 0x13, 0xff, 0xa5, 0x1b, 0xff, 0xa8, 0x23, 0xff, 0xab, 0x2b, 0xff,
				0xae, 0x33, 0xff, 0xb1, 0x3b, 0xff, 0xb4, 0x44, 0xff, 0xb7, 0x4c, 0xff, 0xba, 0x54, 0xff, 0xbd,
				0x00, 0x15, 0x10, 0x00, 0x1a, 0x13, 0x00, 0x20, 0x18, 0x00, 0x26, 0x1c, 0x00, 0x2c, 0x21, 0x00,
				0x34, 0x26, 0x00, 0x3b, 0x2c, 0x00, 0x43, 0x32, 0x00, 0x4c, 0x39, 0x00, 0x55, 0x40, 0x00, 0x5f,
				0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0xee, 0xb2, 0x02, 0xff, 0xbf, 0x0a, 0xff, 0xc1, 0x12, 0xff, 0xc3, 0x1a, 0xff, 0xc5, 0x22, 0xff,
				0xc7, 0x2a, 0xff, 0xc9, 0x32, 0xff, 0xcb, 0x3b, 0xff, 0xcd, 0x43, 0xff, 0xcf, 0x4b, 0xff, 0xd1,
				0x00, 0x10, 0x0e, 0x00, 0x15, 0x12, 0x00, 0x1a, 0x17, 0x00, 0x20, 0x1c, 0x00, 0x26, 0x21, 0x00,
				0x2c, 0x27, 0x00, 0x34, 0x2d, 0x00, 0x3b, 0x34, 0x00, 0x43, 0x3b, 0x00, 0x4c, 0x43, 0x00, 0x55,
				0x4b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
				0xdf, 0xc3, 0x01, 0xee, 0xd0, 0x02, 0xff, 0xdf, 0x0a, 0xff, 0xe0, 0x12, 0xff, 0xe1, 0x1a, 0xff,
				0xe2, 0x22, 0xff, 0xe3, 0x2a, 0xff, 0xe4, 0x32, 0xff, 0xe5, 0x3b, 0xff, 0xe6, 0x43, 0xff, 0xe7,
				0x00, 0x0d, 0x0d, 0x00, 0x10, 0x10, 0x00, 0x15, 0x15, 0x00, 0x1a, 0x1a, 0x00, 0x20, 0x20, 0x00,
				0x26, 0x26, 0x00, 0x2c, 0x2c, 0x00, 0x34, 0x34, 0x00, 0x3b, 0x3b, 0x00, 0x43, 0x43, 0x00, 0x4c,
				0x4c, 0x00, 0x55, 0x55, 0x00, 0x5f, 0x5f, 0x00, 0x6a, 0x6a, 0x00, 0x75, 0x75, 0x01, 0x80, 0x80,
				0x01, 0x8c, 0x8c, 0x01, 0x98, 0x98, 0x01, 0xa5, 0xa5, 0x01, 0xb3, 0xb3, 0x01, 0xc1, 0xc1, 0x01,
				0xd0, 0xd0, 0x01, 0xdf, 0xdf, 0x01, 0xee, 0xee, 0x02, 0xff, 0xff, 0x0a, 0xff, 0xff, 0x12, 0xff,
				0xff, 0x1a, 0xff, 0xff, 0x22, 0xff, 0xff, 0x2a, 0xff, 0xff, 0x32, 0xff, 0xff, 0x3b, 0xff, 0xff,
				0x00, 0x08, 0x09, 0x00, 0x0b, 0x0d, 0x00, 0x0e, 0x10, 0x00, 0x12, 0x15, 0x00, 0x17, 0x1a, 0x00,
				0x1c, 0x20, 0x00, 0x21, 0x26, 0x00, 0x27, 0x2c, 0x00, 0x2d, 0x34, 0x00, 0x34, 0x3b, 0x00, 0x3b,
				0x43, 0x00, 0x43, 0x4c, 0x00, 0x4b, 0x55, 0x00, 0x54, 0x5f, 0x00, 0x5d, 0x6a, 0x00, 0x66, 0x75,
				0x00, 0x70, 0x80, 0x00, 0x7b, 0x8c, 0x00, 0x86, 0x98, 0x00, 0x91, 0xa5, 0x00, 0x9d, 0xb3, 0x00,
				0xa9, 0xc1, 0x00, 0xb6, 0xd0, 0x00, 0xc4, 0xdf, 0x00, 0xd1, 0xee, 0x01, 0xe0, 0xff, 0x09, 0xe1,
				0xff, 0x11, 0xe2, 0xff, 0x19, 0xe3, 0xff, 0x21, 0xe4, 0xff, 0x29, 0xe4, 0xff, 0x32, 0xe6, 0xff,
				0x00, 0x04, 0x06, 0x00, 0x07, 0x09, 0x00, 0x09, 0x0d, 0x00, 0x0c, 0x10, 0x00, 0x10, 0x15, 0x00,
				0x13, 0x1a, 0x00, 0x18, 0x20, 0x00, 0x1c, 0x26, 0x00, 0x21, 0x2c, 0x00, 0x27, 0x34, 0x00, 0x2c,
				0x3b, 0x00, 0x33, 0x43, 0x00, 0x39, 0x4c, 0x00, 0x40, 0x55, 0x00, 0x48, 0x5f, 0x00, 0x4f, 0x6a,
				0x00, 0x58, 0x75, 0x00, 0x60, 0x80, 0x00, 0x69, 0x8c, 0x00, 0x73, 0x98, 0x00, 0x7c, 0xa5, 0x00,
				0x87, 0xb3, 0x00, 0x91, 0xc1, 0x00, 0x9c, 0xd0, 0x00, 0xa8, 0xdf, 0x00, 0xb3, 0xee, 0x01, 0xc0,
				0xff, 0x09, 0xc2, 0xff, 0x11, 0xc4, 0xff, 0x19, 0xc6, 0xff, 0x21, 0xc8, 0xff, 0x29, 0xca, 0xff,
				0x00, 0x02, 0x04, 0x00, 0x04, 0x06, 0x00, 0x05, 0x09, 0x00, 0x08, 0x0d, 0x00, 0x0a, 0x10, 0x00,
				0x0d, 0x15, 0x00, 0x10, 0x1a, 0x00, 0x14, 0x20, 0x00, 0x17, 0x26, 0x00, 0x1c, 0x2c, 0x00, 0x20,
				0x34, 0x00, 0x25, 0x3b, 0x00, 0x2a, 0x43, 0x00, 0x30, 0x4c, 0x00, 0x35, 0x55, 0x00, 0x3c, 0x5f,
				0x00, 0x42, 0x6a, 0x00, 0x49, 0x75, 0x00, 0x50, 0x80, 0x00, 0x58, 0x8c, 0x00, 0x5f, 0x98, 0x00,
				0x68, 0xa5, 0x00, 0x70, 0xb3, 0x00, 0x79, 0xc1, 0x00, 0x82, 0xd0, 0x00, 0x8c, 0xdf, 0x00, 0x95,
				0xee, 0x01, 0xa0, 0xff, 0x09, 0xa3, 0xff, 0x11, 0xa6, 0xff, 0x19, 0xa9, 0xff, 0x21, 0xac, 0xff,
				0x00, 0x01, 0x02, 0x00, 0x02, 0x04, 0x00, 0x03, 0x06, 0x00, 0x04, 0x09, 0x00, 0x06, 0x0d, 0x00,
				0x08, 0x10, 0x00, 0x0a, 0x15, 0x00, 0x0d, 0x1a, 0x00, 0x10, 0x20, 0x00, 0x13, 0x26, 0x00, 0x16,
				0x2c, 0x00, 0x1a, 0x34, 0x00, 0x1d, 0x3b, 0x00, 0x22, 0x43, 0x00, 0x26, 0x4c, 0x00, 0x2b, 0x55,
				0x00, 0x30, 0x5f, 0x00, 0x35, 0x6a, 0x00, 0x3a, 0x75, 0x00, 0x40, 0x80, 0x00, 0x46, 0x8c, 0x00,
				0x4c, 0x98, 0x00, 0x53, 0xa5, 0x00, 0x5a, 0xb3, 0x00, 0x61, 0xc1, 0x00, 0x68, 0xd0, 0x00, 0x70,
				0xdf, 0x00, 0x77, 0xee, 0x01, 0x80, 0xff, 0x09, 0x84, 0xff, 0x11, 0x88, 0xff, 0x19, 0x8c, 0xff,
				0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x02, 0x06, 0x00, 0x03, 0x09, 0x00,
				0x04, 0x0d, 0x00, 0x06, 0x10, 0x00, 0x08, 0x15, 0x00, 0x09, 0x1a, 0x00, 0x0c, 0x20, 0x00, 0x0e,
				0x26, 0x00, 0x10, 0x2c, 0x00, 0x13, 0x34, 0x00, 0x16, 0x3b, 0x00, 0x19, 0x43, 0x00, 0x1c, 0x4c,
				0x00, 0x20, 0x55, 0x00, 0x24, 0x5f, 0x00, 0x27, 0x6a, 0x00, 0x2c, 0x75, 0x00, 0x30, 0x80, 0x00,
				0x34, 0x8c, 0x00, 0x39, 0x98, 0x00, 0x3e, 0xa5, 0x00, 0x43, 0xb3, 0x00, 0x48, 0xc1, 0x00, 0x4e,
				0xd0, 0x00, 0x54, 0xdf, 0x00, 0x59, 0xee, 0x00, 0x60, 0xff, 0x08, 0x65, 0xff, 0x10, 0x6a, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x01, 0x06, 0x00,
				0x02, 0x09, 0x00, 0x03, 0x0d, 0x00, 0x04, 0x10, 0x00, 0x05, 0x15, 0x00, 0x06, 0x1a, 0x00, 0x08,
				0x20, 0x00, 0x09, 0x26, 0x00, 0x0b, 0x2c, 0x00, 0x0d, 0x34, 0x00, 0x0e, 0x3b, 0x00, 0x11, 0x43,
				0x00, 0x13, 0x4c, 0x00, 0x15, 0x55, 0x00, 0x18, 0x5f, 0x00, 0x1a, 0x6a, 0x00, 0x1d, 0x75, 0x00,
				0x20, 0x80, 0x00, 0x23, 0x8c, 0x00, 0x26, 0x98, 0x00, 0x29, 0xa5, 0x00, 0x2d, 0xb3, 0x00, 0x30,
				0xc1, 0x00, 0x34, 0xd0, 0x00, 0x38, 0xdf, 0x00, 0x3b, 0xee, 0x00, 0x40, 0xff, 0x08, 0x46, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00,
				0x00, 0x06, 0x00, 0x01, 0x09, 0x00, 0x01, 0x0d, 0x00, 0x02, 0x10, 0x00, 0x02, 0x15, 0x00, 0x03,
				0x1a, 0x00, 0x04, 0x20, 0x00, 0x04, 0x26, 0x00, 0x05, 0x2c, 0x00, 0x06, 0x34, 0x00, 0x07, 0x3b,
				0x00, 0x08, 0x43, 0x00, 0x09, 0x4c, 0x00, 0x0a, 0x55, 0x00, 0x0c, 0x5f, 0x00, 0x0d, 0x6a, 0x00,
				0x0e, 0x75, 0x00, 0x10, 0x80, 0x00, 0x11, 0x8c, 0x00, 0x13, 0x98, 0x00, 0x14, 0xa5, 0x00, 0x16,
				0xb3, 0x00, 0x18, 0xc1, 0x00, 0x1a, 0xd0, 0x00, 0x1c, 0xdf, 0x00, 0x1d, 0xee, 0x00, 0x20, 0xff
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);

			// Test the metadata calculation
			Assert::AreEqual((UINT)32, imageDescriptor.width);
			Assert::AreEqual((UINT)32, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGB8 == imageDescriptor.format, L"Image format is incorrect");

			Assert::AreEqual(expected.size(), actual.size(), L"Output vector size is incorrect");
			for (int i = 0; i < expected.size(); i++)
			{
				Assert::AreEqual(expected[i], actual[i]);
			}
		}

		TEST_METHOD(PngSuite_f02n0g08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x56, 0x11, 0x25,
				0x28, 0x00, 0x00, 0x01, 0x2a, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x85, 0xd1, 0x2f, 0x4b, 0x83,
				0x51, 0x18, 0x05, 0xf0, 0xc3, 0xf9, 0x38, 0x16, 0x8b, 0x20, 0x88, 0x20, 0x08, 0x82, 0x41, 0x0c,
				0x03, 0x83, 0x4d, 0xd8, 0x07, 0x18, 0x2c, 0x58, 0x87, 0x49, 0x30, 0x0c, 0x56, 0x04, 0xc3, 0x0b,
				0x0b, 0x03, 0xc3, 0x60, 0xe1, 0x4d, 0x82, 0x60, 0x12, 0xc1, 0x62, 0xb1, 0x18, 0x2c, 0x82, 0x41,
				0x10, 0x04, 0x41, 0xf4, 0x7d, 0xee, 0x5f, 0xc3, 0xa6, 0xf7, 0xb9, 0xef, 0xc2, 0xbd, 0xf9, 0xc7,
				0xe5, 0x9c, 0xf3, 0x70, 0x70, 0x3a, 0x3c, 0xaf, 0x26, 0xd3, 0xfa, 0xea, 0xe6, 0xf6, 0xfe, 0xe1,
				0xf1, 0xe9, 0xf9, 0xe5, 0xf5, 0xed, 0xfd, 0xe3, 0xf3, 0xeb, 0xbb, 0x31, 0xd6, 0xf9, 0x10, 0x22,
				0x7f, 0x1a, 0x69, 0x44, 0x44, 0x8c, 0x31, 0xd6, 0x5a, 0xeb, 0xac, 0x77, 0xde, 0x7b, 0x1f, 0x42,
				0x88, 0x31, 0x46, 0x44, 0x4a, 0x41, 0xb0, 0x29, 0x08, 0x4a, 0x41, 0x50, 0x0a, 0x82, 0x52, 0x10,
				0x34, 0x05, 0x41, 0xd1, 0xe2, 0x60, 0x7f, 0x77, 0x7b, 0x73, 0x3d, 0x13, 0x34, 0x4a, 0x74, 0x01,
				0x00, 0xc8, 0x04, 0x6d, 0x12, 0x7d, 0xa0, 0x9a, 0x4c, 0xeb, 0x5c, 0xd0, 0x24, 0x01, 0x0c, 0x45,
				0x44, 0x6a, 0x40, 0xe5, 0xa0, 0x4d, 0x02, 0x98, 0x27, 0x05, 0x54, 0x52, 0xda, 0x24, 0x7a, 0xc7,
				0xf3, 0x2e, 0x80, 0xea, 0x42, 0xa7, 0xc4, 0xa2, 0x0b, 0xa0, 0xda, 0xd2, 0x2e, 0x89, 0x2e, 0xa0,
				0xf6, 0xa0, 0x6b, 0x8b, 0x3e, 0x50, 0xa9, 0xc5, 0xe8, 0x5a, 0xe2, 0x64, 0xd1, 0xe5, 0x4f, 0xd0,
				0xe7, 0x62, 0x04, 0x0c, 0xb2, 0xd5, 0xe9, 0x33, 0x31, 0x06, 0x7a, 0xf9, 0x5d, 0xe8, 0xb4, 0x98,
				0x01, 0x47, 0xad, 0xcb, 0x31, 0x28, 0x71, 0x0d, 0x74, 0xda, 0xb7, 0xa5, 0x4f, 0xe2, 0x0e, 0xc0,
				0xec, 0x72, 0x7c, 0x31, 0x3a, 0x53, 0x82, 0x21, 0x09, 0xfc, 0x3f, 0xf5, 0x07, 0x43, 0x12, 0x2b,
				0xab, 0x6b, 0x1b, 0x5b, 0x3b, 0x7b, 0x9d, 0x43, 0x9d, 0x83, 0x41, 0x89, 0xe5, 0xd5, 0x45, 0x18,
				0x0b, 0x82, 0xb1, 0x20, 0x18, 0x0b, 0x82, 0xb1, 0x20, 0x88, 0x82, 0x20, 0x0a, 0xe2, 0x17, 0xe9,
				0xe4, 0x97, 0xbf, 0xbf, 0xcc, 0xeb, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
				0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::ColorTypeNotSupported == error);
		}

		TEST_METHOD(PngSuite_f02n2c08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x00, 0x00, 0xfc, 0x18, 0xed,
				0xa3, 0x00, 0x00, 0x04, 0x63, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xad, 0x96, 0x3f, 0xec, 0x25,
				0x55, 0x19, 0x86, 0x9f, 0xf7, 0xfc, 0xfd, 0xce, 0x9c, 0x33, 0xe7, 0xec, 0x08, 0x34, 0x04, 0x22,
				0x14, 0x58, 0x89, 0xd9, 0x42, 0x63, 0x81, 0x91, 0x04, 0x12, 0x2b, 0xb1, 0xd0, 0x90, 0x98, 0x50,
				0xb0, 0x9d, 0xc6, 0x46, 0x0a, 0x4d, 0x28, 0x2c, 0x68, 0x48, 0x28, 0x28, 0x2c, 0x8c, 0x31, 0xb1,
				0xa2, 0x30, 0x56, 0x92, 0x80, 0xb1, 0x35, 0xd0, 0x52, 0x90, 0xa5, 0xa5, 0xd9, 0xc2, 0x42, 0xa3,
				0x09, 0x0d, 0x25, 0x2c, 0xd7, 0x62, 0xee, 0xdc, 0x9d, 0xd9, 0xfd, 0xed, 0x86, 0xa0, 0x93, 0xa7,
				0x78, 0xcf, 0x37, 0xc9, 0x7d, 0x9b, 0x6f, 0xee, 0x73, 0x74, 0xc2, 0xb0, 0x8c, 0xd9, 0x99, 0x62,
				0x57, 0xe7, 0xaf, 0xf6, 0xaa, 0x98, 0x3e, 0x79, 0x3c, 0x2f, 0x4e, 0xe4, 0x4c, 0xb6, 0x33, 0x66,
				0x57, 0xe7, 0xaf, 0xf4, 0x4a, 0xb7, 0xbe, 0x9b, 0x47, 0x60, 0x09, 0x22, 0x65, 0x92, 0xdd, 0x21,
				0xdb, 0xff, 0xe5, 0xa8, 0x9b, 0x2f, 0xa4, 0x91, 0x34, 0x22, 0x4b, 0x16, 0x31, 0x13, 0xed, 0x40,
				0xb2, 0xff, 0x71, 0xa2, 0xf7, 0x6f, 0xc4, 0x91, 0x19, 0xa6, 0x91, 0x59, 0x8a, 0x08, 0xb6, 0x23,
				0x13, 0x0a, 0xc1, 0x88, 0xbb, 0x7c, 0xdf, 0x79, 0x26, 0xd8, 0x36, 0xbf, 0x93, 0xf5, 0xd7, 0x5f,
				0x86, 0x5e, 0x34, 0x0a, 0x63, 0xd2, 0x28, 0x2c, 0x55, 0x78, 0xdb, 0x91, 0xf1, 0xe5, 0x90, 0xc3,
				0x7d, 0xe6, 0x6b, 0x08, 0x76, 0x27, 0x7b, 0xc3, 0x17, 0xfd, 0xe9, 0x37, 0xa1, 0x4f, 0xf4, 0x49,
				0xa3, 0x32, 0x9a, 0x46, 0x65, 0x99, 0x85, 0xb3, 0x1d, 0x19, 0x57, 0x1e, 0x94, 0xfd, 0x7e, 0x9e,
				0x71, 0xb6, 0xcf, 0xfa, 0xc3, 0xeb, 0x61, 0x6e, 0xf4, 0x4a, 0x9f, 0x35, 0x1a, 0xa3, 0x6b, 0xcc,
				0x2c, 0x43, 0xc8, 0x76, 0x64, 0x54, 0xbe, 0x74, 0xce, 0xc8, 0x2e, 0x59, 0x6f, 0xbe, 0xe9, 0x5b,
				0x63, 0x9e, 0xe9, 0x5d, 0xbd, 0x33, 0x06, 0x63, 0x68, 0x0c, 0x96, 0x45, 0x60, 0x77, 0x21, 0x7d,
				0x00, 0x9c, 0x4e, 0x3f, 0xba, 0xf7, 0xd5, 0xfd, 0xd0, 0x2b, 0xaf, 0xf9, 0xda, 0xa8, 0x8d, 0x3a,
				0xd3, 0xba, 0x5a, 0x67, 0x1e, 0xf4, 0xa1, 0x79, 0x30, 0x16, 0x09, 0xbb, 0xf0, 0x98, 0x3e, 0x06,
				0x80, 0x7f, 0x9d, 0x7e, 0x00, 0xe6, 0xb6, 0xf9, 0x95, 0x19, 0x4c, 0x6b, 0xfe, 0xe9, 0xaf, 0x9d,
				0x55, 0x95, 0xc6, 0xd4, 0x28, 0x33, 0xb5, 0x6b, 0xea, 0xd4, 0x41, 0x1b, 0xaa, 0x83, 0x79, 0x91,
				0xc3, 0x1c, 0xf6, 0x3d, 0xfd, 0x9b, 0xed, 0xf9, 0xf0, 0xf4, 0xfd, 0x75, 0xf8, 0x65, 0xd0, 0x73,
				0xbf, 0x70, 0xb9, 0x92, 0x2b, 0xd6, 0xc8, 0x8d, 0x32, 0xcb, 0x3a, 0xa5, 0x53, 0x86, 0xa6, 0x41,
				0x19, 0xd4, 0x45, 0x37, 0xf4, 0x19, 0xbb, 0xe7, 0xdd, 0xd3, 0x77, 0x3c, 0x76, 0x3f, 0x02, 0x65,
				0x7f, 0xd4, 0xf5, 0x97, 0x15, 0xab, 0x62, 0x25, 0x55, 0x52, 0x23, 0x35, 0xf2, 0xac, 0xdc, 0xc9,
				0x9d, 0x3c, 0x64, 0x83, 0xdf, 0x3e, 0xf9, 0xf9, 0xfa, 0xbb, 0x6f, 0x9c, 0x1e, 0x79, 0x55, 0xff,
				0x01, 0x7e, 0x77, 0x7a, 0x3a, 0x60, 0x7b, 0xe2, 0xf1, 0x18, 0x28, 0x97, 0xac, 0x27, 0x5e, 0x54,
				0x98, 0xf0, 0x55, 0xb1, 0x12, 0x2a, 0xa1, 0x11, 0x1b, 0x71, 0x56, 0xec, 0xc4, 0x4e, 0x1a, 0x7a,
				0xf7, 0xfa, 0xe7, 0xc0, 0x8d, 0x53, 0x8c, 0xd8, 0x1f, 0xf5, 0x29, 0xf0, 0xab, 0xd3, 0x53, 0x11,
				0x5b, 0x49, 0x5b, 0xb8, 0x8b, 0x44, 0x59, 0x83, 0x1e, 0xfa, 0xa1, 0x5c, 0xc1, 0x4f, 0xb8, 0x2a,
				0x5f, 0xf1, 0x15, 0xdf, 0xf0, 0x0d, 0x3f, 0x2b, 0x74, 0x7c, 0x27, 0x0c, 0x85, 0x81, 0x1f, 0xc4,
				0x45, 0xef, 0xe9, 0x33, 0xe0, 0xc7, 0xa7, 0xc7, 0x13, 0xb6, 0x92, 0xb7, 0x70, 0xd5, 0xa4, 0x24,
				0x4c, 0xf6, 0xbc, 0x54, 0x50, 0xc1, 0x4d, 0xa8, 0xa2, 0x8a, 0xab, 0x52, 0xc3, 0x35, 0x34, 0xe3,
				0x3a, 0xae, 0xcb, 0x0d, 0xdc, 0x40, 0x83, 0x7f, 0x7c, 0xed, 0x36, 0xf0, 0xad, 0xd3, 0xc3, 0x19,
				0xcb, 0xdb, 0xbf, 0x7c, 0xde, 0x61, 0x94, 0xe3, 0xd1, 0xc4, 0x33, 0xc8, 0xa0, 0x40, 0x81, 0x09,
				0x2a, 0x54, 0x54, 0xa1, 0x41, 0x83, 0x19, 0x3a, 0xea, 0x30, 0x60, 0x70, 0xfb, 0x49, 0x80, 0x76,
				0x7a, 0x90, 0x0a, 0xca, 0xf1, 0x28, 0xbe, 0x9d, 0xc8, 0x92, 0x89, 0x22, 0x8a, 0x98, 0x44, 0x15,
				0xd5, 0xa9, 0x8a, 0xe6, 0x68, 0x62, 0x76, 0x74, 0xa9, 0x3b, 0x86, 0xbb, 0x7d, 0xfd, 0x9f, 0x40,
				0x38, 0x7d, 0xfd, 0xc1, 0x2a, 0x28, 0xbb, 0xa3, 0xf8, 0x66, 0xc5, 0x44, 0x76, 0x98, 0xa3, 0x38,
				0x15, 0xcf, 0xe4, 0xa8, 0x9e, 0xea, 0xa8, 0x9e, 0xe6, 0x69, 0x9e, 0xd9, 0xab, 0x07, 0xba, 0xff,
				0xe2, 0xd9, 0x8f, 0x00, 0xf7, 0xc9, 0x33, 0x5a, 0xc2, 0xd1, 0x00, 0x67, 0x09, 0x94, 0x7b, 0x9c,
				0x20, 0xbe, 0xd1, 0x49, 0x0e, 0xf3, 0x64, 0x8f, 0x79, 0x8a, 0x57, 0x09, 0x4c, 0x9e, 0x1a, 0xce,
				0xb4, 0x48, 0x0b, 0xcc, 0x51, 0x3d, 0x7e, 0xf1, 0xc2, 0xdf, 0x01, 0x77, 0xeb, 0x27, 0x8c, 0xa8,
				0x25, 0xdf, 0xe3, 0x81, 0x68, 0xa4, 0x72, 0x9c, 0x88, 0x27, 0x06, 0x29, 0x90, 0x3c, 0xe6, 0xc9,
				0xeb, 0x12, 0x47, 0x95, 0xc0, 0x14, 0xa9, 0x91, 0x9a, 0xa8, 0x91, 0x96, 0x68, 0x99, 0x39, 0x9d,
				0x5e, 0x7a, 0x1b, 0x70, 0x37, 0x7f, 0xc6, 0x30, 0x46, 0xd6, 0x52, 0xec, 0x28, 0x10, 0x3b, 0x7b,
				0x20, 0x5e, 0xb2, 0x78, 0xf4, 0xda, 0xb9, 0x20, 0x05, 0x2c, 0x92, 0x23, 0x16, 0x29, 0x51, 0x25,
				0x31, 0x25, 0x6a, 0xa6, 0x26, 0xaa, 0xd1, 0x32, 0xcd, 0x4e, 0x3f, 0x7f, 0x0b, 0x70, 0xef, 0xbf,
				0xca, 0x28, 0x8c, 0x89, 0x51, 0xb4, 0x54, 0x3b, 0x0a, 0x64, 0xe5, 0xe2, 0x0a, 0xf1, 0xc8, 0x35,
				0xa2, 0x27, 0x45, 0x52, 0x20, 0x45, 0x2c, 0x92, 0xd7, 0x25, 0xce, 0x94, 0xcc, 0x94, 0xa9, 0xc6,
				0xef, 0xdf, 0xe1, 0xaa, 0x47, 0xb7, 0xfe, 0xcc, 0xa8, 0x5a, 0x66, 0x3b, 0x0a, 0xc4, 0x76, 0xd2,
				0x10, 0xd7, 0x3a, 0x31, 0x10, 0x23, 0x69, 0x25, 0x61, 0x89, 0x9c, 0xb1, 0x4c, 0x31, 0x8a, 0x31,
				0x19, 0x6f, 0xfd, 0xe5, 0xea, 0x82, 0x9b, 0x7f, 0x63, 0x74, 0xc6, 0xac, 0x65, 0xd8, 0x51, 0x20,
				0x17, 0x21, 0x88, 0x79, 0xc6, 0x7b, 0x62, 0x24, 0x46, 0x52, 0x3a, 0x63, 0x46, 0x5e, 0xbf, 0x9b,
				0x42, 0x29, 0x4c, 0x13, 0xb5, 0x52, 0xab, 0x6a, 0xa5, 0x35, 0x36, 0x81, 0xb0, 0x09, 0x84, 0x31,
				0xb4, 0x2c, 0xf7, 0xda, 0xa0, 0x80, 0xb0, 0x82, 0x0f, 0x78, 0x4f, 0x88, 0xc4, 0x48, 0x4c, 0xc4,
				0xb5, 0xc6, 0xce, 0x97, 0x25, 0x2b, 0x58, 0xa1, 0x4c, 0x94, 0x4a, 0xa9, 0x4c, 0x95, 0x9d, 0x40,
				0xd8, 0x04, 0xc2, 0x3c, 0x34, 0x16, 0xdb, 0x0b, 0x04, 0x8a, 0x43, 0x84, 0x84, 0xf7, 0xb8, 0xad,
				0xc3, 0x47, 0x62, 0x22, 0xac, 0x35, 0x46, 0xcc, 0xe7, 0xfd, 0xce, 0x05, 0x9b, 0xc8, 0x95, 0x52,
				0xb1, 0xca, 0x4e, 0x20, 0x6c, 0x02, 0xa1, 0x0e, 0xcd, 0xcb, 0x5d, 0x42, 0x10, 0x2e, 0xe0, 0x1c,
				0xf2, 0xf8, 0x80, 0xf3, 0xf8, 0x88, 0x8f, 0x84, 0x84, 0x4f, 0xc4, 0x74, 0xbe, 0x83, 0x9c, 0xf7,
				0xbb, 0x90, 0x27, 0x52, 0xe5, 0x28, 0x10, 0x36, 0x81, 0x30, 0x0d, 0xca, 0x50, 0x5d, 0xf6, 0x7e,
				0x10, 0x72, 0x1b, 0x1e, 0x17, 0x70, 0x1e, 0x17, 0xf1, 0x11, 0x9f, 0xce, 0x04, 0xc3, 0x67, 0xe2,
				0xba, 0xdf, 0x85, 0x38, 0x11, 0x2b, 0x47, 0x81, 0xb0, 0x09, 0x04, 0x1b, 0xe4, 0xa1, 0xb2, 0x5c,
				0xcc, 0x20, 0x56, 0x2e, 0x1d, 0xda, 0x3a, 0x14, 0xf1, 0x09, 0x97, 0x70, 0x69, 0x7f, 0xcf, 0x21,
				0x14, 0xc2, 0x84, 0xaf, 0x1c, 0x05, 0xc2, 0x26, 0x10, 0xd2, 0x20, 0x0e, 0xf2, 0xb2, 0x9a, 0x41,
				0xeb, 0xbe, 0x9d, 0x3b, 0xd8, 0x3a, 0xe4, 0x51, 0x44, 0x11, 0x97, 0xd0, 0x5a, 0x63, 0x28, 0xe3,
				0xd7, 0x15, 0x3f, 0x0b, 0x84, 0xa3, 0x40, 0xd8, 0x04, 0xc2, 0x26, 0x10, 0x4b, 0xe7, 0x82, 0xad,
				0x83, 0xad, 0x83, 0x80, 0x3c, 0x44, 0x14, 0x51, 0x82, 0x84, 0xd2, 0xf1, 0xce, 0x73, 0x10, 0x08,
				0x47, 0x81, 0x70, 0x11, 0x88, 0x5f, 0xfe, 0x0b, 0x42, 0xee, 0x7b, 0x2d, 0x82, 0x7b, 0x97, 0xe7,
				0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			std::vector<BYTE> expected = {
				0xff, 0x00, 0x08, 0xff, 0x08, 0x0f, 0xff, 0x10, 0x17, 0xff, 0x18, 0x1f, 0xff, 0x20, 0x27, 0xff,
				0x29, 0x2f, 0xff, 0x31, 0x37, 0xff, 0x39, 0x3f, 0xff, 0x41, 0x47, 0xff, 0x4a, 0x4f, 0xff, 0x52,
				0x57, 0xff, 0x5a, 0x5f, 0xff, 0x62, 0x67, 0xff, 0x6a, 0x6f, 0xff, 0x73, 0x77, 0xff, 0x7b, 0x7f,
				0xff, 0x83, 0x87, 0xff, 0x8b, 0x8f, 0xff, 0x94, 0x97, 0xff, 0x9c, 0x9f, 0xff, 0xa4, 0xa7, 0xff,
				0xac, 0xaf, 0xff, 0xb4, 0xb7, 0xff, 0xbd, 0xbf, 0xff, 0xc5, 0xc7, 0xff, 0xcd, 0xcf, 0xff, 0xd5,
				0xd7, 0xff, 0xde, 0xdf, 0xff, 0xe6, 0xe7, 0xff, 0xee, 0xef, 0xff, 0xf6, 0xf7, 0xff, 0xff, 0xff,
				0xee, 0x1d, 0x07, 0xff, 0x1f, 0x08, 0xff, 0x26, 0x0f, 0xff, 0x2d, 0x17, 0xff, 0x34, 0x1f, 0xff,
				0x3b, 0x27, 0xff, 0x43, 0x2f, 0xff, 0x4a, 0x37, 0xff, 0x51, 0x3f, 0xff, 0x58, 0x47, 0xff, 0x60,
				0x4f, 0xff, 0x67, 0x57, 0xff, 0x6e, 0x5f, 0xff, 0x75, 0x67, 0xff, 0x7c, 0x6f, 0xff, 0x84, 0x77,
				0xff, 0x8b, 0x7f, 0xff, 0x92, 0x87, 0xff, 0x99, 0x8f, 0xff, 0xa1, 0x97, 0xff, 0xa8, 0x9f, 0xff,
				0xaf, 0xa7, 0xff, 0xb6, 0xaf, 0xff, 0xbd, 0xb7, 0xff, 0xc5, 0xbf, 0xff, 0xcc, 0xc7, 0xff, 0xd3,
				0xcf, 0xff, 0xda, 0xd7, 0xff, 0xe2, 0xdf, 0xff, 0xe9, 0xe7, 0xff, 0xf0, 0xef, 0xff, 0xf7, 0xf7,
				0xdf, 0x37, 0x07, 0xee, 0x3b, 0x07, 0xff, 0x3f, 0x08, 0xff, 0x45, 0x0f, 0xff, 0x4b, 0x17, 0xff,
				0x51, 0x1f, 0xff, 0x57, 0x27, 0xff, 0x5d, 0x2f, 0xff, 0x64, 0x37, 0xff, 0x6a, 0x3f, 0xff, 0x70,
				0x47, 0xff, 0x76, 0x4f, 0xff, 0x7c, 0x57, 0xff, 0x83, 0x5f, 0xff, 0x89, 0x67, 0xff, 0x8f, 0x6f,
				0xff, 0x95, 0x77, 0xff, 0x9b, 0x7f, 0xff, 0xa2, 0x87, 0xff, 0xa8, 0x8f, 0xff, 0xae, 0x97, 0xff,
				0xb4, 0x9f, 0xff, 0xba, 0xa7, 0xff, 0xc1, 0xaf, 0xff, 0xc7, 0xb7, 0xff, 0xcd, 0xbf, 0xff, 0xd3,
				0xc7, 0xff, 0xd9, 0xcf, 0xff, 0xe0, 0xd7, 0xff, 0xe6, 0xdf, 0xff, 0xec, 0xe7, 0xff, 0xf2, 0xef,
				0xd0, 0x4d, 0x06, 0xdf, 0x53, 0x07, 0xee, 0x58, 0x07, 0xff, 0x5f, 0x08, 0xff, 0x64, 0x0f, 0xff,
				0x69, 0x17, 0xff, 0x6e, 0x1f, 0xff, 0x73, 0x27, 0xff, 0x78, 0x2f, 0xff, 0x7d, 0x37, 0xff, 0x83,
				0x3f, 0xff, 0x88, 0x47, 0xff, 0x8d, 0x4f, 0xff, 0x92, 0x57, 0xff, 0x97, 0x5f, 0xff, 0x9c, 0x67,
				0xff, 0xa2, 0x6f, 0xff, 0xa7, 0x77, 0xff, 0xac, 0x7f, 0xff, 0xb1, 0x87, 0xff, 0xb6, 0x8f, 0xff,
				0xbb, 0x97, 0xff, 0xc1, 0x9f, 0xff, 0xc6, 0xa7, 0xff, 0xcb, 0xaf, 0xff, 0xd0, 0xb7, 0xff, 0xd5,
				0xbf, 0xff, 0xda, 0xc7, 0xff, 0xe0, 0xcf, 0xff, 0xe5, 0xd7, 0xff, 0xea, 0xdf, 0xff, 0xef, 0xe7,
				0xc1, 0x60, 0x05, 0xd0, 0x67, 0x05, 0xdf, 0x6f, 0x06, 0xee, 0x76, 0x06, 0xff, 0x7f, 0x07, 0xff,
				0x83, 0x0f, 0xff, 0x87, 0x17, 0xff, 0x8b, 0x1f, 0xff, 0x8f, 0x27, 0xff, 0x93, 0x2e, 0xff, 0x97,
				0x37, 0xff, 0x9b, 0x3f, 0xff, 0xa0, 0x47, 0xff, 0xa4, 0x4e, 0xff, 0xa8, 0x57, 0xff, 0xac, 0x5f,
				0xff, 0xb0, 0x67, 0xff, 0xb4, 0x6e, 0xff, 0xb8, 0x77, 0xff, 0xbc, 0x7f, 0xff, 0xc1, 0x87, 0xff,
				0xc5, 0x8e, 0xff, 0xc9, 0x97, 0xff, 0xcd, 0x9f, 0xff, 0xd1, 0xa6, 0xff, 0xd5, 0xae, 0xff, 0xd9,
				0xb7, 0xff, 0xdd, 0xbf, 0xff, 0xe2, 0xc6, 0xff, 0xe6, 0xce, 0xff, 0xea, 0xd7, 0xff, 0xee, 0xdf,
				0xb3, 0x6f, 0x04, 0xc1, 0x78, 0x05, 0xd0, 0x81, 0x05, 0xdf, 0x8b, 0x06, 0xee, 0x94, 0x06, 0xff,
				0x9f, 0x07, 0xff, 0xa2, 0x0f, 0xff, 0xa5, 0x17, 0xff, 0xa8, 0x1f, 0xff, 0xab, 0x27, 0xff, 0xae,
				0x2e, 0xff, 0xb1, 0x37, 0xff, 0xb4, 0x3f, 0xff, 0xb7, 0x47, 0xff, 0xba, 0x4e, 0xff, 0xbd, 0x57,
				0xff, 0xc1, 0x5f, 0xff, 0xc4, 0x67, 0xff, 0xc7, 0x6e, 0xff, 0xca, 0x77, 0xff, 0xcd, 0x7f, 0xff,
				0xd0, 0x87, 0xff, 0xd3, 0x8e, 0xff, 0xd6, 0x97, 0xff, 0xd9, 0x9f, 0xff, 0xdc, 0xa6, 0xff, 0xe0,
				0xae, 0xff, 0xe3, 0xb7, 0xff, 0xe6, 0xbf, 0xff, 0xe9, 0xc6, 0xff, 0xec, 0xce, 0xff, 0xef, 0xd7,
				0xa5, 0x7c, 0x04, 0xb3, 0x86, 0x04, 0xc1, 0x90, 0x05, 0xd0, 0x9b, 0x05, 0xdf, 0xa7, 0x06, 0xee,
				0xb2, 0x06, 0xff, 0xbf, 0x07, 0xff, 0xc1, 0x0f, 0xff, 0xc3, 0x17, 0xff, 0xc5, 0x1f, 0xff, 0xc7,
				0x27, 0xff, 0xc9, 0x2e, 0xff, 0xcb, 0x37, 0xff, 0xcd, 0x3f, 0xff, 0xcf, 0x47, 0xff, 0xd1, 0x4e,
				0xff, 0xd3, 0x57, 0xff, 0xd5, 0x5f, 0xff, 0xd7, 0x67, 0xff, 0xd9, 0x6e, 0xff, 0xdb, 0x77, 0xff,
				0xdd, 0x7f, 0xff, 0xe0, 0x87, 0xff, 0xe2, 0x8e, 0xff, 0xe4, 0x97, 0xff, 0xe6, 0x9f, 0xff, 0xe8,
				0xa6, 0xff, 0xea, 0xae, 0xff, 0xec, 0xb7, 0xff, 0xee, 0xbf, 0xff, 0xf0, 0xc6, 0xff, 0xf2, 0xce,
				0x98, 0x85, 0x04, 0xa5, 0x91, 0x04, 0xb3, 0x9c, 0x04, 0xc1, 0xa9, 0x05, 0xd0, 0xb5, 0x05, 0xdf,
				0xc3, 0x06, 0xee, 0xd0, 0x06, 0xff, 0xdf, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xe1, 0x17, 0xff, 0xe2,
				0x1f, 0xff, 0xe3, 0x27, 0xff, 0xe4, 0x2e, 0xff, 0xe5, 0x37, 0xff, 0xe6, 0x3f, 0xff, 0xe7, 0x47,
				0xff, 0xe8, 0x4e, 0xff, 0xe9, 0x57, 0xff, 0xea, 0x5f, 0xff, 0xeb, 0x67, 0xff, 0xec, 0x6e, 0xff,
				0xed, 0x77, 0xff, 0xee, 0x7f, 0xff, 0xef, 0x87, 0xff, 0xf0, 0x8e, 0xff, 0xf1, 0x97, 0xff, 0xf2,
				0x9f, 0xff, 0xf3, 0xa6, 0xff, 0xf4, 0xae, 0xff, 0xf5, 0xb7, 0xff, 0xf6, 0xbf, 0xff, 0xf7, 0xc6,
				0x8c, 0x8c, 0x03, 0x98, 0x98, 0x03, 0xa5, 0xa5, 0x03, 0xb3, 0xb3, 0x04, 0xc1, 0xc1, 0x04, 0xd0,
				0xd0, 0x04, 0xdf, 0xdf, 0x05, 0xee, 0xee, 0x05, 0xff, 0xff, 0x06, 0xff, 0xff, 0x0e, 0xff, 0xff,
				0x16, 0xff, 0xff, 0x1e, 0xff, 0xff, 0x26, 0xff, 0xff, 0x2e, 0xff, 0xff, 0x36, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xff, 0xff, 0x56, 0xff, 0xff, 0x5e, 0xff, 0xff, 0x66, 0xff,
				0xff, 0x6e, 0xff, 0xff, 0x76, 0xff, 0xff, 0x7e, 0xff, 0xff, 0x86, 0xff, 0xff, 0x8e, 0xff, 0xff,
				0x96, 0xff, 0xff, 0x9e, 0xff, 0xff, 0xa6, 0xff, 0xff, 0xae, 0xff, 0xff, 0xb6, 0xff, 0xff, 0xbe,
				0x70, 0x80, 0x03, 0x7b, 0x8c, 0x03, 0x86, 0x98, 0x03, 0x91, 0xa5, 0x03, 0x9d, 0xb3, 0x04, 0xa9,
				0xc1, 0x04, 0xb6, 0xd0, 0x04, 0xc4, 0xdf, 0x05, 0xd1, 0xee, 0x05, 0xe0, 0xff, 0x06, 0xe1, 0xff,
				0x0e, 0xe2, 0xff, 0x16, 0xe3, 0xff, 0x1e, 0xe4, 0xff, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0xe8, 0xff, 0x46, 0xe8, 0xff, 0x4e, 0xea, 0xff, 0x56, 0xeb, 0xff, 0x5e, 0xec,
				0xff, 0x66, 0xec, 0xff, 0x6e, 0xee, 0xff, 0x76, 0xef, 0xff, 0x7e, 0xf0, 0xff, 0x86, 0xf0, 0xff,
				0x8e, 0xf2, 0xff, 0x96, 0xf3, 0xff, 0x9e, 0xf3, 0xff, 0xa6, 0xf4, 0xff, 0xae, 0xf6, 0xff, 0xb6,
				0x58, 0x75, 0x02, 0x60, 0x80, 0x03, 0x69, 0x8c, 0x03, 0x73, 0x98, 0x03, 0x7c, 0xa5, 0x03, 0x87,
				0xb3, 0x04, 0x91, 0xc1, 0x04, 0x9c, 0xd0, 0x04, 0xa8, 0xdf, 0x05, 0xb3, 0xee, 0x05, 0xc0, 0xff,
				0x06, 0xc2, 0xff, 0x0e, 0xc4, 0xff, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0xce, 0xff, 0x3e, 0xd0, 0xff, 0x46, 0xd2, 0xff, 0x4e, 0xd4, 0xff, 0x56, 0xd6,
				0xff, 0x5e, 0xd8, 0xff, 0x66, 0xda, 0xff, 0x6e, 0xdc, 0xff, 0x76, 0xde, 0xff, 0x7e, 0xe0, 0xff,
				0x86, 0xe2, 0xff, 0x8e, 0xe4, 0xff, 0x96, 0xe6, 0xff, 0x9e, 0xe8, 0xff, 0xa6, 0xea, 0xff, 0xae,
				0x42, 0x6a, 0x02, 0x49, 0x75, 0x02, 0x50, 0x80, 0x02, 0x58, 0x8c, 0x02, 0x5f, 0x98, 0x02, 0x68,
				0xa5, 0x03, 0x70, 0xb3, 0x03, 0x79, 0xc1, 0x03, 0x82, 0xd0, 0x04, 0x8c, 0xdf, 0x04, 0x95, 0xee,
				0x04, 0xa0, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0xb2, 0xff, 0x35, 0xb5, 0xff, 0x3d, 0xb8, 0xff, 0x45, 0xbb, 0xff, 0x4d, 0xbe,
				0xff, 0x55, 0xc1, 0xff, 0x5d, 0xc4, 0xff, 0x65, 0xc7, 0xff, 0x6d, 0xca, 0xff, 0x75, 0xcd, 0xff,
				0x7d, 0xd1, 0xff, 0x86, 0xd4, 0xff, 0x8e, 0xd7, 0xff, 0x96, 0xda, 0xff, 0x9e, 0xdd, 0xff, 0xa6,
				0x30, 0x5f, 0x01, 0x35, 0x6a, 0x02, 0x3a, 0x75, 0x02, 0x40, 0x80, 0x02, 0x46, 0x8c, 0x02, 0x4c,
				0x98, 0x02, 0x53, 0xa5, 0x03, 0x5a, 0xb3, 0x03, 0x61, 0xc1, 0x03, 0x68, 0xd0, 0x04, 0x70, 0xdf,
				0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xff, 0x15, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x94, 0xff, 0x2d, 0x98, 0xff, 0x35, 0x9c, 0xff, 0x3d, 0xa0, 0xff, 0x45, 0xa4,
				0xff, 0x4d, 0xa8, 0xff, 0x55, 0xad, 0xff, 0x5d, 0xb1, 0xff, 0x65, 0xb5, 0xff, 0x6d, 0xb9, 0xff,
				0x75, 0xbd, 0xff, 0x7d, 0xc1, 0xff, 0x86, 0xc5, 0xff, 0x8e, 0xc9, 0xff, 0x96, 0xcd, 0xff, 0x9e,
				0x20, 0x55, 0x01, 0x24, 0x5f, 0x01, 0x27, 0x6a, 0x02, 0x2c, 0x75, 0x02, 0x30, 0x80, 0x02, 0x34,
				0x8c, 0x02, 0x39, 0x98, 0x02, 0x3e, 0xa5, 0x03, 0x43, 0xb3, 0x03, 0x48, 0xc1, 0x03, 0x4e, 0xd0,
				0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xff, 0x05, 0x65, 0xff, 0x0d, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x74, 0xff, 0x25, 0x79, 0xff, 0x2d, 0x7e, 0xff, 0x35, 0x83, 0xff, 0x3d, 0x89,
				0xff, 0x45, 0x8e, 0xff, 0x4d, 0x93, 0xff, 0x55, 0x98, 0xff, 0x5d, 0x9d, 0xff, 0x65, 0xa2, 0xff,
				0x6d, 0xa7, 0xff, 0x75, 0xac, 0xff, 0x7d, 0xb2, 0xff, 0x86, 0xb7, 0xff, 0x8e, 0xbc, 0xff, 0x96,
				0x13, 0x4c, 0x01, 0x15, 0x55, 0x01, 0x18, 0x5f, 0x01, 0x1a, 0x6a, 0x02, 0x1d, 0x75, 0x02, 0x20,
				0x80, 0x02, 0x23, 0x8c, 0x02, 0x26, 0x98, 0x02, 0x29, 0xa5, 0x03, 0x2d, 0xb3, 0x03, 0x30, 0xc1,
				0x03, 0x34, 0xd0, 0x04, 0x38, 0xdf, 0x04, 0x3b, 0xee, 0x04, 0x40, 0xff, 0x05, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x52, 0xff, 0x1d, 0x58, 0xff, 0x25, 0x5e, 0xff, 0x2d, 0x64, 0xff, 0x35, 0x6b,
				0xff, 0x3d, 0x71, 0xff, 0x45, 0x77, 0xff, 0x4d, 0x7d, 0xff, 0x55, 0x83, 0xff, 0x5d, 0x89, 0xff,
				0x65, 0x90, 0xff, 0x6d, 0x96, 0xff, 0x75, 0x9c, 0xff, 0x7d, 0xa2, 0xff, 0x86, 0xa8, 0xff, 0x8e,
				0x08, 0x43, 0x01, 0x09, 0x4c, 0x01, 0x0a, 0x55, 0x01, 0x0c, 0x5f, 0x01, 0x0d, 0x6a, 0x01, 0x0e,
				0x75, 0x01, 0x10, 0x80, 0x02, 0x11, 0x8c, 0x02, 0x13, 0x98, 0x02, 0x14, 0xa5, 0x02, 0x16, 0xb3,
				0x02, 0x18, 0xc1, 0x03, 0x1a, 0xd0, 0x03, 0x1c, 0xdf, 0x03, 0x1d, 0xee, 0x03, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x2e, 0xff, 0x14, 0x35, 0xff, 0x1c, 0x3c, 0xff, 0x24, 0x43, 0xff, 0x2c, 0x4b,
				0xff, 0x34, 0x52, 0xff, 0x3c, 0x59, 0xff, 0x44, 0x60, 0xff, 0x4c, 0x67, 0xff, 0x54, 0x6f, 0xff,
				0x5d, 0x76, 0xff, 0x65, 0x7d, 0xff, 0x6d, 0x84, 0xff, 0x75, 0x8b, 0xff, 0x7d, 0x93, 0xff, 0x85,
				0x00, 0x3b, 0x00, 0x01, 0x43, 0x00, 0x01, 0x4c, 0x00, 0x01, 0x55, 0x00, 0x01, 0x5f, 0x00, 0x01,
				0x6a, 0x00, 0x01, 0x75, 0x00, 0x02, 0x80, 0x00, 0x02, 0x8c, 0x00, 0x02, 0x98, 0x00, 0x02, 0xa5,
				0x00, 0x02, 0xb3, 0x00, 0x03, 0xc1, 0x00, 0x03, 0xd0, 0x00, 0x03, 0xdf, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x0c, 0xff, 0x08, 0x14, 0xff, 0x10, 0x1c, 0xff, 0x18, 0x24, 0xff, 0x20, 0x2c,
				0xff, 0x29, 0x34, 0xff, 0x31, 0x3c, 0xff, 0x39, 0x44, 0xff, 0x41, 0x4c, 0xff, 0x4a, 0x54, 0xff,
				0x52, 0x5d, 0xff, 0x5a, 0x65, 0xff, 0x62, 0x6d, 0xff, 0x6a, 0x75, 0xff, 0x73, 0x7d, 0xff, 0x7b,
				0x00, 0x34, 0x06, 0x00, 0x3b, 0x07, 0x01, 0x43, 0x08, 0x01, 0x4c, 0x09, 0x01, 0x55, 0x0a, 0x01,
				0x5f, 0x0b, 0x01, 0x6a, 0x0c, 0x01, 0x75, 0x0e, 0x02, 0x80, 0x0f, 0x02, 0x8c, 0x11, 0x02, 0x98,
				0x12, 0x02, 0xa5, 0x14, 0x02, 0xb3, 0x15, 0x03, 0xc1, 0x17, 0x03, 0xd0, 0x19, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x04, 0xff, 0x1f, 0x0c, 0xff, 0x26, 0x14, 0xff, 0x2d, 0x1c, 0xff, 0x34, 0x24,
				0xff, 0x3b, 0x2c, 0xff, 0x43, 0x34, 0xff, 0x4a, 0x3c, 0xff, 0x51, 0x44, 0xff, 0x58, 0x4c, 0xff,
				0x60, 0x54, 0xff, 0x67, 0x5d, 0xff, 0x6e, 0x65, 0xff, 0x75, 0x6d, 0xff, 0x7c, 0x75, 0xff, 0x84,
				0x00, 0x2c, 0x0b, 0x00, 0x34, 0x0c, 0x00, 0x3b, 0x0e, 0x00, 0x43, 0x10, 0x00, 0x4c, 0x12, 0x01,
				0x55, 0x15, 0x01, 0x5f, 0x17, 0x01, 0x6a, 0x1a, 0x01, 0x75, 0x1c, 0x01, 0x80, 0x1f, 0x01, 0x8c,
				0x22, 0x01, 0x98, 0x25, 0x01, 0xa5, 0x28, 0x02, 0xb3, 0x2c, 0x02, 0xc1, 0x2f, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x02, 0xee, 0x3b, 0x03, 0xff, 0x3f, 0x0b, 0xff, 0x45, 0x13, 0xff, 0x4b, 0x1b,
				0xff, 0x51, 0x23, 0xff, 0x57, 0x2b, 0xff, 0x5d, 0x33, 0xff, 0x64, 0x3b, 0xff, 0x6a, 0x44, 0xff,
				0x70, 0x4c, 0xff, 0x76, 0x54, 0xff, 0x7c, 0x5c, 0xff, 0x83, 0x64, 0xff, 0x89, 0x6c, 0xff, 0x8f,
				0x00, 0x26, 0x0e, 0x00, 0x2c, 0x10, 0x00, 0x34, 0x13, 0x00, 0x3b, 0x16, 0x00, 0x43, 0x19, 0x00,
				0x4c, 0x1c, 0x01, 0x55, 0x20, 0x01, 0x5f, 0x23, 0x01, 0x6a, 0x27, 0x01, 0x75, 0x2b, 0x01, 0x80,
				0x2f, 0x01, 0x8c, 0x34, 0x01, 0x98, 0x38, 0x01, 0xa5, 0x3d, 0x02, 0xb3, 0x42, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x02, 0xdf, 0x53, 0x02, 0xee, 0x58, 0x03, 0xff, 0x5f, 0x0b, 0xff, 0x64, 0x13,
				0xff, 0x69, 0x1b, 0xff, 0x6e, 0x23, 0xff, 0x73, 0x2b, 0xff, 0x78, 0x33, 0xff, 0x7d, 0x3b, 0xff,
				0x83, 0x44, 0xff, 0x88, 0x4c, 0xff, 0x8d, 0x54, 0xff, 0x92, 0x5c, 0xff, 0x97, 0x64, 0xff, 0x9c,
				0x00, 0x20, 0x0f, 0x00, 0x26, 0x13, 0x00, 0x2c, 0x16, 0x00, 0x34, 0x19, 0x00, 0x3b, 0x1d, 0x00,
				0x43, 0x21, 0x00, 0x4c, 0x26, 0x01, 0x55, 0x2a, 0x01, 0x5f, 0x2f, 0x01, 0x6a, 0x34, 0x01, 0x75,
				0x3a, 0x01, 0x80, 0x3f, 0x01, 0x8c, 0x45, 0x01, 0x98, 0x4c, 0x01, 0xa5, 0x52, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x02, 0xd0, 0x67, 0x02, 0xdf, 0x6f, 0x02, 0xee, 0x76, 0x03, 0xff, 0x7f, 0x0b,
				0xff, 0x83, 0x13, 0xff, 0x87, 0x1b, 0xff, 0x8b, 0x23, 0xff, 0x8f, 0x2b, 0xff, 0x93, 0x33, 0xff,
				0x97, 0x3b, 0xff, 0x9b, 0x44, 0xff, 0xa0, 0x4c, 0xff, 0xa4, 0x54, 0xff, 0xa8, 0x5c, 0xff, 0xac,
				0x00, 0x1a, 0x10, 0x00, 0x20, 0x14, 0x00, 0x26, 0x17, 0x00, 0x2c, 0x1b, 0x00, 0x34, 0x20, 0x00,
				0x3b, 0x25, 0x00, 0x43, 0x2a, 0x00, 0x4c, 0x2f, 0x01, 0x55, 0x35, 0x01, 0x5f, 0x3b, 0x01, 0x6a,
				0x42, 0x01, 0x75, 0x48, 0x01, 0x80, 0x50, 0x01, 0x8c, 0x57, 0x01, 0x98, 0x5f, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x02, 0xc1, 0x78, 0x02, 0xd0, 0x81, 0x02, 0xdf, 0x8b, 0x02, 0xee, 0x94, 0x03,
				0xff, 0x9f, 0x0b, 0xff, 0xa2, 0x13, 0xff, 0xa5, 0x1b, 0xff, 0xa8, 0x23, 0xff, 0xab, 0x2b, 0xff,
				0xae, 0x33, 0xff, 0xb1, 0x3b, 0xff, 0xb4, 0x44, 0xff, 0xb7, 0x4c, 0xff, 0xba, 0x54, 0xff, 0xbd,
				0x00, 0x15, 0x10, 0x00, 0x1a, 0x13, 0x00, 0x20, 0x18, 0x00, 0x26, 0x1c, 0x00, 0x2c, 0x21, 0x00,
				0x34, 0x26, 0x00, 0x3b, 0x2c, 0x00, 0x43, 0x32, 0x00, 0x4c, 0x39, 0x00, 0x55, 0x40, 0x00, 0x5f,
				0x47, 0x00, 0x6a, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xdf, 0xa7, 0x01,
				0xee, 0xb2, 0x02, 0xff, 0xbf, 0x0a, 0xff, 0xc1, 0x12, 0xff, 0xc3, 0x1a, 0xff, 0xc5, 0x22, 0xff,
				0xc7, 0x2a, 0xff, 0xc9, 0x32, 0xff, 0xcb, 0x3b, 0xff, 0xcd, 0x43, 0xff, 0xcf, 0x4b, 0xff, 0xd1,
				0x00, 0x10, 0x0e, 0x00, 0x15, 0x12, 0x00, 0x1a, 0x17, 0x00, 0x20, 0x1c, 0x00, 0x26, 0x21, 0x00,
				0x2c, 0x27, 0x00, 0x34, 0x2d, 0x00, 0x3b, 0x34, 0x00, 0x43, 0x3b, 0x00, 0x4c, 0x43, 0x00, 0x55,
				0x4b, 0x00, 0x5f, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd0, 0xb5, 0x01,
				0xdf, 0xc3, 0x01, 0xee, 0xd0, 0x02, 0xff, 0xdf, 0x0a, 0xff, 0xe0, 0x12, 0xff, 0xe1, 0x1a, 0xff,
				0xe2, 0x22, 0xff, 0xe3, 0x2a, 0xff, 0xe4, 0x32, 0xff, 0xe5, 0x3b, 0xff, 0xe6, 0x43, 0xff, 0xe7,
				0x00, 0x0d, 0x0d, 0x00, 0x10, 0x10, 0x00, 0x15, 0x15, 0x00, 0x1a, 0x1a, 0x00, 0x20, 0x20, 0x00,
				0x26, 0x26, 0x00, 0x2c, 0x2c, 0x00, 0x34, 0x34, 0x00, 0x3b, 0x3b, 0x00, 0x43, 0x43, 0x00, 0x4c,
				0x4c, 0x00, 0x55, 0x55, 0x00, 0x5f, 0x5f, 0x00, 0x6a, 0x6a, 0x00, 0x75, 0x75, 0x01, 0x80, 0x80,
				0x01, 0x8c, 0x8c, 0x01, 0x98, 0x98, 0x01, 0xa5, 0xa5, 0x01, 0xb3, 0xb3, 0x01, 0xc1, 0xc1, 0x01,
				0xd0, 0xd0, 0x01, 0xdf, 0xdf, 0x01, 0xee, 0xee, 0x02, 0xff, 0xff, 0x0a, 0xff, 0xff, 0x12, 0xff,
				0xff, 0x1a, 0xff, 0xff, 0x22, 0xff, 0xff, 0x2a, 0xff, 0xff, 0x32, 0xff, 0xff, 0x3b, 0xff, 0xff,
				0x00, 0x08, 0x09, 0x00, 0x0b, 0x0d, 0x00, 0x0e, 0x10, 0x00, 0x12, 0x15, 0x00, 0x17, 0x1a, 0x00,
				0x1c, 0x20, 0x00, 0x21, 0x26, 0x00, 0x27, 0x2c, 0x00, 0x2d, 0x34, 0x00, 0x34, 0x3b, 0x00, 0x3b,
				0x43, 0x00, 0x43, 0x4c, 0x00, 0x4b, 0x55, 0x00, 0x54, 0x5f, 0x00, 0x5d, 0x6a, 0x00, 0x66, 0x75,
				0x00, 0x70, 0x80, 0x00, 0x7b, 0x8c, 0x00, 0x86, 0x98, 0x00, 0x91, 0xa5, 0x00, 0x9d, 0xb3, 0x00,
				0xa9, 0xc1, 0x00, 0xb6, 0xd0, 0x00, 0xc4, 0xdf, 0x00, 0xd1, 0xee, 0x01, 0xe0, 0xff, 0x09, 0xe1,
				0xff, 0x11, 0xe2, 0xff, 0x19, 0xe3, 0xff, 0x21, 0xe4, 0xff, 0x29, 0xe4, 0xff, 0x32, 0xe6, 0xff,
				0x00, 0x04, 0x06, 0x00, 0x07, 0x09, 0x00, 0x09, 0x0d, 0x00, 0x0c, 0x10, 0x00, 0x10, 0x15, 0x00,
				0x13, 0x1a, 0x00, 0x18, 0x20, 0x00, 0x1c, 0x26, 0x00, 0x21, 0x2c, 0x00, 0x27, 0x34, 0x00, 0x2c,
				0x3b, 0x00, 0x33, 0x43, 0x00, 0x39, 0x4c, 0x00, 0x40, 0x55, 0x00, 0x48, 0x5f, 0x00, 0x4f, 0x6a,
				0x00, 0x58, 0x75, 0x00, 0x60, 0x80, 0x00, 0x69, 0x8c, 0x00, 0x73, 0x98, 0x00, 0x7c, 0xa5, 0x00,
				0x87, 0xb3, 0x00, 0x91, 0xc1, 0x00, 0x9c, 0xd0, 0x00, 0xa8, 0xdf, 0x00, 0xb3, 0xee, 0x01, 0xc0,
				0xff, 0x09, 0xc2, 0xff, 0x11, 0xc4, 0xff, 0x19, 0xc6, 0xff, 0x21, 0xc8, 0xff, 0x29, 0xca, 0xff,
				0x00, 0x02, 0x04, 0x00, 0x04, 0x06, 0x00, 0x05, 0x09, 0x00, 0x08, 0x0d, 0x00, 0x0a, 0x10, 0x00,
				0x0d, 0x15, 0x00, 0x10, 0x1a, 0x00, 0x14, 0x20, 0x00, 0x17, 0x26, 0x00, 0x1c, 0x2c, 0x00, 0x20,
				0x34, 0x00, 0x25, 0x3b, 0x00, 0x2a, 0x43, 0x00, 0x30, 0x4c, 0x00, 0x35, 0x55, 0x00, 0x3c, 0x5f,
				0x00, 0x42, 0x6a, 0x00, 0x49, 0x75, 0x00, 0x50, 0x80, 0x00, 0x58, 0x8c, 0x00, 0x5f, 0x98, 0x00,
				0x68, 0xa5, 0x00, 0x70, 0xb3, 0x00, 0x79, 0xc1, 0x00, 0x82, 0xd0, 0x00, 0x8c, 0xdf, 0x00, 0x95,
				0xee, 0x01, 0xa0, 0xff, 0x09, 0xa3, 0xff, 0x11, 0xa6, 0xff, 0x19, 0xa9, 0xff, 0x21, 0xac, 0xff,
				0x00, 0x01, 0x02, 0x00, 0x02, 0x04, 0x00, 0x03, 0x06, 0x00, 0x04, 0x09, 0x00, 0x06, 0x0d, 0x00,
				0x08, 0x10, 0x00, 0x0a, 0x15, 0x00, 0x0d, 0x1a, 0x00, 0x10, 0x20, 0x00, 0x13, 0x26, 0x00, 0x16,
				0x2c, 0x00, 0x1a, 0x34, 0x00, 0x1d, 0x3b, 0x00, 0x22, 0x43, 0x00, 0x26, 0x4c, 0x00, 0x2b, 0x55,
				0x00, 0x30, 0x5f, 0x00, 0x35, 0x6a, 0x00, 0x3a, 0x75, 0x00, 0x40, 0x80, 0x00, 0x46, 0x8c, 0x00,
				0x4c, 0x98, 0x00, 0x53, 0xa5, 0x00, 0x5a, 0xb3, 0x00, 0x61, 0xc1, 0x00, 0x68, 0xd0, 0x00, 0x70,
				0xdf, 0x00, 0x77, 0xee, 0x01, 0x80, 0xff, 0x09, 0x84, 0xff, 0x11, 0x88, 0xff, 0x19, 0x8c, 0xff,
				0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x02, 0x06, 0x00, 0x03, 0x09, 0x00,
				0x04, 0x0d, 0x00, 0x06, 0x10, 0x00, 0x08, 0x15, 0x00, 0x09, 0x1a, 0x00, 0x0c, 0x20, 0x00, 0x0e,
				0x26, 0x00, 0x10, 0x2c, 0x00, 0x13, 0x34, 0x00, 0x16, 0x3b, 0x00, 0x19, 0x43, 0x00, 0x1c, 0x4c,
				0x00, 0x20, 0x55, 0x00, 0x24, 0x5f, 0x00, 0x27, 0x6a, 0x00, 0x2c, 0x75, 0x00, 0x30, 0x80, 0x00,
				0x34, 0x8c, 0x00, 0x39, 0x98, 0x00, 0x3e, 0xa5, 0x00, 0x43, 0xb3, 0x00, 0x48, 0xc1, 0x00, 0x4e,
				0xd0, 0x00, 0x54, 0xdf, 0x00, 0x59, 0xee, 0x00, 0x60, 0xff, 0x08, 0x65, 0xff, 0x10, 0x6a, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x01, 0x06, 0x00,
				0x02, 0x09, 0x00, 0x03, 0x0d, 0x00, 0x04, 0x10, 0x00, 0x05, 0x15, 0x00, 0x06, 0x1a, 0x00, 0x08,
				0x20, 0x00, 0x09, 0x26, 0x00, 0x0b, 0x2c, 0x00, 0x0d, 0x34, 0x00, 0x0e, 0x3b, 0x00, 0x11, 0x43,
				0x00, 0x13, 0x4c, 0x00, 0x15, 0x55, 0x00, 0x18, 0x5f, 0x00, 0x1a, 0x6a, 0x00, 0x1d, 0x75, 0x00,
				0x20, 0x80, 0x00, 0x23, 0x8c, 0x00, 0x26, 0x98, 0x00, 0x29, 0xa5, 0x00, 0x2d, 0xb3, 0x00, 0x30,
				0xc1, 0x00, 0x34, 0xd0, 0x00, 0x38, 0xdf, 0x00, 0x3b, 0xee, 0x00, 0x40, 0xff, 0x08, 0x46, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00,
				0x00, 0x06, 0x00, 0x01, 0x09, 0x00, 0x01, 0x0d, 0x00, 0x02, 0x10, 0x00, 0x02, 0x15, 0x00, 0x03,
				0x1a, 0x00, 0x04, 0x20, 0x00, 0x04, 0x26, 0x00, 0x05, 0x2c, 0x00, 0x06, 0x34, 0x00, 0x07, 0x3b,
				0x00, 0x08, 0x43, 0x00, 0x09, 0x4c, 0x00, 0x0a, 0x55, 0x00, 0x0c, 0x5f, 0x00, 0x0d, 0x6a, 0x00,
				0x0e, 0x75, 0x00, 0x10, 0x80, 0x00, 0x11, 0x8c, 0x00, 0x13, 0x98, 0x00, 0x14, 0xa5, 0x00, 0x16,
				0xb3, 0x00, 0x18, 0xc1, 0x00, 0x1a, 0xd0, 0x00, 0x1c, 0xdf, 0x00, 0x1d, 0xee, 0x00, 0x20, 0xff
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);

			// Test the metadata calculation
			Assert::AreEqual((UINT)32, imageDescriptor.width);
			Assert::AreEqual((UINT)32, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGB8 == imageDescriptor.format, L"Image format is incorrect");

			Assert::AreEqual(expected.size(), actual.size(), L"Output vector size is incorrect");
			for (int i = 0; i < expected.size(); i++)
			{
				Assert::AreEqual(expected[i], actual[i]);
			}
		}

		TEST_METHOD(PngSuite_f03n0g08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x56, 0x11, 0x25,
				0x28, 0x00, 0x00, 0x01, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x7d, 0xd2, 0xb1, 0x4b, 0x42,
				0x51, 0x14, 0xc7, 0xf1, 0xef, 0xe9, 0x84, 0x44, 0x51, 0x10, 0x11, 0x0d, 0x21, 0x45, 0x82, 0x50,
				0x14, 0x34, 0x04, 0x2e, 0x0e, 0x41, 0xcb, 0x03, 0x07, 0xa1, 0x21, 0x08, 0x8a, 0x22, 0x10, 0x21,
				0x03, 0x83, 0xa2, 0x48, 0xcc, 0xe7, 0xda, 0x5f, 0x10, 0x42, 0x05, 0x41, 0xd0, 0x20, 0x38, 0x34,
				0xb5, 0x38, 0x08, 0x35, 0x34, 0x04, 0x0d, 0x41, 0xe0, 0x1f, 0xe0, 0xbf, 0xf1, 0x1a, 0xd4, 0xe7,
				0x79, 0xca, 0x7b, 0x77, 0xb9, 0x1c, 0xf8, 0x70, 0xef, 0xb9, 0xf7, 0x77, 0xd4, 0x75, 0x32, 0xd9,
				0xdd, 0xbd, 0xfd, 0xc3, 0xa3, 0x93, 0x5c, 0xfe, 0xf4, 0xac, 0x78, 0x7e, 0x71, 0x79, 0x75, 0x7d,
				0x53, 0x2a, 0x97, 0x6f, 0x2b, 0x15, 0xd7, 0xad, 0xba, 0x55, 0x4d, 0x89, 0x20, 0x80, 0xd0, 0xdb,
				0x86, 0x4a, 0xdd, 0xf2, 0xa2, 0x85, 0x6e, 0x4a, 0xb4, 0xd0, 0x0d, 0xa2, 0x85, 0xae, 0x12, 0x2d,
				0x34, 0x49, 0xb4, 0xd0, 0x04, 0xd1, 0x42, 0x97, 0xc4, 0x17, 0x85, 0x46, 0xfd, 0xf5, 0xe5, 0xf9,
				0xe9, 0xa1, 0x76, 0x9f, 0x1f, 0x08, 0x8d, 0xe3, 0x8b, 0x26, 0xfd, 0x95, 0x1b, 0x9c, 0xa1, 0x8b,
				0xf8, 0xa2, 0xfb, 0xa7, 0x75, 0xf8, 0x30, 0xb7, 0xe8, 0x82, 0x0c, 0x84, 0x20, 0x1c, 0xc0, 0xbb,
				0xed, 0x43, 0xe7, 0x09, 0x88, 0x02, 0xd4, 0x03, 0x9d, 0xea, 0x1c, 0x56, 0x94, 0xe0, 0x31, 0xf8,
				0x16, 0x9d, 0xc5, 0x88, 0x3b, 0xe0, 0xad, 0x91, 0xb5, 0x42, 0x67, 0xcc, 0xf3, 0xf9, 0xc6, 0x75,
				0x9a, 0x04, 0x84, 0x4e, 0xdb, 0x0f, 0x4a, 0xa5, 0x3d, 0x19, 0x12, 0x3a, 0x85, 0x15, 0x88, 0x27,
				0x4e, 0x93, 0x8c, 0x89, 0x7b, 0x92, 0x11, 0xd1, 0xc2, 0x31, 0x71, 0x4f, 0x30, 0x22, 0x3e, 0xd9,
				0x31, 0x71, 0xc7, 0xc4, 0x17, 0xad, 0x76, 0x37, 0xb9, 0x2f, 0xb6, 0x4d, 0xdc, 0x31, 0xcf, 0x17,
				0x1d, 0xda, 0x09, 0xa0, 0x06, 0x69, 0x13, 0xf7, 0xb8, 0xf8, 0x22, 0xde, 0xa1, 0xfd, 0xf7, 0xfb,
				0x03, 0x45, 0x93, 0xbe, 0x2a, 0x01, 0x01, 0x70, 0x6c, 0xe7, 0x43, 0xc7, 0xb0, 0x62, 0x79, 0x25,
				0xb9, 0xb6, 0x1e, 0x98, 0x20, 0x15, 0xac, 0x08, 0x26, 0x27, 0x80, 0xf6, 0xcb, 0x30, 0xd1, 0x05,
				0x11, 0x42, 0x7b, 0x43, 0x16, 0x2a, 0xfa, 0x20, 0x54, 0xf8, 0x20, 0x4c, 0x0c, 0x40, 0x88, 0xf8,
				0x07, 0x63, 0x67, 0x5c, 0x42, 0xbc, 0xfe, 0x0b, 0x39, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
				0x44, 0xae, 0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::ColorTypeNotSupported == error);
		}

		TEST_METHOD(PngSuite_f03n2c08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x00, 0x00, 0xfc, 0x18, 0xed,
				0xa3, 0x00, 0x00, 0x04, 0xd2, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x7d, 0x96, 0x5d, 0x88, 0x54,
				0x65, 0x18, 0xc7, 0x7f, 0xcf, 0xbc, 0x67, 0x67, 0xe7, 0xcc, 0xd7, 0x19, 0xbf, 0x5a, 0xfb, 0x90,
				0x2c, 0xb2, 0x0f, 0xb1, 0xb2, 0xd4, 0x28, 0x8d, 0xda, 0x42, 0xb7, 0x90, 0x05, 0xc3, 0x42, 0x32,
				0x42, 0x2a, 0x4d, 0x85, 0x0a, 0xbd, 0x10, 0x0c, 0x0a, 0x7a, 0x0f, 0x78, 0x63, 0x7e, 0x50, 0x77,
				0xd2, 0x55, 0x77, 0xd2, 0x4d, 0x57, 0x7b, 0xd1, 0x6d, 0x20, 0xc1, 0x22, 0x5e, 0x58, 0x76, 0x61,
				0x10, 0x62, 0xe5, 0x45, 0x82, 0xad, 0xee, 0xec, 0x7c, 0xee, 0x9c, 0x7d, 0xba, 0x38, 0xe7, 0x9d,
				0x39, 0x33, 0xb3, 0xbb, 0xc3, 0x61, 0x98, 0xe1, 0x1c, 0xde, 0xdf, 0xfb, 0xff, 0x3f, 0xcf, 0xfb,
				0xfc, 0x8f, 0x51, 0x72, 0x36, 0x57, 0xb0, 0xc5, 0x8a, 0xad, 0xac, 0xb6, 0xab, 0xd7, 0xda, 0xfb,
				0x1f, 0xb2, 0xeb, 0xd6, 0xdb, 0x47, 0x1e, 0xb3, 0x1b, 0x9e, 0xb4, 0x1b, 0x37, 0xd9, 0xa7, 0x37,
				0xdb, 0xe7, 0xb6, 0xda, 0x6d, 0x2f, 0xda, 0x97, 0x5e, 0xb6, 0xaf, 0x8c, 0xdb, 0xd7, 0x77, 0xda,
				0x89, 0x37, 0xed, 0xee, 0x49, 0xbb, 0xe7, 0x2d, 0xbb, 0xf7, 0x1d, 0xbb, 0xef, 0x5d, 0xfb, 0xde,
				0xfb, 0xf6, 0xc0, 0x07, 0xf6, 0xe0, 0x21, 0x7b, 0xe4, 0xa8, 0xfd, 0xe4, 0x53, 0x7b, 0xec, 0xb8,
				0x3d, 0x71, 0xc2, 0x9e, 0xfc, 0xdc, 0x7e, 0xf1, 0xa5, 0xfd, 0xca, 0xda, 0x53, 0xa7, 0xcc, 0xb1,
				0x75, 0xc6, 0x2f, 0x45, 0x04, 0x50, 0x86, 0x32, 0x94, 0xa0, 0x04, 0x45, 0x28, 0x42, 0x01, 0x0a,
				0x90, 0x87, 0x3c, 0xf8, 0x90, 0x73, 0xdf, 0xa3, 0x90, 0x75, 0xdf, 0x23, 0x30, 0x02, 0x1e, 0x78,
				0x60, 0xc0, 0x40, 0x06, 0x32, 0x20, 0x20, 0x00, 0xe6, 0xe8, 0x53, 0x9e, 0x56, 0xf0, 0x83, 0x88,
				0x80, 0x04, 0x53, 0x4a, 0x61, 0xba, 0x8c, 0x42, 0x0a, 0x93, 0x4b, 0x61, 0x62, 0x46, 0xb6, 0x9f,
				0x61, 0x7a, 0x0c, 0xf3, 0xe1, 0xf3, 0x86, 0x40, 0x34, 0xc0, 0x5f, 0x91, 0x62, 0x94, 0x1d, 0xa0,
				0x8b, 0xe9, 0xea, 0xc8, 0xa7, 0x74, 0x74, 0xa5, 0x2c, 0xad, 0xc3, 0xec, 0xdf, 0x9e, 0xa1, 0xac,
				0x54, 0xd0, 0x40, 0xfd, 0x95, 0x03, 0x0c, 0xa5, 0x28, 0xce, 0x2e, 0xa5, 0x20, 0xc9, 0xea, 0xbe,
				0x92, 0x13, 0xa7, 0x43, 0xc9, 0x0a, 0x59, 0x18, 0x51, 0x46, 0xc0, 0x13, 0x3c, 0xf0, 0x14, 0x03,
				0x19, 0x21, 0x83, 0x79, 0xfb, 0xd5, 0x0c, 0x25, 0xa1, 0x0c, 0x15, 0xd1, 0x00, 0x7f, 0x75, 0x9a,
				0x21, 0x94, 0x94, 0x92, 0x50, 0x84, 0x82, 0x50, 0x50, 0xf2, 0x42, 0x01, 0xf2, 0x82, 0xaf, 0xf8,
				0x42, 0x0e, 0x46, 0xc5, 0x31, 0x24, 0xf1, 0x6a, 0x44, 0xf0, 0xc4, 0xe9, 0x10, 0x33, 0xb9, 0x2b,
				0x43, 0x91, 0x3e, 0xc6, 0x9a, 0x25, 0x18, 0x45, 0xc7, 0xc8, 0x83, 0x2f, 0x29, 0x1d, 0xc2, 0xa8,
				0x32, 0xea, 0x18, 0x89, 0x8e, 0x84, 0x61, 0x26, 0xde, 0xc8, 0x24, 0x26, 0x94, 0x85, 0x92, 0x63,
				0x8c, 0x2d, 0xcb, 0x88, 0xbd, 0x5a, 0x46, 0x47, 0x8a, 0x61, 0xc6, 0x77, 0x4b, 0xd2, 0x24, 0x71,
				0x49, 0xcb, 0x4a, 0x80, 0x06, 0xea, 0xaf, 0xed, 0xc4, 0x0c, 0x09, 0xfe, 0x0a, 0xcf, 0xff, 0x1b,
				0x9e, 0xbf, 0x15, 0x9e, 0xbb, 0x19, 0x9e, 0xfb, 0x33, 0x3c, 0x7b, 0x3d, 0x3c, 0xfb, 0x7b, 0x78,
				0xe6, 0x6a, 0x78, 0xe6, 0x4a, 0xf8, 0xf5, 0xb4, 0x3d, 0xbd, 0xa5, 0xd7, 0x5a, 0xa3, 0xfd, 0xad,
				0x35, 0x02, 0x1e, 0x66, 0xe3, 0xf6, 0x4c, 0x03, 0xea, 0x50, 0x83, 0x39, 0xa4, 0x0a, 0xb3, 0x30,
				0x8b, 0xdc, 0x55, 0x9a, 0x7e, 0x34, 0x0b, 0xdf, 0x84, 0x2d, 0x96, 0xfe, 0x7c, 0x66, 0x9f, 0x6d,
				0x40, 0x2b, 0x75, 0xcd, 0xc3, 0x3c, 0xb4, 0x61, 0x1e, 0x22, 0x30, 0xeb, 0xb7, 0x49, 0x03, 0xa9,
				0x43, 0x1d, 0xe6, 0xa0, 0x96, 0x62, 0xcc, 0x28, 0x75, 0x3f, 0xfa, 0xc8, 0x16, 0x0e, 0xda, 0xe0,
				0x90, 0x5d, 0xf5, 0xb1, 0x1d, 0x3b, 0x6c, 0x1f, 0x3c, 0x62, 0x1f, 0xfe, 0x2e, 0xbc, 0x15, 0xaf,
				0x7e, 0x4d, 0xf7, 0xd5, 0xa1, 0x01, 0x0d, 0x68, 0x42, 0xd3, 0x31, 0xda, 0x0e, 0x33, 0x0f, 0xe6,
				0xbe, 0xcd, 0xd2, 0x74, 0x0f, 0xd5, 0x12, 0x1d, 0x38, 0x06, 0x33, 0xaa, 0x35, 0xbf, 0x73, 0xcf,
				0xfd, 0xad, 0xc2, 0x4e, 0xf9, 0x2d, 0x5e, 0xfd, 0x27, 0xdd, 0x55, 0x83, 0x78, 0x67, 0x69, 0x46,
				0x1b, 0x69, 0xa7, 0x18, 0x26, 0xd8, 0x48, 0x8b, 0x01, 0x86, 0x38, 0x86, 0xcc, 0xc2, 0x8c, 0x52,
				0xf5, 0xa3, 0x98, 0x71, 0x58, 0xfe, 0x8e, 0x57, 0xbf, 0xa0, 0xdb, 0xe6, 0xdc, 0x86, 0x06, 0x00,
				0x4d, 0x68, 0x21, 0xb1, 0x8e, 0x36, 0x98, 0xdc, 0xe3, 0xd2, 0x86, 0x26, 0xd2, 0x82, 0x86, 0xdb,
				0xd1, 0x30, 0x63, 0xd6, 0x8f, 0xce, 0x4a, 0x35, 0x5e, 0xfd, 0x84, 0x6e, 0xa8, 0xc2, 0x1c, 0xcc,
				0xb9, 0xe7, 0x97, 0xd1, 0x61, 0xcc, 0xa3, 0xc9, 0xaf, 0x26, 0x12, 0xdf, 0x73, 0x35, 0x97, 0x5a,
				0x8a, 0x31, 0xb5, 0xa2, 0xd3, 0x2d, 0xec, 0x2f, 0xe1, 0x7f, 0x97, 0xc2, 0xdb, 0x0f, 0xdb, 0x55,
				0x5d, 0x11, 0x69, 0xaf, 0x06, 0x74, 0x18, 0x5d, 0x27, 0xf3, 0x4e, 0x4e, 0x2b, 0xb9, 0xd7, 0xab,
				0x79, 0xb7, 0x1e, 0xd5, 0x0b, 0x0a, 0xac, 0x57, 0x6f, 0xcc, 0xe6, 0xef, 0x84, 0x6d, 0xe0, 0x6a,
				0x78, 0x7b, 0x85, 0x5d, 0x39, 0x97, 0xb4, 0x46, 0xd7, 0x2b, 0xe9, 0xd7, 0x81, 0xe9, 0x3c, 0x40,
				0x04, 0x1d, 0xd7, 0x5b, 0x6d, 0x68, 0xa1, 0x2d, 0xb4, 0x89, 0x36, 0xd0, 0x3a, 0x5a, 0x43, 0x6b,
				0x68, 0xe6, 0x38, 0x99, 0x93, 0xcc, 0xea, 0xc2, 0x8c, 0xdf, 0xce, 0xdb, 0x5c, 0x3b, 0xec, 0x00,
				0x37, 0xc2, 0xdb, 0xa3, 0x36, 0xa8, 0xa1, 0x75, 0xb4, 0x8e, 0x36, 0xa0, 0x81, 0x36, 0xd1, 0x26,
				0xda, 0x42, 0x5b, 0xd0, 0x42, 0x0d, 0x63, 0x59, 0xf0, 0xdc, 0xf9, 0xcb, 0xba, 0xf1, 0x18, 0x0f,
				0x81, 0xbc, 0x9b, 0xd4, 0x05, 0xa1, 0x04, 0x65, 0x08, 0xd0, 0x4a, 0xe4, 0x97, 0xf2, 0x76, 0xac,
				0x1d, 0xde, 0x01, 0xca, 0xf6, 0x89, 0xe1, 0x00, 0x91, 0x54, 0x80, 0x18, 0x56, 0xe6, 0x10, 0x03,
				0x5e, 0x7c, 0xf8, 0x24, 0x39, 0x8e, 0x39, 0x97, 0x2f, 0x5d, 0x46, 0x1c, 0x11, 0x65, 0x08, 0x54,
				0x2b, 0x1d, 0x3f, 0xd0, 0xf0, 0x26, 0xe0, 0xdb, 0xad, 0xe9, 0x00, 0x91, 0xa1, 0x00, 0x31, 0x54,
				0x7c, 0xd4, 0x20, 0x9e, 0x3b, 0xdd, 0x31, 0x23, 0x3b, 0xcc, 0x10, 0x8a, 0x6e, 0x8e, 0x07, 0x68,
				0xa0, 0xa7, 0xaf, 0x01, 0x59, 0xfb, 0xda, 0x40, 0x80, 0x48, 0x7f, 0x80, 0x18, 0x4a, 0x39, 0xf0,
				0x50, 0x93, 0xd2, 0x11, 0x0f, 0xf8, 0x58, 0x8a, 0xaf, 0x76, 0x9a, 0xa9, 0x7f, 0x64, 0xe2, 0x19,
				0xc7, 0x88, 0x75, 0x54, 0xf4, 0xdb, 0x69, 0x20, 0x63, 0xf7, 0x0c, 0x85, 0x54, 0x51, 0x52, 0x76,
				0x19, 0xf2, 0x7e, 0x92, 0x40, 0x83, 0x3a, 0x92, 0x62, 0x70, 0xf9, 0x06, 0xc0, 0xd4, 0x1f, 0x32,
				0xf1, 0x42, 0x97, 0xb1, 0xb0, 0xf9, 0x5c, 0xdc, 0xb2, 0x0b, 0xf6, 0x00, 0x83, 0x41, 0xd8, 0xe7,
				0x95, 0x21, 0x97, 0x03, 0x49, 0x82, 0xae, 0x5f, 0x47, 0x72, 0xed, 0xd8, 0xc4, 0xe5, 0xeb, 0x00,
				0x53, 0x57, 0xf9, 0xf1, 0x8a, 0x5e, 0x9c, 0xd6, 0xef, 0x2f, 0xc5, 0xab, 0xcb, 0x8d, 0x8b, 0xaa,
				0x41, 0xc7, 0x5f, 0xb3, 0x28, 0x23, 0x2e, 0xbb, 0x21, 0x9b, 0x75, 0x01, 0x1a, 0x33, 0xbc, 0x94,
				0x8e, 0x2e, 0x63, 0x0b, 0x97, 0x7f, 0x1d, 0x98, 0xa3, 0xf2, 0xf3, 0x0f, 0x50, 0x82, 0x0a, 0x1a,
				0x44, 0xfe, 0xd8, 0x30, 0x23, 0x0e, 0x10, 0xc3, 0x48, 0x16, 0x95, 0x7e, 0x46, 0xec, 0x95, 0x97,
				0x92, 0x32, 0xca, 0x8e, 0x1d, 0x8c, 0x8f, 0xcb, 0xc4, 0x84, 0x4c, 0x4e, 0xca, 0xde, 0xbd, 0xb2,
				0x7f, 0x3f, 0xbd, 0x7a, 0x04, 0x68, 0x10, 0xf9, 0x6b, 0x17, 0x65, 0x18, 0x32, 0x06, 0x15, 0x16,
				0x94, 0x05, 0x92, 0x2b, 0x82, 0x48, 0xe9, 0x48, 0x72, 0xfc, 0x06, 0x0e, 0x7a, 0xa3, 0x37, 0x4c,
				0xd2, 0x83, 0x57, 0xef, 0x6a, 0xa7, 0xe9, 0xf7, 0xa6, 0x6e, 0x7c, 0xd5, 0x92, 0x17, 0x0c, 0x50,
				0x41, 0x15, 0x85, 0x28, 0xc5, 0x88, 0x84, 0x79, 0xe8, 0x38, 0x40, 0xdb, 0x8d, 0xfc, 0xee, 0x50,
				0x8c, 0xa7, 0x44, 0x6a, 0xb8, 0x47, 0x75, 0x9f, 0xf4, 0x70, 0xaf, 0x62, 0x92, 0x17, 0x30, 0x05,
				0x84, 0x05, 0x45, 0x97, 0xd6, 0xd1, 0x72, 0x8c, 0x65, 0x03, 0x24, 0xaa, 0xf5, 0x31, 0x4c, 0xaf,
				0x6a, 0xea, 0x74, 0x0c, 0x78, 0xd5, 0xd5, 0xb1, 0xa8, 0x57, 0x8b, 0x32, 0xaa, 0x3d, 0x86, 0x71,
				0xdb, 0xef, 0x67, 0xa4, 0xbd, 0xea, 0x28, 0x91, 0xf4, 0x01, 0x86, 0xbd, 0x1a, 0x62, 0x74, 0x66,
				0x13, 0x86, 0xe9, 0x6b, 0xbd, 0x98, 0xd4, 0x65, 0x2c, 0xaf, 0xa3, 0x99, 0xb2, 0xab, 0xee, 0xa4,
				0xa4, 0x19, 0x77, 0x7d, 0xee, 0x0d, 0x00, 0x06, 0x18, 0xc3, 0x5e, 0x2d, 0xda, 0x57, 0xcd, 0x54,
				0xcd, 0x07, 0x74, 0xcc, 0xf8, 0xff, 0x03, 0xa5, 0x8e, 0x97, 0xbd, 0x97, 0xce, 0x96, 0xfe, 0x00,
				0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			std::vector<BYTE> expected = {
				0xff, 0x00, 0x08, 0xff, 0x08, 0x0f, 0xff, 0x10, 0x17, 0xff, 0x18, 0x1f, 0xff, 0x20, 0x27, 0xff,
				0x29, 0x2f, 0xff, 0x31, 0x37, 0xff, 0x39, 0x3f, 0xff, 0x41, 0x47, 0xff, 0x4a, 0x4f, 0xff, 0x52,
				0x57, 0xff, 0x5a, 0x5f, 0xff, 0x62, 0x67, 0xff, 0x6a, 0x6f, 0xff, 0x73, 0x77, 0xff, 0x7b, 0x7f,
				0xff, 0x83, 0x87, 0xff, 0x8b, 0x8f, 0xff, 0x94, 0x97, 0xff, 0x9c, 0x9f, 0xff, 0xa4, 0xa7, 0xff,
				0xac, 0xaf, 0xff, 0xb4, 0xb7, 0xff, 0xbd, 0xbf, 0xff, 0xc5, 0xc7, 0xff, 0xcd, 0xcf, 0xff, 0xd5,
				0xd7, 0xff, 0xde, 0xdf, 0xff, 0xe6, 0xe7, 0xff, 0xee, 0xef, 0xff, 0xf6, 0xf7, 0xff, 0xff, 0xff,
				0xee, 0x1d, 0x07, 0xff, 0x1f, 0x08, 0xff, 0x26, 0x0f, 0xff, 0x2d, 0x17, 0xff, 0x34, 0x1f, 0xff,
				0x3b, 0x27, 0xff, 0x43, 0x2f, 0xff, 0x4a, 0x37, 0xff, 0x51, 0x3f, 0xff, 0x58, 0x47, 0xff, 0x60,
				0x4f, 0xff, 0x67, 0x57, 0xff, 0x6e, 0x5f, 0xff, 0x75, 0x67, 0xff, 0x7c, 0x6f, 0xff, 0x84, 0x77,
				0xff, 0x8b, 0x7f, 0xff, 0x92, 0x87, 0xff, 0x99, 0x8f, 0xff, 0xa1, 0x97, 0xff, 0xa8, 0x9f, 0xff,
				0xaf, 0xa7, 0xff, 0xb6, 0xaf, 0xff, 0xbd, 0xb7, 0xff, 0xc5, 0xbf, 0xff, 0xcc, 0xc7, 0xff, 0xd3,
				0xcf, 0xff, 0xda, 0xd7, 0xff, 0xe2, 0xdf, 0xff, 0xe9, 0xe7, 0xff, 0xf0, 0xef, 0xff, 0xf7, 0xf7,
				0xdf, 0x37, 0x07, 0xee, 0x3b, 0x07, 0xff, 0x3f, 0x08, 0xff, 0x45, 0x0f, 0xff, 0x4b, 0x17, 0xff,
				0x51, 0x1f, 0xff, 0x57, 0x27, 0xff, 0x5d, 0x2f, 0xff, 0x64, 0x37, 0xff, 0x6a, 0x3f, 0xff, 0x70,
				0x47, 0xff, 0x76, 0x4f, 0xff, 0x7c, 0x57, 0xff, 0x83, 0x5f, 0xff, 0x89, 0x67, 0xff, 0x8f, 0x6f,
				0xff, 0x95, 0x77, 0xff, 0x9b, 0x7f, 0xff, 0xa2, 0x87, 0xff, 0xa8, 0x8f, 0xff, 0xae, 0x97, 0xff,
				0xb4, 0x9f, 0xff, 0xba, 0xa7, 0xff, 0xc1, 0xaf, 0xff, 0xc7, 0xb7, 0xff, 0xcd, 0xbf, 0xff, 0xd3,
				0xc7, 0xff, 0xd9, 0xcf, 0xff, 0xe0, 0xd7, 0xff, 0xe6, 0xdf, 0xff, 0xec, 0xe7, 0xff, 0xf2, 0xef,
				0xd0, 0x4d, 0x06, 0xdf, 0x53, 0x07, 0xee, 0x58, 0x07, 0xff, 0x5f, 0x08, 0xff, 0x64, 0x0f, 0xff,
				0x69, 0x17, 0xff, 0x6e, 0x1f, 0xff, 0x73, 0x27, 0xff, 0x78, 0x2f, 0xff, 0x7d, 0x37, 0xff, 0x83,
				0x3f, 0xff, 0x88, 0x47, 0xff, 0x8d, 0x4f, 0xff, 0x92, 0x57, 0xff, 0x97, 0x5f, 0xff, 0x9c, 0x67,
				0xff, 0xa2, 0x6f, 0xff, 0xa7, 0x77, 0xff, 0xac, 0x7f, 0xff, 0xb1, 0x87, 0xff, 0xb6, 0x8f, 0xff,
				0xbb, 0x97, 0xff, 0xc1, 0x9f, 0xff, 0xc6, 0xa7, 0xff, 0xcb, 0xaf, 0xff, 0xd0, 0xb7, 0xff, 0xd5,
				0xbf, 0xff, 0xda, 0xc7, 0xff, 0xe0, 0xcf, 0xff, 0xe5, 0xd7, 0xff, 0xea, 0xdf, 0xff, 0xef, 0xe7,
				0xc1, 0x60, 0x05, 0xd0, 0x67, 0x05, 0xdf, 0x6f, 0x06, 0xee, 0x76, 0x06, 0xff, 0x7f, 0x07, 0xff,
				0x83, 0x0f, 0xff, 0x87, 0x17, 0xff, 0x8b, 0x1f, 0xff, 0x8f, 0x27, 0xff, 0x93, 0x2e, 0xff, 0x97,
				0x37, 0xff, 0x9b, 0x3f, 0xff, 0xa0, 0x47, 0xff, 0xa4, 0x4e, 0xff, 0xa8, 0x57, 0xff, 0xac, 0x5f,
				0xff, 0xb0, 0x67, 0xff, 0xb4, 0x6e, 0xff, 0xb8, 0x77, 0xff, 0xbc, 0x7f, 0xff, 0xc1, 0x87, 0xff,
				0xc5, 0x8e, 0xff, 0xc9, 0x97, 0xff, 0xcd, 0x9f, 0xff, 0xd1, 0xa6, 0xff, 0xd5, 0xae, 0xff, 0xd9,
				0xb7, 0xff, 0xdd, 0xbf, 0xff, 0xe2, 0xc6, 0xff, 0xe6, 0xce, 0xff, 0xea, 0xd7, 0xff, 0xee, 0xdf,
				0xb3, 0x6f, 0x04, 0xc1, 0x78, 0x05, 0xd0, 0x81, 0x05, 0xdf, 0x8b, 0x06, 0xee, 0x94, 0x06, 0xff,
				0x9f, 0x07, 0xff, 0xa2, 0x0f, 0xff, 0xa5, 0x17, 0xff, 0xa8, 0x1f, 0xff, 0xab, 0x27, 0xff, 0xae,
				0x2e, 0xff, 0xb1, 0x37, 0xff, 0xb4, 0x3f, 0xff, 0xb7, 0x47, 0xff, 0xba, 0x4e, 0xff, 0xbd, 0x57,
				0xff, 0xc1, 0x5f, 0xff, 0xc4, 0x67, 0xff, 0xc7, 0x6e, 0xff, 0xca, 0x77, 0xff, 0xcd, 0x7f, 0xff,
				0xd0, 0x87, 0xff, 0xd3, 0x8e, 0xff, 0xd6, 0x97, 0xff, 0xd9, 0x9f, 0xff, 0xdc, 0xa6, 0xff, 0xe0,
				0xae, 0xff, 0xe3, 0xb7, 0xff, 0xe6, 0xbf, 0xff, 0xe9, 0xc6, 0xff, 0xec, 0xce, 0xff, 0xef, 0xd7,
				0xa5, 0x7c, 0x04, 0xb3, 0x86, 0x04, 0xc1, 0x90, 0x05, 0xd0, 0x9b, 0x05, 0xdf, 0xa7, 0x06, 0xee,
				0xb2, 0x06, 0xff, 0xbf, 0x07, 0xff, 0xc1, 0x0f, 0xff, 0xc3, 0x17, 0xff, 0xc5, 0x1f, 0xff, 0xc7,
				0x27, 0xff, 0xc9, 0x2e, 0xff, 0xcb, 0x37, 0xff, 0xcd, 0x3f, 0xff, 0xcf, 0x47, 0xff, 0xd1, 0x4e,
				0xff, 0xd3, 0x57, 0xff, 0xd5, 0x5f, 0xff, 0xd7, 0x67, 0xff, 0xd9, 0x6e, 0xff, 0xdb, 0x77, 0xff,
				0xdd, 0x7f, 0xff, 0xe0, 0x87, 0xff, 0xe2, 0x8e, 0xff, 0xe4, 0x97, 0xff, 0xe6, 0x9f, 0xff, 0xe8,
				0xa6, 0xff, 0xea, 0xae, 0xff, 0xec, 0xb7, 0xff, 0xee, 0xbf, 0xff, 0xf0, 0xc6, 0xff, 0xf2, 0xce,
				0x98, 0x85, 0x04, 0xa5, 0x91, 0x04, 0xb3, 0x9c, 0x04, 0xc1, 0xa9, 0x05, 0xd0, 0xb5, 0x05, 0xdf,
				0xc3, 0x06, 0xee, 0xd0, 0x06, 0xff, 0xdf, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xe1, 0x17, 0xff, 0xe2,
				0x1f, 0xff, 0xe3, 0x27, 0xff, 0xe4, 0x2e, 0xff, 0xe5, 0x37, 0xff, 0xe6, 0x3f, 0xff, 0xe7, 0x47,
				0xff, 0xe8, 0x4e, 0xff, 0xe9, 0x57, 0xff, 0xea, 0x5f, 0xff, 0xeb, 0x67, 0xff, 0xec, 0x6e, 0xff,
				0xed, 0x77, 0xff, 0xee, 0x7f, 0xff, 0xef, 0x87, 0xff, 0xf0, 0x8e, 0xff, 0xf1, 0x97, 0xff, 0xf2,
				0x9f, 0xff, 0xf3, 0xa6, 0xff, 0xf4, 0xae, 0xff, 0xf5, 0xb7, 0xff, 0xf6, 0xbf, 0xff, 0xf7, 0xc6,
				0x8c, 0x8c, 0x03, 0x98, 0x98, 0x03, 0xa5, 0xa5, 0x03, 0xb3, 0xb3, 0x04, 0xc1, 0xc1, 0x04, 0xd0,
				0xd0, 0x04, 0xdf, 0xdf, 0x05, 0xee, 0xee, 0x05, 0xff, 0xff, 0x06, 0xff, 0xff, 0x0e, 0xff, 0xff,
				0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
				0xff, 0x6e, 0xff, 0xff, 0x76, 0xff, 0xff, 0x7e, 0xff, 0xff, 0x86, 0xff, 0xff, 0x8e, 0xff, 0xff,
				0x96, 0xff, 0xff, 0x9e, 0xff, 0xff, 0xa6, 0xff, 0xff, 0xae, 0xff, 0xff, 0xb6, 0xff, 0xff, 0xbe,
				0x70, 0x80, 0x03, 0x7b, 0x8c, 0x03, 0x86, 0x98, 0x03, 0x91, 0xa5, 0x03, 0x9d, 0xb3, 0x04, 0xa9,
				0xc1, 0x04, 0xb6, 0xd0, 0x04, 0xc4, 0xdf, 0x05, 0xd1, 0xee, 0x05, 0xe0, 0xff, 0x06, 0xe1, 0xff,
				0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xec,
				0xff, 0x66, 0xec, 0xff, 0x6e, 0xee, 0xff, 0x76, 0xef, 0xff, 0x7e, 0xf0, 0xff, 0x86, 0xf0, 0xff,
				0x8e, 0xf2, 0xff, 0x96, 0xf3, 0xff, 0x9e, 0xf3, 0xff, 0xa6, 0xf4, 0xff, 0xae, 0xf6, 0xff, 0xb6,
				0x58, 0x75, 0x02, 0x60, 0x80, 0x03, 0x69, 0x8c, 0x03, 0x73, 0x98, 0x03, 0x7c, 0xa5, 0x03, 0x87,
				0xb3, 0x04, 0x91, 0xc1, 0x04, 0x9c, 0xd0, 0x04, 0xa8, 0xdf, 0x05, 0xb3, 0xee, 0x05, 0xc0, 0xff,
				0x06, 0xc2, 0xff, 0x0e, 0xc4, 0xff, 0x16, 0xc6, 0xff, 0x1e, 0xc8, 0xff, 0x26, 0xca, 0xff, 0x2e,
				0xcc, 0xff, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd4, 0xff, 0x56, 0xd6,
				0xff, 0x5e, 0xd8, 0xff, 0x66, 0xda, 0xff, 0x6e, 0xdc, 0xff, 0x76, 0xde, 0xff, 0x7e, 0xe0, 0xff,
				0x86, 0xe2, 0xff, 0x8e, 0xe4, 0xff, 0x96, 0xe6, 0xff, 0x9e, 0xe8, 0xff, 0xa6, 0xea, 0xff, 0xae,
				0x42, 0x6a, 0x02, 0x49, 0x75, 0x02, 0x50, 0x80, 0x02, 0x58, 0x8c, 0x02, 0x5f, 0x98, 0x02, 0x68,
				0xa5, 0x03, 0x70, 0xb3, 0x03, 0x79, 0xc1, 0x03, 0x82, 0xd0, 0x04, 0x8c, 0xdf, 0x04, 0x95, 0xee,
				0x04, 0xa0, 0xff, 0x05, 0xa3, 0xff, 0x0d, 0xa6, 0xff, 0x15, 0xa9, 0xff, 0x1d, 0xac, 0xff, 0x25,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xff, 0x45, 0xbb, 0xff, 0x4d, 0xbe,
				0xff, 0x55, 0xc1, 0xff, 0x5d, 0xc4, 0xff, 0x65, 0xc7, 0xff, 0x6d, 0xca, 0xff, 0x75, 0xcd, 0xff,
				0x7d, 0xd1, 0xff, 0x86, 0xd4, 0xff, 0x8e, 0xd7, 0xff, 0x96, 0xda, 0xff, 0x9e, 0xdd, 0xff, 0xa6,
				0x30, 0x5f, 0x01, 0x35, 0x6a, 0x02, 0x3a, 0x75, 0x02, 0x40, 0x80, 0x02, 0x46, 0x8c, 0x02, 0x4c,
				0x98, 0x02, 0x53, 0xa5, 0x03, 0x5a, 0xb3, 0x03, 0x61, 0xc1, 0x03, 0x68, 0xd0, 0x04, 0x70, 0xdf,
				0x04, 0x77, 0xee, 0x04, 0x80, 0xff, 0x05, 0x84, 0xff, 0x0d, 0x88, 0xff, 0x15, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0xff, 0x35, 0x9c, 0xff, 0x3d, 0xa0, 0xff, 0x45, 0xa4,
				0xff, 0x4d, 0xa8, 0xff, 0x55, 0xad, 0xff, 0x5d, 0xb1, 0xff, 0x65, 0xb5, 0xff, 0x6d, 0xb9, 0xff,
				0x75, 0xbd, 0xff, 0x7d, 0xc1, 0xff, 0x86, 0xc5, 0xff, 0x8e, 0xc9, 0xff, 0x96, 0xcd, 0xff, 0x9e,
				0x20, 0x55, 0x01, 0x24, 0x5f, 0x01, 0x27, 0x6a, 0x02, 0x2c, 0x75, 0x02, 0x30, 0x80, 0x02, 0x34,
				0x8c, 0x02, 0x39, 0x98, 0x02, 0x3e, 0xa5, 0x03, 0x43, 0xb3, 0x03, 0x48, 0xc1, 0x03, 0x4e, 0xd0,
				0x04, 0x54, 0xdf, 0x04, 0x59, 0xee, 0x04, 0x60, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x74, 0xff, 0x25, 0x79, 0xff, 0x2d, 0x7e, 0xff, 0x35, 0x83, 0xff, 0x3d, 0x89,
				0xff, 0x45, 0x8e, 0xff, 0x4d, 0x93, 0xff, 0x55, 0x98, 0xff, 0x5d, 0x9d, 0xff, 0x65, 0xa2, 0xff,
				0x6d, 0xa7, 0xff, 0x75, 0xac, 0xff, 0x7d, 0xb2, 0xff, 0x86, 0xb7, 0xff, 0x8e, 0xbc, 0xff, 0x96,
				0x13, 0x4c, 0x01, 0x15, 0x55, 0x01, 0x18, 0x5f, 0x01, 0x1a, 0x6a, 0x02, 0x1d, 0x75, 0x02, 0x20,
				0x80, 0x02, 0x23, 0x8c, 0x02, 0x26, 0x98, 0x02, 0x29, 0xa5, 0x03, 0x2d, 0xb3, 0x03, 0x30, 0xc1,
				0x03, 0x34, 0xd0, 0x04, 0x38, 0xdf, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5e, 0xff, 0x2d, 0x64, 0xff, 0x35, 0x6b,
				0xff, 0x3d, 0x71, 0xff, 0x45, 0x77, 0xff, 0x4d, 0x7d, 0xff, 0x55, 0x83, 0xff, 0x5d, 0x89, 0xff,
				0x65, 0x90, 0xff, 0x6d, 0x96, 0xff, 0x75, 0x9c, 0xff, 0x7d, 0xa2, 0xff, 0x86, 0xa8, 0xff, 0x8e,
				0x08, 0x43, 0x01, 0x09, 0x4c, 0x01, 0x0a, 0x55, 0x01, 0x0c, 0x5f, 0x01, 0x0d, 0x6a, 0x01, 0x0e,
				0x75, 0x01, 0x10, 0x80, 0x02, 0x11, 0x8c, 0x02, 0x13, 0x98, 0x02, 0x14, 0xa5, 0x02, 0x16, 0xb3,
				0x02, 0x18, 0xc1, 0x03, 0x1a, 0xd0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xff, 0x04,
				0x27, 0xff, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xff, 0x2c, 0x4b,
				0xff, 0x34, 0x52, 0xff, 0x3c, 0x59, 0xff, 0x44, 0x60, 0xff, 0x4c, 0x67, 0xff, 0x54, 0x6f, 0xff,
				0x5d, 0x76, 0xff, 0x65, 0x7d, 0xff, 0x6d, 0x84, 0xff, 0x75, 0x8b, 0xff, 0x7d, 0x93, 0xff, 0x85,
				0x00, 0x3b, 0x00, 0x01, 0x43, 0x00, 0x01, 0x4c, 0x00, 0x01, 0x55, 0x00, 0x01, 0x5f, 0x00, 0x01,
				0x6a, 0x00, 0x01, 0x75, 0x00, 0x02, 0x80, 0x00, 0x02, 0x8c, 0x00, 0x02, 0x98, 0x00, 0x02, 0xa5,
				0x00, 0x02, 0xb3, 0x00, 0x03, 0xc1, 0x00, 0x03, 0xd0, 0x00, 0x03, 0xdf, 0x00, 0x03, 0xee, 0x00,
				0x04, 0xff, 0x00, 0x0c, 0xff, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c,
				0xff, 0x29, 0x34, 0xff, 0x31, 0x3c, 0xff, 0x39, 0x44, 0xff, 0x41, 0x4c, 0xff, 0x4a, 0x54, 0xff,
				0x52, 0x5d, 0xff, 0x5a, 0x65, 0xff, 0x62, 0x6d, 0xff, 0x6a, 0x75, 0xff, 0x73, 0x7d, 0xff, 0x7b,
				0x00, 0x34, 0x06, 0x00, 0x3b, 0x07, 0x01, 0x43, 0x08, 0x01, 0x4c, 0x09, 0x01, 0x55, 0x0a, 0x01,
				0x5f, 0x0b, 0x01, 0x6a, 0x0c, 0x01, 0x75, 0x0e, 0x02, 0x80, 0x0f, 0x02, 0x8c, 0x11, 0x02, 0x98,
				0x12, 0x02, 0xa5, 0x14, 0x02, 0xb3, 0x15, 0x03, 0xc1, 0x17, 0x03, 0xd0, 0x19, 0x03, 0xdf, 0x1b,
				0x03, 0xee, 0x1d, 0x04, 0xff, 0x1f, 0x0c, 0xff, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
				0xff, 0x3b, 0x2c, 0xff, 0x43, 0x34, 0xff, 0x4a, 0x3c, 0xff, 0x51, 0x44, 0xff, 0x58, 0x4c, 0xff,
				0x60, 0x54, 0xff, 0x67, 0x5d, 0xff, 0x6e, 0x65, 0xff, 0x75, 0x6d, 0xff, 0x7c, 0x75, 0xff, 0x84,
				0x00, 0x2c, 0x0b, 0x00, 0x34, 0x0c, 0x00, 0x3b, 0x0e, 0x00, 0x43, 0x10, 0x00, 0x4c, 0x12, 0x01,
				0x55, 0x15, 0x01, 0x5f, 0x17, 0x01, 0x6a, 0x1a, 0x01, 0x75, 0x1c, 0x01, 0x80, 0x1f, 0x01, 0x8c,
				0x22, 0x01, 0x98, 0x25, 0x01, 0xa5, 0x28, 0x02, 0xb3, 0x2c, 0x02, 0xc1, 0x2f, 0x02, 0xd0, 0x33,
				0x02, 0xdf, 0x37, 0x02, 0xee, 0x3b, 0x03, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b,
				0xff, 0x51, 0x23, 0xff, 0x57, 0x2b, 0xff, 0x5d, 0x33, 0xff, 0x64, 0x3b, 0xff, 0x6a, 0x44, 0xff,
				0x70, 0x4c, 0xff, 0x76, 0x54, 0xff, 0x7c, 0x5c, 0xff, 0x83, 0x64, 0xff, 0x89, 0x6c, 0xff, 0x8f,
				0x00, 0x26, 0x0e, 0x00, 0x2c, 0x10, 0x00, 0x34, 0x13, 0x00, 0x3b, 0x16, 0x00, 0x43, 0x19, 0x00,
				0x4c, 0x1c, 0x01, 0x55, 0x20, 0x01, 0x5f, 0x23, 0x01, 0x6a, 0x27, 0x01, 0x75, 0x2b, 0x01, 0x80,
				0x2f, 0x01, 0x8c, 0x34, 0x01, 0x98, 0x38, 0x01, 0xa5, 0x3d, 0x02, 0xb3, 0x42, 0x02, 0xc1, 0x48,
				0x02, 0xd0, 0x4d, 0x02, 0xdf, 0x53, 0x02, 0xee, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
				0xff, 0x69, 0x1b, 0xff, 0x6e, 0x23, 0xff, 0x73, 0x2b, 0xff, 0x78, 0x33, 0xff, 0x7d, 0x3b, 0xff,
				0x83, 0x44, 0xff, 0x88, 0x4c, 0xff, 0x8d, 0x54, 0xff, 0x92, 0x5c, 0xff, 0x97, 0x64, 0xff, 0x9c,
				0x00, 0x20, 0x0f, 0x00, 0x26, 0x13, 0x00, 0x2c, 0x16, 0x00, 0x34, 0x19, 0x00, 0x3b, 0x1d, 0x00,
				0x43, 0x21, 0x00, 0x4c, 0x26, 0x01, 0x55, 0x2a, 0x01, 0x5f, 0x2f, 0x01, 0x6a, 0x34, 0x01, 0x75,
				0x3a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x98, 0x4c, 0x01, 0xa5, 0x52, 0x02, 0xb3, 0x59,
				0x02, 0xc1, 0x60, 0x02, 0xd0, 0x67, 0x02, 0xdf, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b,
				0xff, 0x83, 0x13, 0xff, 0x87, 0x1b, 0xff, 0x8b, 0x23, 0xff, 0x8f, 0x2b, 0xff, 0x93, 0x33, 0xff,
				0x97, 0x3b, 0xff, 0x9b, 0x44, 0xff, 0xa0, 0x4c, 0xff, 0xa4, 0x54, 0xff, 0xa8, 0x5c, 0xff, 0xac,
				0x00, 0x1a, 0x10, 0x00, 0x20, 0x14, 0x00, 0x26, 0x17, 0x00, 0x2c, 0x1b, 0x00, 0x34, 0x20, 0x00,
				0x3b, 0x25, 0x00, 0x43, 0x2a, 0x00, 0x4c, 0x2f, 0x01, 0x55, 0x35, 0x01, 0x5f, 0x3b, 0x01, 0x6a,
				0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x98, 0x5f, 0x01, 0xa5, 0x67,
				0x02, 0xb3, 0x6f, 0x02, 0xc1, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
				0xff, 0x9f, 0x0b, 0xff, 0xa2, 0x13, 0xff, 0xa5, 0x1b, 0xff, 0xa8, 0x23, 0xff, 0xab, 0x2b, 0xff,
				0xae, 0x33, 0xff, 0xb1, 0x3b, 0xff, 0xb4, 0x44, 0xff, 0xb7, 0x4c, 0xff, 0xba, 0x54, 0xff, 0xbd,
				0x00, 0x15, 0x10, 0x00, 0x1a, 0x13, 0x00, 0x20, 0x18, 0x00, 0x26, 0x1c, 0x00, 0x2c, 0x21, 0x00,
				0x34, 0x26, 0x00, 0x3b, 0x2c, 0x00, 0x43, 0x32, 0x00, 0x4c, 0x39, 0x00, 0x55, 0x40, 0x00, 0x5f,
				0x47, 0x00, 0x6a, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xdf, 0xa7, 0x01,
				0xee, 0xb2, 0x02, 0xff, 0xbf, 0x0a, 0xff, 0xc1, 0x12, 0xff, 0xc3, 0x1a, 0xff, 0xc5, 0x22, 0xff,
				0xc7, 0x2a, 0xff, 0xc9, 0x32, 0xff, 0xcb, 0x3b, 0xff, 0xcd, 0x43, 0xff, 0xcf, 0x4b, 0xff, 0xd1,
				0x00, 0x10, 0x0e, 0x00, 0x15, 0x12, 0x00, 0x1a, 0x17, 0x00, 0x20, 0x1c, 0x00, 0x26, 0x21, 0x00,
				0x2c, 0x27, 0x00, 0x34, 0x2d, 0x00, 0x3b, 0x34, 0x00, 0x43, 0x3b, 0x00, 0x4c, 0x43, 0x00, 0x55,
				0x4b, 0x00, 0x5f, 0x53, 0x00, 0x6a, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xa9, 0x01, 0xd0, 0xb5, 0x01,
				0xdf, 0xc3, 0x01, 0xee, 0xd0, 0x02, 0xff, 0xdf, 0x0a, 0xff, 0xe0, 0x12, 0xff, 0xe1, 0x1a, 0xff,
				0xe2, 0x22, 0xff, 0xe3, 0x2a, 0xff, 0xe4, 0x32, 0xff, 0xe5, 0x3b, 0xff, 0xe6, 0x43, 0xff, 0xe7,
				0x00, 0x0d, 0x0d, 0x00, 0x10, 0x10, 0x00, 0x15, 0x15, 0x00, 0x1a, 0x1a, 0x00, 0x20, 0x20, 0x00,
				0x26, 0x26, 0x00, 0x2c, 0x2c, 0x00, 0x34, 0x34, 0x00, 0x3b, 0x3b, 0x00, 0x43, 0x43, 0x00, 0x4c,
				0x4c, 0x00, 0x55, 0x55, 0x00, 0x5f, 0x5f, 0x00, 0x6a, 0x6a, 0x00, 0x75, 0x75, 0x01, 0x80, 0x80,
				0x01, 0x8c, 0x8c, 0x01, 0x98, 0x98, 0x01, 0xa5, 0xa5, 0x01, 0xb3, 0xb3, 0x01, 0xc1, 0xc1, 0x01,
				0xd0, 0xd0, 0x01, 0xdf, 0xdf, 0x01, 0xee, 0xee, 0x02, 0xff, 0xff, 0x0a, 0xff, 0xff, 0x12, 0xff,
				0xff, 0x1a, 0xff, 0xff, 0x22, 0xff, 0xff, 0x2a, 0xff, 0xff, 0x32, 0xff, 0xff, 0x3b, 0xff, 0xff,
				0x00, 0x08, 0x09, 0x00, 0x0b, 0x0d, 0x00, 0x0e, 0x10, 0x00, 0x12, 0x15, 0x00, 0x17, 0x1a, 0x00,
				0x1c, 0x20, 0x00, 0x21, 0x26, 0x00, 0x27, 0x2c, 0x00, 0x2d, 0x34, 0x00, 0x34, 0x3b, 0x00, 0x3b,
				0x43, 0x00, 0x43, 0x4c, 0x00, 0x4b, 0x55, 0x00, 0x54, 0x5f, 0x00, 0x5d, 0x6a, 0x00, 0x66, 0x75,
				0x00, 0x70, 0x80, 0x00, 0x7b, 0x8c, 0x00, 0x86, 0x98, 0x00, 0x91, 0xa5, 0x00, 0x9d, 0xb3, 0x00,
				0xa9, 0xc1, 0x00, 0xb6, 0xd0, 0x00, 0xc4, 0xdf, 0x00, 0xd1, 0xee, 0x01, 0xe0, 0xff, 0x09, 0xe1,
				0xff, 0x11, 0xe2, 0xff, 0x19, 0xe3, 0xff, 0x21, 0xe4, 0xff, 0x29, 0xe4, 0xff, 0x32, 0xe6, 0xff,
				0x00, 0x04, 0x06, 0x00, 0x07, 0x09, 0x00, 0x09, 0x0d, 0x00, 0x0c, 0x10, 0x00, 0x10, 0x15, 0x00,
				0x13, 0x1a, 0x00, 0x18, 0x20, 0x00, 0x1c, 0x26, 0x00, 0x21, 0x2c, 0x00, 0x27, 0x34, 0x00, 0x2c,
				0x3b, 0x00, 0x33, 0x43, 0x00, 0x39, 0x4c, 0x00, 0x40, 0x55, 0x00, 0x48, 0x5f, 0x00, 0x4f, 0x6a,
				0x00, 0x58, 0x75, 0x00, 0x60, 0x80, 0x00, 0x69, 0x8c, 0x00, 0x73, 0x98, 0x00, 0x7c, 0xa5, 0x00,
				0x87, 0xb3, 0x00, 0x91, 0xc1, 0x00, 0x9c, 0xd0, 0x00, 0xa8, 0xdf, 0x00, 0xb3, 0xee, 0x01, 0xc0,
				0xff, 0x09, 0xc2, 0xff, 0x11, 0xc4, 0xff, 0x19, 0xc6, 0xff, 0x21, 0xc8, 0xff, 0x29, 0xca, 0xff,
				0x00, 0x02, 0x04, 0x00, 0x04, 0x06, 0x00, 0x05, 0x09, 0x00, 0x08, 0x0d, 0x00, 0x0a, 0x10, 0x00,
				0x0d, 0x15, 0x00, 0x10, 0x1a, 0x00, 0x14, 0x20, 0x00, 0x17, 0x26, 0x00, 0x1c, 0x2c, 0x00, 0x20,
				0x34, 0x00, 0x25, 0x3b, 0x00, 0x2a, 0x43, 0x00, 0x30, 0x4c, 0x00, 0x35, 0x55, 0x00, 0x3c, 0x5f,
				0x00, 0x42, 0x6a, 0x00, 0x49, 0x75, 0x00, 0x50, 0x80, 0x00, 0x58, 0x8c, 0x00, 0x5f, 0x98, 0x00,
				0x68, 0xa5, 0x00, 0x70, 0xb3, 0x00, 0x79, 0xc1, 0x00, 0x82, 0xd0, 0x00, 0x8c, 0xdf, 0x00, 0x95,
				0xee, 0x01, 0xa0, 0xff, 0x09, 0xa3, 0xff, 0x11, 0xa6, 0xff, 0x19, 0xa9, 0xff, 0x21, 0xac, 0xff,
				0x00, 0x01, 0x02, 0x00, 0x02, 0x04, 0x00, 0x03, 0x06, 0x00, 0x04, 0x09, 0x00, 0x06, 0x0d, 0x00,
				0x08, 0x10, 0x00, 0x0a, 0x15, 0x00, 0x0d, 0x1a, 0x00, 0x10, 0x20, 0x00, 0x13, 0x26, 0x00, 0x16,
				0x2c, 0x00, 0x1a, 0x34, 0x00, 0x1d, 0x3b, 0x00, 0x22, 0x43, 0x00, 0x26, 0x4c, 0x00, 0x2b, 0x55,
				0x00, 0x30, 0x5f, 0x00, 0x35, 0x6a, 0x00, 0x3a, 0x75, 0x00, 0x40, 0x80, 0x00, 0x46, 0x8c, 0x00,
				0x4c, 0x98, 0x00, 0x53, 0xa5, 0x00, 0x5a, 0xb3, 0x00, 0x61, 0xc1, 0x00, 0x68, 0xd0, 0x00, 0x70,
				0xdf, 0x00, 0x77, 0xee, 0x01, 0x80, 0xff, 0x09, 0x84, 0xff, 0x11, 0x88, 0xff, 0x19, 0x8c, 0xff,
				0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x02, 0x06, 0x00, 0x03, 0x09, 0x00,
				0x04, 0x0d, 0x00, 0x06, 0x10, 0x00, 0x08, 0x15, 0x00, 0x09, 0x1a, 0x00, 0x0c, 0x20, 0x00, 0x0e,
				0x26, 0x00, 0x10, 0x2c, 0x00, 0x13, 0x34, 0x00, 0x16, 0x3b, 0x00, 0x19, 0x43, 0x00, 0x1c, 0x4c,
				0x00, 0x20, 0x55, 0x00, 0x24, 0x5f, 0x00, 0x27, 0x6a, 0x00, 0x2c, 0x75, 0x00, 0x30, 0x80, 0x00,
				0x34, 0x8c, 0x00, 0x39, 0x98, 0x00, 0x3e, 0xa5, 0x00, 0x43, 0xb3, 0x00, 0x48, 0xc1, 0x00, 0x4e,
				0xd0, 0x00, 0x54, 0xdf, 0x00, 0x59, 0xee, 0x00, 0x60, 0xff, 0x08, 0x65, 0xff, 0x10, 0x6a, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x01, 0x06, 0x00,
				0x02, 0x09, 0x00, 0x03, 0x0d, 0x00, 0x04, 0x10, 0x00, 0x05, 0x15, 0x00, 0x06, 0x1a, 0x00, 0x08,
				0x20, 0x00, 0x09, 0x26, 0x00, 0x0b, 0x2c, 0x00, 0x0d, 0x34, 0x00, 0x0e, 0x3b, 0x00, 0x11, 0x43,
				0x00, 0x13, 0x4c, 0x00, 0x15, 0x55, 0x00, 0x18, 0x5f, 0x00, 0x1a, 0x6a, 0x00, 0x1d, 0x75, 0x00,
				0x20, 0x80, 0x00, 0x23, 0x8c, 0x00, 0x26, 0x98, 0x00, 0x29, 0xa5, 0x00, 0x2d, 0xb3, 0x00, 0x30,
				0xc1, 0x00, 0x34, 0xd0, 0x00, 0x38, 0xdf, 0x00, 0x3b, 0xee, 0x00, 0x40, 0xff, 0x08, 0x46, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00,
				0x00, 0x06, 0x00, 0x01, 0x09, 0x00, 0x01, 0x0d, 0x00, 0x02, 0x10, 0x00, 0x02, 0x15, 0x00, 0x03,
				0x1a, 0x00, 0x04, 0x20, 0x00, 0x04, 0x26, 0x00, 0x05, 0x2c, 0x00, 0x06, 0x34, 0x00, 0x07, 0x3b,
				0x00, 0x08, 0x43, 0x00, 0x09, 0x4c, 0x00, 0x0a, 0x55, 0x00, 0x0c, 0x5f, 0x00, 0x0d, 0x6a, 0x00,
				0x0e, 0x75, 0x00, 0x10, 0x80, 0x00, 0x11, 0x8c, 0x00, 0x13, 0x98, 0x00, 0x14, 0xa5, 0x00, 0x16,
				0xb3, 0x00, 0x18, 0xc1, 0x00, 0x1a, 0xd0, 0x00, 0x1c, 0xdf, 0x00, 0x1d, 0xee, 0x00, 0x20, 0xff
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);

			// Test the metadata calculation
			Assert::AreEqual((UINT)32, imageDescriptor.width);
			Assert::AreEqual((UINT)32, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGB8 == imageDescriptor.format, L"Image format is incorrect");

			Assert::AreEqual(expected.size(), actual.size(), L"Output vector size is incorrect");
			for (int i = 0; i < expected.size(); i++)
			{
				Assert::AreEqual(expected[i], actual[i]);
			}
		}

		TEST_METHOD(PngSuite_f04n0g08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x00, 0x00, 0x56, 0x11, 0x25,
				0x28, 0x00, 0x00, 0x00, 0xd4, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x85, 0xd1, 0xc1, 0x6d, 0xc2,
				0x30, 0x14, 0x80, 0xe1, 0xdf, 0xf6, 0xb3, 0xcd, 0x4c, 0x9d, 0xa1, 0x62, 0x06, 0xa4, 0x0e, 0xc0,
				0x0d, 0x29, 0xa7, 0x6e, 0x80, 0xd4, 0x4b, 0x27, 0xa8, 0x94, 0x2d, 0x58, 0x0b, 0x42, 0x21, 0xe6,
				0xc0, 0x01, 0xdb, 0x0f, 0xdb, 0x39, 0x44, 0x7a, 0xd1, 0xa7, 0xff, 0xd9, 0x8a, 0x7c, 0x6f, 0xe2,
				0x26, 0xc6, 0x18, 0x43, 0x08, 0xde, 0x7b, 0x2f, 0xde, 0x89, 0x73, 0xce, 0x59, 0x6b, 0x8d, 0x31,
				0x06, 0x23, 0x67, 0x5a, 0x8f, 0x05, 0x4c, 0x92, 0xa5, 0x09, 0x9e, 0x42, 0x2e, 0x6d, 0x80, 0x05,
				0x7a, 0x05, 0xb0, 0x23, 0x80, 0x1d, 0x01, 0xac, 0x5c, 0xfb, 0x40, 0x15, 0xb6, 0x9c, 0x2a, 0xa0,
				0x0a, 0xd5, 0x07, 0xf9, 0x2f, 0xc6, 0x2f, 0x0d, 0xea, 0xc2, 0x5f, 0xb5, 0xb3, 0x2c, 0x4c, 0x50,
				0xdf, 0xaa, 0x5a, 0xc1, 0x51, 0x81, 0x5b, 0x36, 0xfc, 0xe8, 0x40, 0x5d, 0x38, 0xa8, 0x5f, 0x93,
				0x17, 0x66, 0x58, 0x60, 0xe2, 0xb7, 0xb9, 0x82, 0xdd, 0x05, 0xa0, 0xa8, 0xc8, 0x3d, 0x9f, 0x96,
				0xec, 0xfd, 0x16, 0xcc, 0x00, 0x4c, 0x1c, 0x5b, 0x2b, 0xca, 0xd2, 0x13, 0xac, 0x2f, 0xf1, 0xe1,
				0x43, 0x0c, 0x71, 0x66, 0x1f, 0xb3, 0x53, 0xc8, 0x1d, 0xd5, 0x28, 0x0f, 0xb9, 0xa2, 0xc4, 0x52,
				0x83, 0x52, 0x7c, 0x06, 0x0d, 0xf4, 0x96, 0x0c, 0xa4, 0x81, 0x90, 0x44, 0x5f, 0x48, 0xa2, 0x2f,
				0x24, 0xd1, 0x17, 0xc2, 0x40, 0x08, 0x03, 0xf1, 0x00, 0x16, 0x26, 0x4c, 0x07, 0x21, 0x99, 0x60,
				0x81, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::ColorTypeNotSupported == error);
		}

		TEST_METHOD(PngSuite_f04n2c08)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x00, 0x00, 0xfc, 0x18, 0xed,
				0xa3, 0x00, 0x00, 0x03, 0xa0, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xad, 0x96, 0xcd, 0x8e, 0x1b,
				0x45, 0x14, 0x85, 0xbf, 0x5b, 0x55, 0xfd, 0xe7, 0x76, 0xdb, 0x94, 0xa2, 0x81, 0x28, 0x22, 0x0b,
				0x1e, 0x80, 0x17, 0xe0, 0x09, 0xd8, 0x24, 0xef, 0x01, 0x7b, 0xf6, 0xec, 0x59, 0xb1, 0xcb, 0x5b,
				0xf0, 0x00, 0xac, 0xb2, 0x67, 0xc9, 0x2a, 0x42, 0x8a, 0x10, 0x51, 0x04, 0x2c, 0x06, 0x3c, 0x33,
				0x8e, 0xcb, 0x63, 0xbb, 0x2f, 0x8b, 0xaa, 0x6e, 0x97, 0x3d, 0x63, 0xcb, 0x20, 0x5a, 0x47, 0xd6,
				0xad, 0xea, 0x76, 0x9f, 0xaa, 0x5b, 0xe7, 0x9e, 0xdb, 0x4e, 0xa9, 0xa9, 0x2b, 0xea, 0x3a, 0xa1,
				0xa9, 0x1f, 0x8f, 0xff, 0xdb, 0xad, 0xa6, 0x76, 0x7f, 0x3d, 0x57, 0x6f, 0xd6, 0x54, 0xec, 0x51,
				0x9f, 0x88, 0xf3, 0x61, 0x01, 0x05, 0x38, 0xb0, 0x60, 0x48, 0x97, 0x42, 0x0f, 0x5b, 0xd8, 0xc2,
				0x06, 0x0c, 0x08, 0x6e, 0xf1, 0x0c, 0x9c, 0x7a, 0xb7, 0xa6, 0xe4, 0x00, 0xd5, 0x65, 0xc3, 0x48,
				0xe3, 0xd2, 0xeb, 0xf6, 0x34, 0x3b, 0xd8, 0x82, 0xc1, 0x2d, 0x3e, 0x56, 0x4a, 0xa1, 0x50, 0x5f,
				0xad, 0xd3, 0xba, 0x72, 0x94, 0x17, 0xcf, 0x8c, 0xbb, 0x39, 0xa4, 0x71, 0x8b, 0x27, 0x4a, 0xa5,
				0xd4, 0x42, 0xa5, 0xbe, 0x09, 0x69, 0x39, 0x09, 0x9a, 0x82, 0x22, 0x8b, 0x4f, 0xce, 0x6b, 0x8a,
				0x2d, 0x18, 0x45, 0x34, 0xd2, 0xb8, 0x9b, 0xb9, 0xd2, 0x08, 0x8d, 0x32, 0x11, 0x1a, 0xf5, 0x6d,
				0xc0, 0x72, 0x0e, 0xee, 0xe2, 0xbb, 0xf1, 0x0c, 0x6e, 0x3a, 0x98, 0x28, 0x13, 0xa1, 0x55, 0xa6,
				0x42, 0xab, 0xbe, 0x0b, 0x18, 0xfe, 0x05, 0xec, 0xb9, 0xbb, 0xee, 0xb6, 0x81, 0x16, 0x5a, 0xa5,
				0x13, 0xa6, 0xca, 0x4c, 0xe8, 0xd4, 0xcf, 0x03, 0xc2, 0xff, 0x02, 0x77, 0x57, 0x29, 0x15, 0x34,
				0x30, 0x81, 0x29, 0x74, 0xca, 0x5c, 0x98, 0xab, 0xf7, 0x2b, 0xd0, 0x0c, 0x80, 0x8a, 0xbc, 0x06,
				0x54, 0x5f, 0x1e, 0xcd, 0x3f, 0x88, 0x47, 0xd9, 0xaa, 0x7b, 0x77, 0x47, 0x1b, 0xf7, 0x80, 0x4e,
				0x91, 0x29, 0x74, 0xe8, 0x0c, 0xe9, 0xd0, 0xb9, 0x0f, 0xf9, 0x6a, 0xc6, 0xeb, 0x0f, 0x02, 0x83,
				0x5e, 0xe2, 0xfc, 0xc3, 0x18, 0x10, 0x30, 0xe0, 0x7e, 0x5f, 0x6a, 0x8d, 0xc4, 0x0d, 0x34, 0x68,
				0x8b, 0x4c, 0x06, 0xb2, 0x16, 0xed, 0x7c, 0x18, 0xf3, 0xf9, 0x85, 0xbc, 0x89, 0x04, 0xef, 0x09,
				0x97, 0x1f, 0x90, 0xfb, 0x73, 0x49, 0x85, 0x8e, 0x45, 0xda, 0x40, 0x0d, 0xcd, 0x90, 0xb3, 0x06,
				0x6d, 0xfd, 0xca, 0xa2, 0x76, 0xd8, 0xf8, 0x0f, 0xfa, 0xf9, 0x3b, 0xd2, 0xcc, 0xa3, 0x38, 0x52,
				0x99, 0xbb, 0x5e, 0x6a, 0x81, 0x14, 0xfb, 0x22, 0xd5, 0x0a, 0xa9, 0x88, 0xac, 0x52, 0x43, 0x85,
				0x36, 0x3e, 0x7c, 0x2b, 0xb7, 0x91, 0xe0, 0x57, 0xc2, 0x41, 0xa9, 0x8c, 0xf5, 0x70, 0x0a, 0x7f,
				0x7f, 0xc0, 0xa1, 0x16, 0x29, 0xf6, 0x4f, 0x27, 0xca, 0x02, 0x2d, 0x91, 0x12, 0x8a, 0x61, 0xf9,
				0x5f, 0xeb, 0xd5, 0x5b, 0xc2, 0xf9, 0xba, 0x3e, 0x9a, 0x77, 0xb7, 0xab, 0x28, 0x65, 0x35, 0x48,
				0xb6, 0x35, 0xb5, 0x88, 0x03, 0x8b, 0x3a, 0xe4, 0xa7, 0xcf, 0xb6, 0x91, 0xe0, 0x17, 0xc2, 0x79,
				0xc7, 0x7a, 0x38, 0xe3, 0x96, 0xab, 0x24, 0x00, 0x83, 0x0e, 0x81, 0x8c, 0x43, 0x93, 0x79, 0xe5,
				0xf3, 0x6b, 0xfb, 0x86, 0x55, 0x85, 0xe6, 0xa8, 0x8f, 0x87, 0x47, 0xe6, 0xab, 0x2e, 0x04, 0xcd,
				0x25, 0x98, 0xf4, 0x9e, 0x0d, 0xfa, 0x17, 0x29, 0x78, 0xbf, 0xd8, 0x01, 0xe2, 0xef, 0xb6, 0x72,
				0x07, 0x7c, 0xaa, 0x4f, 0x6b, 0xb6, 0x35, 0xbb, 0x0c, 0x7d, 0x4d, 0xdf, 0x1c, 0x0e, 0x1d, 0xeb,
				0x52, 0x11, 0x39, 0xac, 0x3f, 0xc5, 0x48, 0xd2, 0xb1, 0xc0, 0x35, 0x60, 0x5f, 0x7f, 0xc2, 0xc2,
				0x80, 0x51, 0x0c, 0xfc, 0x06, 0x04, 0xae, 0x2e, 0x69, 0x20, 0x8e, 0x50, 0xc4, 0x37, 0xc6, 0x7c,
				0x48, 0x72, 0x16, 0xab, 0xc9, 0x65, 0x6c, 0x24, 0xd0, 0x9b, 0xab, 0xc1, 0xcc, 0x5c, 0x24, 0x58,
				0xf1, 0x54, 0x29, 0x33, 0x54, 0x9a, 0x25, 0x3f, 0x0e, 0x95, 0xd2, 0x71, 0x6f, 0xd9, 0xbf, 0xcb,
				0x2a, 0x56, 0x92, 0x25, 0x8e, 0x4a, 0x8b, 0x89, 0xfa, 0xf9, 0x28, 0x8f, 0x4b, 0xf9, 0x71, 0x09,
				0x4f, 0xf4, 0xab, 0xf3, 0xed, 0xc2, 0x71, 0x2f, 0x87, 0x6e, 0xeb, 0x94, 0x42, 0x92, 0xb8, 0xe3,
				0x1f, 0xce, 0x5d, 0x81, 0x67, 0x8f, 0xa9, 0x7f, 0x5f, 0x18, 0x91, 0x60, 0x90, 0xcf, 0x01, 0x47,
				0x52, 0x9d, 0x7c, 0xf3, 0x25, 0x6d, 0xcd, 0xb4, 0x62, 0x5a, 0xd3, 0xd5, 0x32, 0xab, 0xfb, 0x17,
				0xdf, 0x03, 0xe6, 0xed, 0x77, 0xcc, 0x9b, 0x40, 0x7b, 0xb6, 0x3f, 0x58, 0xc7, 0x26, 0xda, 0x5e,
				0x7e, 0xc8, 0xf1, 0x0c, 0xc6, 0x4d, 0x54, 0x50, 0x49, 0xb2, 0x8f, 0x46, 0x99, 0x24, 0xa9, 0x2d,
				0x3e, 0x82, 0xa9, 0xd2, 0xae, 0x7c, 0xa7, 0x98, 0x23, 0x30, 0x04, 0x8e, 0x4d, 0x0f, 0x26, 0xf3,
				0xd8, 0x91, 0xc3, 0x64, 0x27, 0x51, 0x28, 0xa5, 0x24, 0x91, 0x34, 0xe9, 0xc1, 0xc5, 0x0c, 0xa6,
				0x30, 0x53, 0xba, 0xe0, 0xe7, 0xa7, 0x1a, 0x82, 0x63, 0x17, 0xdb, 0x73, 0x84, 0x1e, 0x1a, 0x3a,
				0x79, 0xea, 0x86, 0xbc, 0x55, 0xf2, 0xea, 0x15, 0x5d, 0xc7, 0x4d, 0x6a, 0x20, 0x30, 0x57, 0xe6,
				0xc1, 0xfb, 0x47, 0x0f, 0xc9, 0xb1, 0xd9, 0xa6, 0x97, 0xef, 0x86, 0x6f, 0x8d, 0x0d, 0x6c, 0x60,
				0x0d, 0x6b, 0x08, 0xb0, 0x82, 0x0f, 0xb0, 0x84, 0x06, 0x8d, 0x1e, 0x3b, 0x34, 0x10, 0xa6, 0x03,
				0xc5, 0x0c, 0xed, 0x58, 0xcd, 0xbd, 0x0a, 0x7b, 0x00, 0x06, 0xc7, 0x76, 0x47, 0xbe, 0x87, 0xf1,
				0xb3, 0xe9, 0x1e, 0xee, 0x21, 0x40, 0x18, 0x2c, 0xe6, 0xc8, 0xd0, 0x27, 0x10, 0xdb, 0xed, 0x24,
				0x91, 0x69, 0x4b, 0xe8, 0xfc, 0x71, 0x4f, 0xa6, 0xef, 0x61, 0x48, 0x4f, 0x0f, 0x16, 0x76, 0xe0,
				0x86, 0x7d, 0x38, 0x58, 0x67, 0xfa, 0xae, 0x06, 0xb2, 0x13, 0x0d, 0x44, 0x1b, 0x42, 0xeb, 0x73,
				0x1d, 0x39, 0xb4, 0xa7, 0x07, 0x01, 0x05, 0x93, 0xe5, 0xca, 0xc2, 0x36, 0xfb, 0x12, 0x29, 0xd8,
				0xcb, 0x6a, 0xac, 0x90, 0x32, 0xe3, 0x1b, 0xed, 0xad, 0x22, 0x34, 0x7e, 0x2c, 0x09, 0x87, 0x2a,
				0xda, 0xa7, 0x33, 0x8f, 0x9b, 0x30, 0x43, 0xae, 0x6c, 0xa6, 0xa6, 0x83, 0x5a, 0xcc, 0x28, 0x1f,
				0x63, 0xd5, 0x82, 0x55, 0xe5, 0xb5, 0x40, 0x0b, 0x5c, 0xd2, 0x8c, 0xf6, 0x8c, 0xf5, 0x10, 0x69,
				0x04, 0x76, 0x83, 0xdd, 0x99, 0x21, 0xc8, 0x29, 0xcd, 0x83, 0xaa, 0x72, 0x07, 0x2b, 0x08, 0x85,
				0xa7, 0x4c, 0x56, 0xf3, 0x80, 0x83, 0xec, 0x37, 0x0f, 0x8e, 0xca, 0x31, 0x0f, 0xf2, 0xa5, 0x0c,
				0x0b, 0x0a, 0xd6, 0xff, 0x03, 0xd9, 0xda, 0x6a, 0xbe, 0x8e, 0xf2, 0xa3, 0xfc, 0x00, 0x00, 0x00,
				0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			std::vector<BYTE> expected = {
				0xff, 0x00, 0x08, 0xff, 0x08, 0x0f, 0xff, 0x10, 0x17, 0xff, 0x18, 0x1f, 0xff, 0x20, 0x27, 0xff,
				0x29, 0x2f, 0xff, 0x31, 0x37, 0xff, 0x39, 0x3f, 0xff, 0x41, 0x47, 0xff, 0x4a, 0x4f, 0xff, 0x52,
				0x57, 0xff, 0x5a, 0x5f, 0xff, 0x62, 0x67, 0xff, 0x6a, 0x6f, 0xff, 0x73, 0x77, 0xff, 0x7b, 0x7f,
				0xff, 0x83, 0x87, 0xff, 0x8b, 0x8f, 0xff, 0x94, 0x97, 0xff, 0x9c, 0x9f, 0xff, 0xa4, 0xa7, 0xff,
				0xac, 0xaf, 0xff, 0xb4, 0xb7, 0xff, 0xbd, 0xbf, 0xff, 0xc5, 0xc7, 0xff, 0xcd, 0xcf, 0xff, 0xd5,
				0xd7, 0xff, 0xde, 0xdf, 0xff, 0xe6, 0xe7, 0xff, 0xee, 0xef, 0xff, 0xf6, 0xf7, 0xff, 0xff, 0xff,
				0xee, 0x1d, 0x07, 0xff, 0x1f, 0x08, 0xff, 0x26, 0x0f, 0xff, 0x2d, 0x17, 0xff, 0x34, 0x1f, 0xff,
				0x3b, 0x27, 0xff, 0x43, 0x2f, 0xff, 0x4a, 0x37, 0xff, 0x51, 0x3f, 0xff, 0x58, 0x47, 0xff, 0x60,
				0x4f, 0xff, 0x67, 0x57, 0xff, 0x6e, 0x5f, 0xff, 0x75, 0x67, 0xff, 0x7c, 0x6f, 0xff, 0x84, 0x77,
				0xff, 0x8b, 0x7f, 0xff, 0x92, 0x87, 0xff, 0x99, 0x8f, 0xff, 0xa1, 0x97, 0xff, 0xa8, 0x9f, 0xff,
				0xaf, 0xa7, 0xff, 0xb6, 0xaf, 0xff, 0xbd, 0xb7, 0xff, 0xc5, 0xbf, 0xff, 0xcc, 0xc7, 0xff, 0xd3,
				0xcf, 0xff, 0xda, 0xd7, 0xff, 0xe2, 0xdf, 0xff, 0xe9, 0xe7, 0xff, 0xf0, 0xef, 0xff, 0xf7, 0xf7,
				0xdf, 0x37, 0x07, 0xee, 0x3b, 0x07, 0xff, 0x3f, 0x08, 0xff, 0x45, 0x0f, 0xff, 0x4b, 0x17, 0xff,
				0x51, 0x1f, 0xff, 0x57, 0x27, 0xff, 0x5d, 0x2f, 0xff, 0x64, 0x37, 0xff, 0x6a, 0x3f, 0xff, 0x70,
				0x47, 0xff, 0x76, 0x4f, 0xff, 0x7c, 0x57, 0xff, 0x83, 0x5f, 0xff, 0x89, 0x67, 0xff, 0x8f, 0x6f,
				0xff, 0x95, 0x77, 0xff, 0x9b, 0x7f, 0xff, 0xa2, 0x87, 0xff, 0xa8, 0x8f, 0xff, 0xae, 0x97, 0xff,
				0xb4, 0x9f, 0xff, 0xba, 0xa7, 0xff, 0xc1, 0xaf, 0xff, 0xc7, 0xb7, 0xff, 0xcd, 0xbf, 0xff, 0xd3,
				0xc7, 0xff, 0xd9, 0xcf, 0xff, 0xe0, 0xd7, 0xff, 0xe6, 0xdf, 0xff, 0xec, 0xe7, 0xff, 0xf2, 0xef,
				0xd0, 0x4d, 0x06, 0xdf, 0x53, 0x07, 0xee, 0x58, 0x07, 0xff, 0x5f, 0x08, 0xff, 0x64, 0x0f, 0xff,
				0x69, 0x17, 0xff, 0x6e, 0x1f, 0xff, 0x73, 0x27, 0xff, 0x78, 0x2f, 0xff, 0x7d, 0x37, 0xff, 0x83,
				0x3f, 0xff, 0x88, 0x47, 0xff, 0x8d, 0x4f, 0xff, 0x92, 0x57, 0xff, 0x97, 0x5f, 0xff, 0x9c, 0x67,
				0xff, 0xa2, 0x6f, 0xff, 0xa7, 0x77, 0xff, 0xac, 0x7f, 0xff, 0xb1, 0x87, 0xff, 0xb6, 0x8f, 0xff,
				0xbb, 0x97, 0xff, 0xc1, 0x9f, 0xff, 0xc6, 0xa7, 0xff, 0xcb, 0xaf, 0xff, 0xd0, 0xb7, 0xff, 0xd5,
				0xbf, 0xff, 0xda, 0xc7, 0xff, 0xe0, 0xcf, 0xff, 0xe5, 0xd7, 0xff, 0xea, 0xdf, 0xff, 0xef, 0xe7,
				0xc1, 0x60, 0x05, 0xd0, 0x67, 0x05, 0xdf, 0x6f, 0x06, 0xee, 0x76, 0x06, 0xff, 0x7f, 0x07, 0xff,
				0x83, 0x0f, 0xff, 0x87, 0x17, 0xff, 0x8b, 0x1f, 0xff, 0x8f, 0x27, 0xff, 0x93, 0x2e, 0xff, 0x97,
				0x37, 0xff, 0x9b, 0x3f, 0xff, 0xa0, 0x47, 0xff, 0xa4, 0x4e, 0xff, 0xa8, 0x57, 0xff, 0xac, 0x5f,
				0xff, 0xb0, 0x67, 0xff, 0xb4, 0x6e, 0xff, 0xb8, 0x77, 0xff, 0xbc, 0x7f, 0xff, 0xc1, 0x87, 0xff,
				0xc5, 0x8e, 0xff, 0xc9, 0x97, 0xff, 0xcd, 0x9f, 0xff, 0xd1, 0xa6, 0xff, 0xd5, 0xae, 0xff, 0xd9,
				0xb7, 0xff, 0xdd, 0xbf, 0xff, 0xe2, 0xc6, 0xff, 0xe6, 0xce, 0xff, 0xea, 0xd7, 0xff, 0xee, 0xdf,
				0xb3, 0x6f, 0x04, 0xc1, 0x78, 0x05, 0xd0, 0x81, 0x05, 0xdf, 0x8b, 0x06, 0xee, 0x94, 0x06, 0xff,
				0x9f, 0x07, 0xff, 0xa2, 0x0f, 0xff, 0xa5, 0x17, 0xff, 0xa8, 0x1f, 0xff, 0xab, 0x27, 0xff, 0xae,
				0x2e, 0xff, 0xb1, 0x37, 0xff, 0xb4, 0x3f, 0xff, 0xb7, 0x47, 0xff, 0xba, 0x4e, 0xff, 0xbd, 0x57,
				0xff, 0xc1, 0x5f, 0xff, 0xc4, 0x67, 0xff, 0xc7, 0x6e, 0xff, 0xca, 0x77, 0xff, 0xcd, 0x7f, 0xff,
				0xd0, 0x87, 0xff, 0xd3, 0x8e, 0xff, 0xd6, 0x97, 0xff, 0xd9, 0x9f, 0xff, 0xdc, 0xa6, 0xff, 0xe0,
				0xae, 0xff, 0xe3, 0xb7, 0xff, 0xe6, 0xbf, 0xff, 0xe9, 0xc6, 0xff, 0xec, 0xce, 0xff, 0xef, 0xd7,
				0xa5, 0x7c, 0x04, 0xb3, 0x86, 0x04, 0xc1, 0x90, 0x05, 0xd0, 0x9b, 0x05, 0xdf, 0xa7, 0x06, 0xee,
				0xb2, 0x06, 0xff, 0xbf, 0x07, 0xff, 0xc1, 0x0f, 0xff, 0xc3, 0x17, 0xff, 0xc5, 0x1f, 0xff, 0xc7,
				0x27, 0xff, 0xc9, 0x2e, 0xff, 0xcb, 0x37, 0xff, 0xcd, 0x3f, 0xff, 0xcf, 0x47, 0xff, 0xd1, 0x4e,
				0xff, 0xd3, 0x57, 0xff, 0xd5, 0x5f, 0xff, 0xd7, 0x67, 0xff, 0xd9, 0x6e, 0xff, 0xdb, 0x77, 0xff,
				0xdd, 0x7f, 0xff, 0xe0, 0x87, 0xff, 0xe2, 0x8e, 0xff, 0xe4, 0x97, 0xff, 0xe6, 0x9f, 0xff, 0xe8,
				0xa6, 0xff, 0xea, 0xae, 0xff, 0xec, 0xb7, 0xff, 0xee, 0xbf, 0xff, 0xf0, 0xc6, 0xff, 0xf2, 0xce,
				0x98, 0x85, 0x04, 0xa5, 0x91, 0x04, 0xb3, 0x9c, 0x04, 0xc1, 0xa9, 0x05, 0xd0, 0xb5, 0x05, 0xdf,
				0xc3, 0x06, 0xee, 0xd0, 0x06, 0xff, 0xdf, 0x07, 0xff, 0xe0, 0x0f, 0xff, 0xe1, 0x17, 0xff, 0xe2,
				0x1f, 0xff, 0xe3, 0x27, 0xff, 0xe4, 0x2e, 0xff, 0xe5, 0x37, 0xff, 0xe6, 0x3f, 0xff, 0xe7, 0x47,
				0xff, 0xe8, 0x4e, 0xff, 0xe9, 0x57, 0xff, 0xea, 0x5f, 0xff, 0xeb, 0x67, 0xff, 0xec, 0x6e, 0xff,
				0xed, 0x77, 0xff, 0xee, 0x7f, 0xff, 0xef, 0x87, 0xff, 0xf0, 0x8e, 0xff, 0xf1, 0x97, 0xff, 0xf2,
				0x9f, 0xff, 0xf3, 0xa6, 0xff, 0xf4, 0xae, 0xff, 0xf5, 0xb7, 0xff, 0xf6, 0xbf, 0xff, 0xf7, 0xc6,
				0x8c, 0x8c, 0x03, 0x98, 0x98, 0x03, 0xa5, 0xa5, 0x03, 0xb3, 0xb3, 0x04, 0xc1, 0xc1, 0x04, 0xd0,
				0xd0, 0x04, 0xdf, 0xdf, 0x05, 0xee, 0xee, 0x05, 0xff, 0xff, 0x06, 0xff, 0xff, 0x0e, 0xff, 0xff,
				0x16, 0xff, 0xff, 0x1e, 0xff, 0xff, 0x26, 0xff, 0xff, 0x2e, 0xff, 0xff, 0x36, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0xff, 0xff, 0x56, 0xff, 0xff, 0x5e, 0xff, 0xff, 0x66, 0xff,
				0xff, 0x6e, 0xff, 0xff, 0x76, 0xff, 0xff, 0x7e, 0xff, 0xff, 0x86, 0xff, 0xff, 0x8e, 0xff, 0xff,
				0x96, 0xff, 0xff, 0x9e, 0xff, 0xff, 0xa6, 0xff, 0xff, 0xae, 0xff, 0xff, 0xb6, 0xff, 0xff, 0xbe,
				0x70, 0x80, 0x03, 0x7b, 0x8c, 0x03, 0x86, 0x98, 0x03, 0x91, 0xa5, 0x03, 0x9d, 0xb3, 0x04, 0xa9,
				0xc1, 0x04, 0xb6, 0xd0, 0x04, 0xc4, 0xdf, 0x05, 0xd1, 0xee, 0x05, 0xe0, 0xff, 0x06, 0xe1, 0xff,
				0x0e, 0xe2, 0xff, 0x16, 0xe3, 0xff, 0x1e, 0xe4, 0xff, 0x26, 0xe4, 0xff, 0x2e, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0xe8, 0xff, 0x46, 0xe8, 0xff, 0x4e, 0xea, 0xff, 0x56, 0xeb, 0xff, 0x5e, 0xec,
				0xff, 0x66, 0xec, 0xff, 0x6e, 0xee, 0xff, 0x76, 0xef, 0xff, 0x7e, 0xf0, 0xff, 0x86, 0xf0, 0xff,
				0x8e, 0xf2, 0xff, 0x96, 0xf3, 0xff, 0x9e, 0xf3, 0xff, 0xa6, 0xf4, 0xff, 0xae, 0xf6, 0xff, 0xb6,
				0x58, 0x75, 0x02, 0x60, 0x80, 0x03, 0x69, 0x8c, 0x03, 0x73, 0x98, 0x03, 0x7c, 0xa5, 0x03, 0x87,
				0xb3, 0x04, 0x91, 0xc1, 0x04, 0x9c, 0xd0, 0x04, 0xa8, 0xdf, 0x05, 0xb3, 0xee, 0x05, 0xc0, 0xff,
				0x06, 0xc2, 0xff, 0x0e, 0xc4, 0xff, 0x16, 0xc6, 0xff, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0xce, 0xff, 0x3e, 0xd0, 0xff, 0x46, 0xd2, 0xff, 0x4e, 0xd4, 0xff, 0x56, 0xd6,
				0xff, 0x5e, 0xd8, 0xff, 0x66, 0xda, 0xff, 0x6e, 0xdc, 0xff, 0x76, 0xde, 0xff, 0x7e, 0xe0, 0xff,
				0x86, 0xe2, 0xff, 0x8e, 0xe4, 0xff, 0x96, 0xe6, 0xff, 0x9e, 0xe8, 0xff, 0xa6, 0xea, 0xff, 0xae,
				0x42, 0x6a, 0x02, 0x49, 0x75, 0x02, 0x50, 0x80, 0x02, 0x58, 0x8c, 0x02, 0x5f, 0x98, 0x02, 0x68,
				0xa5, 0x03, 0x70, 0xb3, 0x03, 0x79, 0xc1, 0x03, 0x82, 0xd0, 0x04, 0x8c, 0xdf, 0x04, 0x95, 0xee,
				0x04, 0xa0, 0xff, 0x05, 0xa3, 0xff, 0x0d, 0xa6, 0xff, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0xaf, 0xff, 0x2d, 0xb2, 0xff, 0x35, 0xb5, 0xff, 0x3d, 0xb8, 0xff, 0x45, 0xbb, 0xff, 0x4d, 0xbe,
				0xff, 0x55, 0xc1, 0xff, 0x5d, 0xc4, 0xff, 0x65, 0xc7, 0xff, 0x6d, 0xca, 0xff, 0x75, 0xcd, 0xff,
				0x7d, 0xd1, 0xff, 0x86, 0xd4, 0xff, 0x8e, 0xd7, 0xff, 0x96, 0xda, 0xff, 0x9e, 0xdd, 0xff, 0xa6,
				0x30, 0x5f, 0x01, 0x35, 0x6a, 0x02, 0x3a, 0x75, 0x02, 0x40, 0x80, 0x02, 0x46, 0x8c, 0x02, 0x4c,
				0x98, 0x02, 0x53, 0xa5, 0x03, 0x5a, 0xb3, 0x03, 0x61, 0xc1, 0x03, 0x68, 0xd0, 0x04, 0x70, 0xdf,
				0x04, 0x77, 0xee, 0x04, 0x80, 0xff, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x90, 0xff, 0x25, 0x94, 0xff, 0x2d, 0x98, 0xff, 0x35, 0x9c, 0xff, 0x3d, 0xa0, 0xff, 0x45, 0xa4,
				0xff, 0x4d, 0xa8, 0xff, 0x55, 0xad, 0xff, 0x5d, 0xb1, 0xff, 0x65, 0xb5, 0xff, 0x6d, 0xb9, 0xff,
				0x75, 0xbd, 0xff, 0x7d, 0xc1, 0xff, 0x86, 0xc5, 0xff, 0x8e, 0xc9, 0xff, 0x96, 0xcd, 0xff, 0x9e,
				0x20, 0x55, 0x01, 0x24, 0x5f, 0x01, 0x27, 0x6a, 0x02, 0x2c, 0x75, 0x02, 0x30, 0x80, 0x02, 0x34,
				0x8c, 0x02, 0x39, 0x98, 0x02, 0x3e, 0xa5, 0x03, 0x43, 0xb3, 0x03, 0x48, 0xc1, 0x03, 0x4e, 0xd0,
				0x04, 0x54, 0xdf, 0x04, 0x59, 0xee, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xff, 0x15,
				0x6f, 0xff, 0x1d, 0x74, 0xff, 0x25, 0x79, 0xff, 0x2d, 0x7e, 0xff, 0x35, 0x83, 0xff, 0x3d, 0x89,
				0xff, 0x45, 0x8e, 0xff, 0x4d, 0x93, 0xff, 0x55, 0x98, 0xff, 0x5d, 0x9d, 0xff, 0x65, 0xa2, 0xff,
				0x6d, 0xa7, 0xff, 0x75, 0xac, 0xff, 0x7d, 0xb2, 0xff, 0x86, 0xb7, 0xff, 0x8e, 0xbc, 0xff, 0x96,
				0x13, 0x4c, 0x01, 0x15, 0x55, 0x01, 0x18, 0x5f, 0x01, 0x1a, 0x6a, 0x02, 0x1d, 0x75, 0x02, 0x20,
				0x80, 0x02, 0x23, 0x8c, 0x02, 0x26, 0x98, 0x02, 0x29, 0xa5, 0x03, 0x2d, 0xb3, 0x03, 0x30, 0xc1,
				0x03, 0x34, 0xd0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xff, 0x0d,
				0x4c, 0xff, 0x15, 0x52, 0xff, 0x1d, 0x58, 0xff, 0x25, 0x5e, 0xff, 0x2d, 0x64, 0xff, 0x35, 0x6b,
				0xff, 0x3d, 0x71, 0xff, 0x45, 0x77, 0xff, 0x4d, 0x7d, 0xff, 0x55, 0x83, 0xff, 0x5d, 0x89, 0xff,
				0x65, 0x90, 0xff, 0x6d, 0x96, 0xff, 0x75, 0x9c, 0xff, 0x7d, 0xa2, 0xff, 0x86, 0xa8, 0xff, 0x8e,
				0x08, 0x43, 0x01, 0x09, 0x4c, 0x01, 0x0a, 0x55, 0x01, 0x0c, 0x5f, 0x01, 0x0d, 0x6a, 0x01, 0x0e,
				0x75, 0x01, 0x10, 0x80, 0x02, 0x11, 0x8c, 0x02, 0x13, 0x98, 0x02, 0x14, 0xa5, 0x02, 0x16, 0xb3,
				0x02, 0x18, 0xc1, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1d, 0xee, 0x03, 0x20, 0xff, 0x04,
				0x27, 0xff, 0x0c, 0x2e, 0xff, 0x14, 0x35, 0xff, 0x1c, 0x3c, 0xff, 0x24, 0x43, 0xff, 0x2c, 0x4b,
				0xff, 0x34, 0x52, 0xff, 0x3c, 0x59, 0xff, 0x44, 0x60, 0xff, 0x4c, 0x67, 0xff, 0x54, 0x6f, 0xff,
				0x5d, 0x76, 0xff, 0x65, 0x7d, 0xff, 0x6d, 0x84, 0xff, 0x75, 0x8b, 0xff, 0x7d, 0x93, 0xff, 0x85,
				0x00, 0x3b, 0x00, 0x01, 0x43, 0x00, 0x01, 0x4c, 0x00, 0x01, 0x55, 0x00, 0x01, 0x5f, 0x00, 0x01,
				0x6a, 0x00, 0x01, 0x75, 0x00, 0x02, 0x80, 0x00, 0x02, 0x8c, 0x00, 0x02, 0x98, 0x00, 0x02, 0xa5,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xdf, 0x00, 0x03, 0xee, 0x00,
				0x04, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xff, 0x18, 0x24, 0xff, 0x20, 0x2c,
				0xff, 0x29, 0x34, 0xff, 0x31, 0x3c, 0xff, 0x39, 0x44, 0xff, 0x41, 0x4c, 0xff, 0x4a, 0x54, 0xff,
				0x52, 0x5d, 0xff, 0x5a, 0x65, 0xff, 0x62, 0x6d, 0xff, 0x6a, 0x75, 0xff, 0x73, 0x7d, 0xff, 0x7b,
				0x00, 0x34, 0x06, 0x00, 0x3b, 0x07, 0x01, 0x43, 0x08, 0x01, 0x4c, 0x09, 0x01, 0x55, 0x0a, 0x01,
				0x5f, 0x0b, 0x01, 0x6a, 0x0c, 0x01, 0x75, 0x0e, 0x02, 0x80, 0x0f, 0x02, 0x8c, 0x11, 0x02, 0x98,
				0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc1, 0x17, 0x03, 0xd0, 0x19, 0x03, 0xdf, 0x1b,
				0x03, 0xee, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0xff, 0x2d, 0x1c, 0xff, 0x34, 0x24,
				0xff, 0x3b, 0x2c, 0xff, 0x43, 0x34, 0xff, 0x4a, 0x3c, 0xff, 0x51, 0x44, 0xff, 0x58, 0x4c, 0xff,
				0x60, 0x54, 0xff, 0x67, 0x5d, 0xff, 0x6e, 0x65, 0xff, 0x75, 0x6d, 0xff, 0x7c, 0x75, 0xff, 0x84,
				0x00, 0x2c, 0x0b, 0x00, 0x34, 0x0c, 0x00, 0x3b, 0x0e, 0x00, 0x43, 0x10, 0x00, 0x4c, 0x12, 0x01,
				0x55, 0x15, 0x01, 0x5f, 0x17, 0x01, 0x6a, 0x1a, 0x01, 0x75, 0x1c, 0x01, 0x80, 0x1f, 0x01, 0x8c,
				0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xb3, 0x2c, 0x02, 0xc1, 0x2f, 0x02, 0xd0, 0x33,
				0x02, 0xdf, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0xff, 0x45, 0x13, 0xff, 0x4b, 0x1b,
				0xff, 0x51, 0x23, 0xff, 0x57, 0x2b, 0xff, 0x5d, 0x33, 0xff, 0x64, 0x3b, 0xff, 0x6a, 0x44, 0xff,
				0x70, 0x4c, 0xff, 0x76, 0x54, 0xff, 0x7c, 0x5c, 0xff, 0x83, 0x64, 0xff, 0x89, 0x6c, 0xff, 0x8f,
				0x00, 0x26, 0x0e, 0x00, 0x2c, 0x10, 0x00, 0x34, 0x13, 0x00, 0x3b, 0x16, 0x00, 0x43, 0x19, 0x00,
				0x4c, 0x1c, 0x01, 0x55, 0x20, 0x01, 0x5f, 0x23, 0x01, 0x6a, 0x27, 0x01, 0x75, 0x2b, 0x01, 0x80,
				0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
				0xff, 0x69, 0x1b, 0xff, 0x6e, 0x23, 0xff, 0x73, 0x2b, 0xff, 0x78, 0x33, 0xff, 0x7d, 0x3b, 0xff,
				0x83, 0x44, 0xff, 0x88, 0x4c, 0xff, 0x8d, 0x54, 0xff, 0x92, 0x5c, 0xff, 0x97, 0x64, 0xff, 0x9c,
				0x00, 0x20, 0x0f, 0x00, 0x26, 0x13, 0x00, 0x2c, 0x16, 0x00, 0x34, 0x19, 0x00, 0x3b, 0x1d, 0x00,
				0x43, 0x21, 0x00, 0x4c, 0x26, 0x01, 0x55, 0x2a, 0x01, 0x5f, 0x2f, 0x01, 0x6a, 0x34, 0x01, 0x75,
				0x3a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b,
				0xff, 0x83, 0x13, 0xff, 0x87, 0x1b, 0xff, 0x8b, 0x23, 0xff, 0x8f, 0x2b, 0xff, 0x93, 0x33, 0xff,
				0x97, 0x3b, 0xff, 0x9b, 0x44, 0xff, 0xa0, 0x4c, 0xff, 0xa4, 0x54, 0xff, 0xa8, 0x5c, 0xff, 0xac,
				0x00, 0x1a, 0x10, 0x00, 0x20, 0x14, 0x00, 0x26, 0x17, 0x00, 0x2c, 0x1b, 0x00, 0x34, 0x20, 0x00,
				0x3b, 0x25, 0x00, 0x43, 0x2a, 0x00, 0x4c, 0x2f, 0x01, 0x55, 0x35, 0x01, 0x5f, 0x3b, 0x01, 0x6a,
				0x42, 0x01, 0x75, 0x48, 0x01, 0x80, 0x50, 0x01, 0x8c, 0x57, 0x01, 0x98, 0x5f, 0x01, 0xa5, 0x67,
				0x02, 0xb3, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xdf, 0x8b, 0x02, 0xee, 0x94, 0x03,
				0xff, 0x9f, 0x0b, 0xff, 0xa2, 0x13, 0xff, 0xa5, 0x1b, 0xff, 0xa8, 0x23, 0xff, 0xab, 0x2b, 0xff,
				0xae, 0x33, 0xff, 0xb1, 0x3b, 0xff, 0xb4, 0x44, 0xff, 0xb7, 0x4c, 0xff, 0xba, 0x54, 0xff, 0xbd,
				0x00, 0x15, 0x10, 0x00, 0x1a, 0x13, 0x00, 0x20, 0x18, 0x00, 0x26, 0x1c, 0x00, 0x2c, 0x21, 0x00,
				0x34, 0x26, 0x00, 0x3b, 0x2c, 0x00, 0x43, 0x32, 0x00, 0x4c, 0x39, 0x00, 0x55, 0x40, 0x00, 0x5f,
				0x47, 0x00, 0x6a, 0x4f, 0x00, 0x75, 0x57, 0x01, 0x80, 0x60, 0x01, 0x8c, 0x69, 0x01, 0x98, 0x72,
				0x01, 0xa5, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd0, 0x9b, 0x01, 0xdf, 0xa7, 0x01,
				0xee, 0xb2, 0x02, 0xff, 0xbf, 0x0a, 0xff, 0xc1, 0x12, 0xff, 0xc3, 0x1a, 0xff, 0xc5, 0x22, 0xff,
				0xc7, 0x2a, 0xff, 0xc9, 0x32, 0xff, 0xcb, 0x3b, 0xff, 0xcd, 0x43, 0xff, 0xcf, 0x4b, 0xff, 0xd1,
				0x00, 0x10, 0x0e, 0x00, 0x15, 0x12, 0x00, 0x1a, 0x17, 0x00, 0x20, 0x1c, 0x00, 0x26, 0x21, 0x00,
				0x2c, 0x27, 0x00, 0x34, 0x2d, 0x00, 0x3b, 0x34, 0x00, 0x43, 0x3b, 0x00, 0x4c, 0x43, 0x00, 0x55,
				0x4b, 0x00, 0x5f, 0x53, 0x00, 0x6a, 0x5c, 0x00, 0x75, 0x66, 0x01, 0x80, 0x70, 0x01, 0x8c, 0x7a,
				0x01, 0x98, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xa9, 0x01, 0xd0, 0xb5, 0x01,
				0xdf, 0xc3, 0x01, 0xee, 0xd0, 0x02, 0xff, 0xdf, 0x0a, 0xff, 0xe0, 0x12, 0xff, 0xe1, 0x1a, 0xff,
				0xe2, 0x22, 0xff, 0xe3, 0x2a, 0xff, 0xe4, 0x32, 0xff, 0xe5, 0x3b, 0xff, 0xe6, 0x43, 0xff, 0xe7,
				0x00, 0x0d, 0x0d, 0x00, 0x10, 0x10, 0x00, 0x15, 0x15, 0x00, 0x1a, 0x1a, 0x00, 0x20, 0x20, 0x00,
				0x26, 0x26, 0x00, 0x2c, 0x2c, 0x00, 0x34, 0x34, 0x00, 0x3b, 0x3b, 0x00, 0x43, 0x43, 0x00, 0x4c,
				0x4c, 0x00, 0x55, 0x55, 0x00, 0x5f, 0x5f, 0x00, 0x6a, 0x6a, 0x00, 0x75, 0x75, 0x01, 0x80, 0x80,
				0x01, 0x8c, 0x8c, 0x01, 0x98, 0x98, 0x01, 0xa5, 0xa5, 0x01, 0xb3, 0xb3, 0x01, 0xc1, 0xc1, 0x01,
				0xd0, 0xd0, 0x01, 0xdf, 0xdf, 0x01, 0xee, 0xee, 0x02, 0xff, 0xff, 0x0a, 0xff, 0xff, 0x12, 0xff,
				0xff, 0x1a, 0xff, 0xff, 0x22, 0xff, 0xff, 0x2a, 0xff, 0xff, 0x32, 0xff, 0xff, 0x3b, 0xff, 0xff,
				0x00, 0x08, 0x09, 0x00, 0x0b, 0x0d, 0x00, 0x0e, 0x10, 0x00, 0x12, 0x15, 0x00, 0x17, 0x1a, 0x00,
				0x1c, 0x20, 0x00, 0x21, 0x26, 0x00, 0x27, 0x2c, 0x00, 0x2d, 0x34, 0x00, 0x34, 0x3b, 0x00, 0x3b,
				0x43, 0x00, 0x43, 0x4c, 0x00, 0x4b, 0x55, 0x00, 0x54, 0x5f, 0x00, 0x5d, 0x6a, 0x00, 0x66, 0x75,
				0x00, 0x70, 0x80, 0x00, 0x7b, 0x8c, 0x00, 0x86, 0x98, 0x00, 0x91, 0xa5, 0x00, 0x9d, 0xb3, 0x00,
				0xa9, 0xc1, 0x00, 0xb6, 0xd0, 0x00, 0xc4, 0xdf, 0x00, 0xd1, 0xee, 0x01, 0xe0, 0xff, 0x09, 0xe1,
				0xff, 0x11, 0xe2, 0xff, 0x19, 0xe3, 0xff, 0x21, 0xe4, 0xff, 0x29, 0xe4, 0xff, 0x32, 0xe6, 0xff,
				0x00, 0x04, 0x06, 0x00, 0x07, 0x09, 0x00, 0x09, 0x0d, 0x00, 0x0c, 0x10, 0x00, 0x10, 0x15, 0x00,
				0x13, 0x1a, 0x00, 0x18, 0x20, 0x00, 0x1c, 0x26, 0x00, 0x21, 0x2c, 0x00, 0x27, 0x34, 0x00, 0x2c,
				0x3b, 0x00, 0x33, 0x43, 0x00, 0x39, 0x4c, 0x00, 0x40, 0x55, 0x00, 0x48, 0x5f, 0x00, 0x4f, 0x6a,
				0x00, 0x58, 0x75, 0x00, 0x60, 0x80, 0x00, 0x69, 0x8c, 0x00, 0x73, 0x98, 0x00, 0x7c, 0xa5, 0x00,
				0x87, 0xb3, 0x00, 0x91, 0xc1, 0x00, 0x9c, 0xd0, 0x00, 0xa8, 0xdf, 0x00, 0xb3, 0xee, 0x01, 0xc0,
				0xff, 0x09, 0xc2, 0xff, 0x11, 0xc4, 0xff, 0x19, 0xc6, 0xff, 0x21, 0xc8, 0xff, 0x29, 0xca, 0xff,
				0x00, 0x02, 0x04, 0x00, 0x04, 0x06, 0x00, 0x05, 0x09, 0x00, 0x08, 0x0d, 0x00, 0x0a, 0x10, 0x00,
				0x0d, 0x15, 0x00, 0x10, 0x1a, 0x00, 0x14, 0x20, 0x00, 0x17, 0x26, 0x00, 0x1c, 0x2c, 0x00, 0x20,
				0x34, 0x00, 0x25, 0x3b, 0x00, 0x2a, 0x43, 0x00, 0x30, 0x4c, 0x00, 0x35, 0x55, 0x00, 0x3c, 0x5f,
				0x00, 0x42, 0x6a, 0x00, 0x49, 0x75, 0x00, 0x50, 0x80, 0x00, 0x58, 0x8c, 0x00, 0x5f, 0x98, 0x00,
				0x68, 0xa5, 0x00, 0x70, 0xb3, 0x00, 0x79, 0xc1, 0x00, 0x82, 0xd0, 0x00, 0x8c, 0xdf, 0x00, 0x95,
				0xee, 0x01, 0xa0, 0xff, 0x09, 0xa3, 0xff, 0x11, 0xa6, 0xff, 0x19, 0xa9, 0xff, 0x21, 0xac, 0xff,
				0x00, 0x01, 0x02, 0x00, 0x02, 0x04, 0x00, 0x03, 0x06, 0x00, 0x04, 0x09, 0x00, 0x06, 0x0d, 0x00,
				0x08, 0x10, 0x00, 0x0a, 0x15, 0x00, 0x0d, 0x1a, 0x00, 0x10, 0x20, 0x00, 0x13, 0x26, 0x00, 0x16,
				0x2c, 0x00, 0x1a, 0x34, 0x00, 0x1d, 0x3b, 0x00, 0x22, 0x43, 0x00, 0x26, 0x4c, 0x00, 0x2b, 0x55,
				0x00, 0x30, 0x5f, 0x00, 0x35, 0x6a, 0x00, 0x3a, 0x75, 0x00, 0x40, 0x80, 0x00, 0x46, 0x8c, 0x00,
				0x4c, 0x98, 0x00, 0x53, 0xa5, 0x00, 0x5a, 0xb3, 0x00, 0x61, 0xc1, 0x00, 0x68, 0xd0, 0x00, 0x70,
				0xdf, 0x00, 0x77, 0xee, 0x01, 0x80, 0xff, 0x09, 0x84, 0xff, 0x11, 0x88, 0xff, 0x19, 0x8c, 0xff,
				0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x02, 0x06, 0x00, 0x03, 0x09, 0x00,
				0x04, 0x0d, 0x00, 0x06, 0x10, 0x00, 0x08, 0x15, 0x00, 0x09, 0x1a, 0x00, 0x0c, 0x20, 0x00, 0x0e,
				0x26, 0x00, 0x10, 0x2c, 0x00, 0x13, 0x34, 0x00, 0x16, 0x3b, 0x00, 0x19, 0x43, 0x00, 0x1c, 0x4c,
				0x00, 0x20, 0x55, 0x00, 0x24, 0x5f, 0x00, 0x27, 0x6a, 0x00, 0x2c, 0x75, 0x00, 0x30, 0x80, 0x00,
				0x34, 0x8c, 0x00, 0x39, 0x98, 0x00, 0x3e, 0xa5, 0x00, 0x43, 0xb3, 0x00, 0x48, 0xc1, 0x00, 0x4e,
				0xd0, 0x00, 0x54, 0xdf, 0x00, 0x59, 0xee, 0x00, 0x60, 0xff, 0x08, 0x65, 0xff, 0x10, 0x6a, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x01, 0x04, 0x00, 0x01, 0x06, 0x00,
				0x02, 0x09, 0x00, 0x03, 0x0d, 0x00, 0x04, 0x10, 0x00, 0x05, 0x15, 0x00, 0x06, 0x1a, 0x00, 0x08,
				0x20, 0x00, 0x09, 0x26, 0x00, 0x0b, 0x2c, 0x00, 0x0d, 0x34, 0x00, 0x0e, 0x3b, 0x00, 0x11, 0x43,
				0x00, 0x13, 0x4c, 0x00, 0x15, 0x55, 0x00, 0x18, 0x5f, 0x00, 0x1a, 0x6a, 0x00, 0x1d, 0x75, 0x00,
				0x20, 0x80, 0x00, 0x23, 0x8c, 0x00, 0x26, 0x98, 0x00, 0x29, 0xa5, 0x00, 0x2d, 0xb3, 0x00, 0x30,
				0xc1, 0x00, 0x34, 0xd0, 0x00, 0x38, 0xdf, 0x00, 0x3b, 0xee, 0x00, 0x40, 0xff, 0x08, 0x46, 0xff,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00,
				0x00, 0x06, 0x00, 0x01, 0x09, 0x00, 0x01, 0x0d, 0x00, 0x02, 0x10, 0x00, 0x02, 0x15, 0x00, 0x03,
				0x1a, 0x00, 0x04, 0x20, 0x00, 0x04, 0x26, 0x00, 0x05, 0x2c, 0x00, 0x06, 0x34, 0x00, 0x07, 0x3b,
				0x00, 0x08, 0x43, 0x00, 0x09, 0x4c, 0x00, 0x0a, 0x55, 0x00, 0x0c, 0x5f, 0x00, 0x0d, 0x6a, 0x00,
				0x0e, 0x75, 0x00, 0x10, 0x80, 0x00, 0x11, 0x8c, 0x00, 0x13, 0x98, 0x00, 0x14, 0xa5, 0x00, 0x16,
				0xb3, 0x00, 0x18, 0xc1, 0x00, 0x1a, 0xd0, 0x00, 0x1c, 0xdf, 0x00, 0x1d, 0xee, 0x00, 0x20, 0xff
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error);

			// Test the metadata calculation
			Assert::AreEqual((UINT)32, imageDescriptor.width);
			Assert::AreEqual((UINT)32, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGB8 == imageDescriptor.format, L"Image format is incorrect");

			Assert::AreEqual(expected.size(), actual.size(), L"Output vector size is incorrect");
			for (int i = 0; i < expected.size(); i++)
			{
				Assert::AreEqual(expected[i], actual[i]);
			}
		}

		TEST_METHOD(PngSuite_f99n0g04)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x04, 0x00, 0x00, 0x00, 0x00, 0x93, 0xe1, 0xc8,
				0x29, 0x00, 0x00, 0x01, 0x71, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x75, 0x51, 0xb1, 0x4e, 0x02,
				0x41, 0x10, 0xdd, 0xe5, 0x8e, 0x64, 0x8f, 0x6a, 0x17, 0xb4, 0x38, 0xbb, 0xbb, 0x52, 0x1b, 0x34,
				0x54, 0x56, 0x8a, 0x89, 0xb5, 0x89, 0x89, 0x3f, 0x20, 0xc6, 0x1f, 0x30, 0x8a, 0x5f, 0x40, 0xfc,
				0x02, 0x3d, 0xfd, 0x02, 0xa1, 0xb0, 0x33, 0x01, 0x09, 0xb1, 0x32, 0x46, 0x8e, 0xc4, 0xc2, 0xc2,
				0x82, 0x5d, 0xec, 0xac, 0xdc, 0xdd, 0x0a, 0xd6, 0x82, 0xac, 0xb3, 0x60, 0x30, 0x41, 0x9d, 0xbb,
				0xcc, 0xed, 0xed, 0xcc, 0xbc, 0x79, 0x6f, 0xc6, 0x43, 0x73, 0xe6, 0x4f, 0xbc, 0x57, 0xa6, 0xc8,
				0xf6, 0x9f, 0x67, 0xb7, 0x0b, 0x7b, 0x27, 0x60, 0x07, 0x9b, 0xee, 0x8c, 0x5d, 0x7c, 0x37, 0x66,
				0x90, 0xa1, 0x44, 0x17, 0x72, 0x32, 0x70, 0xb1, 0x15, 0x47, 0x0c, 0x2c, 0x1f, 0x97, 0x5c, 0x14,
				0x60, 0xca, 0x4b, 0x61, 0x18, 0x04, 0x01, 0x42, 0x26, 0xfb, 0xe6, 0x40, 0xcb, 0x79, 0xc6, 0x30,
				0x94, 0x20, 0x1b, 0xc9, 0x7b, 0x97, 0x73, 0x98, 0x34, 0xda, 0x69, 0xaf, 0x9f, 0x76, 0x5b, 0xc9,
				0x71, 0x11, 0x40, 0x17, 0xf7, 0xe3, 0x98, 0x32, 0x88, 0x28, 0x2b, 0xc4, 0xd3, 0x4d, 0x06, 0xad,
				0x32, 0x06, 0xff, 0x0c, 0x5e, 0xcc, 0x58, 0x01, 0x40, 0x4b, 0xcb, 0x61, 0x8e, 0x40, 0x46, 0x60,
				0x88, 0x46, 0xea, 0xc1, 0xf7, 0x18, 0x94, 0x39, 0x36, 0x88, 0x2a, 0x2a, 0x59, 0x11, 0xf9, 0xd5,
				0xab, 0x36, 0x97, 0xd2, 0x5a, 0x29, 0x79, 0xb7, 0x59, 0xdb, 0xc0, 0xd9, 0xa3, 0xb5, 0x68, 0xda,
				0x56, 0x2b, 0x25, 0x79, 0x33, 0x33, 0xe5, 0x4f, 0xbf, 0x1d, 0xb0, 0xf0, 0xd6, 0xc3, 0x7c, 0x40,
				0x80, 0x26, 0x32, 0xd0, 0x59, 0x71, 0x7f, 0x7e, 0x1e, 0x28, 0x7b, 0xda, 0x48, 0x05, 0x60, 0x02,
				0xea, 0x47, 0xda, 0x3a, 0xdf, 0xf9, 0x0d, 0x6a, 0xad, 0xd6, 0x08, 0x94, 0x21, 0xe7, 0xe1, 0xec,
				0xe1, 0x95, 0x90, 0x61, 0x4c, 0x8c, 0x41, 0x76, 0x64, 0xde, 0x65, 0xcf, 0x1f, 0x2b, 0x27, 0xdc,
				0xa1, 0x69, 0x78, 0x14, 0xcc, 0x6c, 0xfb, 0xac, 0x91, 0x72, 0xe0, 0xca, 0x79, 0xda, 0xba, 0xa8,
				0xfc, 0x25, 0x5f, 0x2a, 0xab, 0xb4, 0xd2, 0x76, 0xf2, 0x19, 0x80, 0x7c, 0x5b, 0xc8, 0x11, 0xfa,
				0x49, 0x0c, 0xb4, 0x1d, 0x8a, 0x5b, 0x37, 0xd3, 0x4e, 0x44, 0x29, 0x53, 0x8e, 0xf7, 0xa0, 0x3f,
				0x25, 0xbb, 0x5d, 0x4d, 0x2e, 0xeb, 0xf5, 0xeb, 0xa4, 0x56, 0xf9, 0x6f, 0x51, 0xe3, 0x8e, 0x90,
				0x42, 0x0c, 0xc4, 0x64, 0xb9, 0x9e, 0xab, 0x19, 0xbe, 0x92, 0x91, 0x92, 0x2f, 0x8f, 0x3f, 0xdb,
				0x1f, 0xdf, 0xcd, 0xd4, 0x7f, 0x01, 0x6f, 0x05, 0xb3, 0x5b, 0x84, 0xe7, 0x74, 0xa4, 0x00, 0x00,
				0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::ColorTypeNotSupported == error);
		}
	};

	TEST_CLASS(PngSuiteOddSizes)
	{
	public:
		TEST_METHOD(s01i3p01)
		{
			std::vector<BYTE> input = {
				0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
				0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x00, 0x00, 0x01, 0x52, 0xdc, 0x66,
				0x5c, 0x00, 0x00, 0x00, 0x04, 0x67, 0x41, 0x4d, 0x41, 0x00, 0x01, 0x86, 0xa0, 0x31, 0xe8, 0x96,
				0x5f, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49, 0x54, 0x04, 0x04, 0x04, 0x77, 0xf8, 0xb5, 0xa3,
				0x00, 0x00, 0x00, 0x03, 0x50, 0x4c, 0x54, 0x45, 0x00, 0x00, 0xff, 0x8a, 0x78, 0xd2, 0x57, 0x00,
				0x00, 0x00, 0x0a, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x63, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00,
				0x01, 0x48, 0xaf, 0xa4, 0x71, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
				0x82
			};

			std::vector<BYTE> expected = {
				0x00, 0x00, 0xFF
			};

			AssetSuite::ImageDescriptor imageDescriptor;
			AssetSuite::PngDecoder pngDecoder;
			std::vector<BYTE> actual;
			auto error = pngDecoder.Decode(actual, input.data(), imageDescriptor);
			Assert::AreEqual(true, AssetSuite::DecoderError::NoDecoderError == error, L"Wrong error code");

			// Test the metadata calculation
			Assert::AreEqual((UINT)32, imageDescriptor.width);
			Assert::AreEqual((UINT)32, imageDescriptor.height);
			Assert::AreEqual(true, AssetSuite::ImageFormat::RGB8 == imageDescriptor.format, L"Image format is incorrect");

			Assert::AreEqual(expected.size(), actual.size(), L"Output vector size is incorrect");
			for (int i = 0; i < expected.size(); i++)
			{
				Assert::AreEqual(expected[i], actual[i]);
			}
		}
	};
}